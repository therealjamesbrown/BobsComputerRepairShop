{"version":3,"sources":["./src/app/pages/administration/catalogmanagement/catalogmanagement.component.ts","./src/app/pages/administration/catalogmanagement/catalogmanagement.component.html","./src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.ts","./src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/administration/administration.component.ts","./src/app/pages/administration/administration.component.html","./src/app/shared/auth-layout/auth-layout.component.ts","./src/app/shared/auth-layout/auth-layout.component.html","./src/app/pages/create-account/create-account.component.ts","./src/app/pages/create-account/create-account.component.html","./src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.ts","./src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.html","./src/environments/environment.ts","./src/app/shared/auth.guard.ts","./src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.ts","./src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.html","./src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.ts","./src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.html","./src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.ts","./src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.html","./src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.ts","./src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.html","./src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.ts","./src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.html","./src/app/pages/administration/rolemanagement/rolemanagement.component.ts","./src/app/pages/administration/rolemanagement/rolemanagement.component.html","./src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.ts","./src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.html","./src/app/pages/administration/services/role.service.ts","./src/app/app.component.ts","./src/app/pages/pricing/pricing.component.ts","./src/app/pages/pricing/pricing.component.html","./src/app/pages/signin/signin.component.ts","./src/app/pages/signin/signin.component.html","./src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.ts","./src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.html","./src/app/pages/contact/contact.component.ts","./src/app/pages/contact/contact.component.html","./src/app/pages/administration/services/security-question.service.ts","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/app.module.ts","./src/app/pages/notfound/notfound.component.ts","./src/app/pages/notfound/notfound.component.html","./src/app/shared/error.interceptor.ts","./src/app/pages/administration/purchasegraph/purchasegraph.component.ts","./src/app/pages/administration/purchasegraph/purchasegraph.component.html","./src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.ts","./src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.html","./src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.ts","./src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.html","./src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.ts","./src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.html","./src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.ts","./src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.html","./src/app/pages/administration/usermanagement/usermanagement.component.ts","./src/app/pages/administration/usermanagement/usermanagement.component.html","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.ts","./src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.html","./src/app/pages/administration/services/catalog.service.ts","./src/app/shared/base-layout/base-layout.component.ts","./src/app/shared/base-layout/base-layout.component.html","./src/app/app-routing.module.ts","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEwD;AACA;AACA;;;;;;;;;;;ICPpG,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEAAwC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAKxD,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEAAwC;IAAA,uDAA6B;;IAAA,4DAAK;;;IAAlC,0DAA6B;IAA7B,8JAA6B;;;IAKrE,yEAAuC;IAAA,wEAAY;IAAA,4DAAK;;;IACxD,yEAAwC;IAAA,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,kGAAuB;;;IAKjE,oEAA2C;;;;IAC3C,yEACI;IACF,6EACI;IAAA,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAChC,4DAAS;IACT,qFACE;IAAA,6EACE;IADoB,uXAAoC;IACxD,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IACzB,uEAAM;IAAA,gEAAI;IAAA,4DAAO;IACnB,4DAAS;IACT,8EACE;IADoB,wXAAoC;IACxD,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,wEAAM;IAAA,mEAAO;IAAA,4DAAO;IACtB,4DAAS;IACX,4DAAW;IACjB,4DAAK;;;IAbuB,0DAA0B;IAA1B,mFAA0B;;;IAiBtD,oEAA4D;;;IAC5D,oEAAkE;;ADvB/D,MAAM,0BAA0B;IAMrC,YAAoB,IAAgB,EAAU,MAAiB,EAAU,aAA6B;QAAlF,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAW;QAAU,kBAAa,GAAb,aAAa,CAAgB;QAHtG,qBAAgB,GAAa,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACpE,YAAO,GAAa,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAGxC;;;aAGK;QACH,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACvD,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YACrC,sCAAsC;QACxC,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACN,CAAC;IAED,QAAQ;IACR,CAAC;IAEC;;;;;KAKC;IAEH,YAAY;IACZ,iBAAiB;QACf,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qHAA0B,EAAE;YAC7D,IAAI,EAAE,EAEL;YACD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,KAAK,QAAQ,EAAC;gBACtB,kBAAkB;gBAClB,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACvD,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBACrC,sCAAsC;gBACxC,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;IACZ,iBAAiB,CAAC,IAAI;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qHAA0B,EAAE;YAC7D,IAAI,EAAE;gBACJ,IAAI;gBACJ,YAAY,EAAE,qBAAqB;aACpC;YACD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAG,MAAM,KAAK,QAAQ,EAAC;gBACrB,kBAAkB;gBAElB,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACvD,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACtC,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;IACZ,iBAAiB,CAAC,WAAW;QAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qHAA0B,EAAE;YAC7D,IAAI,EAAE;gBACJ,WAAW;gBACX,YAAY,EAAE,gBAAgB;gBAC9B,UAAU,EAAE,oCAAoC,WAAW,CAAC,KAAK,EAAE;aACpE;YACD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAG,MAAM,KAAK,SAAS,EAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;oBACrE,sCAAsC;oBACtC,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACxD,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;wBACrC,sCAAsC;oBACxC,CAAC,EAAE,GAAG,CAAC,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC,CAAC;gBACH,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;gBAClB,CAAC,CAAC;aAEF;QACH,CAAC,CAAC;IACJ,CAAC;;oGA3GU,0BAA0B;0GAA1B,0BAA0B;QCzBvC,oEAAG;QAAA,gEAAK;QAAA,4EAAoE;QAA9B,kJAAS,uBAAmB,IAAC;QAAC,8EAAiC;QAAA,sEAAW;QAAA,4DAAW;QAAA,4DAAS;QAAA,4DAAI;QAEhJ,2EAEI;QAIA,2EACE;QAAA,oHAAuC;QACvC,oHAAwC;QAC1C,qEAAe;QAGf,2EACI;QAAA,sHAAuC;QACvC,sHAAwC;QAC1C,qEAAe;QAGjB,4EACI;QAAA,sHAAuC;QACvC,sHAAwC;QAC1C,qEAAe;QAGjB,4EACE;QAAA,sHAAsC;QACtC,uHACI;QAeN,qEAAe;QAGf,sHAAuD;QACvD,uHAA6D;QAC/D,4DAAQ;;QA/CO,0DAAgC;QAAhC,6FAAgC;QA6C1B,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;;6FDvBnD,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;;;;;;AAQlE,MAAM,0BAA0B;IAErC,YACU,cAA8B,EAC9B,IAAgB,EAChB,EAAe,EACf,SAAmD,EAClC,IAAI;QAJrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,SAAI,GAAJ,IAAI,CAAY;QAChB,OAAE,GAAF,EAAE,CAAa;QACf,cAAS,GAAT,SAAS,CAA0C;IAC1B,CAAC;IAOpC,QAAQ;QACN,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjC,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;QAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;QAE9D,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YACnE,KAAK;YACL,KAAK;QACP,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;;oGA/BU,0BAA0B,olBAO3B,wEAAe;0GAPd,0BAA0B;QCtBvC,yEACI;QAAA,8EACI;QAAA,iFAAgB;QAAA,8EAAmB;QAAA,4DAAiB;QACpD,gEACA;QAAA,0EACI;QADsC,sJAAY,uBAAmB,IAAC;QACtE,mFACI;QAAA,yEACI;QAAA,iFACI;QAAA,sEAIJ;QAAA,4DAAiB;QACjB,kFACI;QAAA,uEAIJ;QAAA,4DAAiB;QACrB,4DAAM;QACV,4DAAmB;QACnB,uFACI;QAAA,6EAAkE;QAAA,kEAAM;QAAA,4DAAS;QACjF,6EAKiB;QAAA,kEAAM;QAAA,4DAAS;QACpC,4DAAmB;QACvB,4DAAO;QACX,4DAAW;QACf,4DAAM;;QA5BQ,0DAAmC;QAAnC,gGAAmC;QAuBjB,2DAAyC;QAAzC,sGAAyC;;6FDL5D,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;sBAQI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE7B3B;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAG+C;;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCpB1B,yEACE;QAAA,wEACE;QAAA,8GAAkD;QAAA,gEAClD;QAAA,0EACE;QAAA,kOACF;QAAA,4DAAO;QACT,4DAAK;QACP,4DAAM;;6FDaO,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;;;;;;;;;AAS3C,MAAM,uBAAuB;IAMlC,gBAAgB,CAAC;IACjB,QAAQ,KAAK,CAAC;;8FAPH,uBAAuB;uGAAvB,uBAAuB;QCrBpC,qEAAI;QAAA,mFAAwB;QAAA,4DAAK;QACjC,yEACI;QAAA,yEACA;QAAA,8EACI;QAAA,mFACI;QAAA,yEAIZ;QACI,yEACI;QAAA,yEAAY;QAAA,2EACR;QAAA,oFACP;QAAA,iFAAyC;QAC1C,4DAAmB;QACnB,4DAAW;QACP,4DAAM;QACV,4DAAM;QAMV,0EACI;QAAA,0EACI;QAAA,0EACR;QACA,4EACI;QAAA,oFACW;QAAA,6FAAiE;QACpE,4DAAmB;QACnB,4DAAW;QACX,4DAAM;QAEV,0EACR;QACA,4EACI;QAAA,oFACW;QAAA,iFAAyC;QAC5C,4DAAmB;QACnB,4DAAW;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QAMV,0EACI;QAAA,0EACI;QAAA,0EACR;QACe,4EACI;QAAA,oFACK;QAAA,oFAA+C;QACnD,4DAAmB;QACvB,4DAAW;QACf,4DAAM;QAEV,0EACR;QACY,4EACI;QAAA,oFACI;QAAA,gFAAuC;QAC3C,4DAAmB;QACvB,4DAAW;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QAKV,4DAAM;QACN,4DAAmB;QACnB,4DAAW;QACX,4DAAM;QACN,iEACA;QAAA,4DAAM;;6FD1DO,uBAAuB;cAPnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;;;AAO3C,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCnBhC,2EAA+B;;6FDmBlB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;GAWG;AAC2D;AACZ;AAC8B;;;;;;;;;;;;;;;ICL1C,2EAAgB;;;;IAoC1C,iFACI;IADQ,uWAA6B;IACrC,6EAAY;IAAA,uDAAyB;IAAA,4DAAa;IACtD,4DAAa;;;;IAFD,2FAA6B;IACzB,0DAAyB;IAAzB,uFAAyB;;;;IAOzC,iFACI;IADQ,wWAA6B;IACrC,6EAAY;IAAA,uDAAyB;IAAA,4DAAa;IACtD,4DAAa;;;;IAFD,2FAA6B;IACzB,0DAAyB;IAAzB,uFAAyB;;;;IAOzC,iFACI;IADQ,0WAA6B;IACrC,6EAAY;IAAA,uDAAyB;IAAA,4DAAa;IACtD,4DAAa;;;;IAFD,2FAA6B;IACzB,0DAAyB;IAAzB,wFAAyB;;ADpC9C,MAAM,sBAAsB;IAMjC,YAAoB,aAA4B,EAAU,MAAc,EAAU,IAAgB,EAAU,EAAe;QAAvG,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,OAAE,GAAF,EAAE,CAAa;IAAI,CAAC;IAChI,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpD,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,iBAAiB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7D,uBAAuB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnE,iBAAiB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7D,uBAAuB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnE,iBAAiB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7D,uBAAuB,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpE,CAAC;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACrD,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IACD,eAAe;QACb,IAAI,CAAC,OAAO,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACnD,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACnD,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;YACrD,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACnD,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;YACzD,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;SAClD;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzD,IAAI,GAAG,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;aACjB;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;aAC1B;QACH,CAAC,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;IAC7B,CAAC;IACD,oBAAoB;QACnB,IAAI,oBAAoB,GAAG;YACzB,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK;YACtE,uBAAuB,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,KAAK;YAClF,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK;YACtE,uBAAuB,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,KAAK;YACjF,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,KAAK;YACtE,uBAAuB,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,KAAK;SACnF;QACD,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;IAClC,CAAC;IACD,MAAM;QACL,IAAI,UAAU,GAAG;YACf,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACnD,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;SACpD;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACjE,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE;gBACxB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;aAC5B;QACF,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;IAC7B,CAAC;;4FAzEU,sBAAsB;sGAAtB,sBAAsB,mHAJtB,CAAC;gBACV,OAAO,EAAE,2EAAsB,EAAE,QAAQ,EAAE,EAAE,2BAA2B,EAAE,KAAK,EAAE;aAClF,CAAC;QCxBJ,2EACI;QAAA,iFACI;QAAA,uEAA8C;QAAA,kFAAuB;QAAA,4DAAI;QAC7E,4DAAiB;QACrB,4DAAW;QACX,kGACI;QAAA,8EACG;QAAA,wEAAgC;QAAA,kEAAO;QAAA,4DAAK;QAC3C,0EACI;QAAA,oIAA0B;QAC1B,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACJ;QAAA,4DAAiB;QACjB,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACJ;QAAA,4DAAiB;QACjB,kFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,uEACJ;QAAA,4DAAiB;QACjB,kFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,uEACJ;QAAA,4DAAiB;QACjB,kFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,wEACJ;QAAA,4DAAiB;QACjB,kFACI;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,wEACJ;QAAA,4DAAiB;QACjB,uEACI;QAAA,yEAAgC;QAAA,mEAAO;QAAA,4DAAI;QAC3C,8EAA8D;QAA3C,+IAAS,qBAAiB,IAAC;QAAgB,0EAAc;QAAA,4DAAS;QACzF,4DAAM;QACV,4DAAO;QACX,4DAAW;QACX,gFACI;QAAA,2EACA;QAAA,yEAAgC;QAAA,8EAAkB;QAAA,4DAAK;QACvD,sFACI;QAAA,6EAAW;QAAA,qFAAyB;QAAA,4DAAY;QAChD,mIACI;QAEJ,wEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,sFACI;QAAA,6EAAW;QAAA,qFAAyB;QAAA,4DAAY;QAChD,mIACI;QAEJ,wEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,sFACI;QAAA,6EAAW;QAAA,qFAAyB;QAAA,4DAAY;QAChD,mIACI;QAEJ,wEACJ;QAAA,4DAAiB;QACjB,uEACI;QAAA,8EAAsC;QAAA,gEAAI;QAAA,4DAAS;QACnD,8EAAmE;QAAhD,+IAAS,0BAAsB,IAAC;QAAgB,+DAAG;QAAA,4DAAS;QACnF,4DAAM;QACV,4DAAO;QACP,4DAAW;QACX,gFACI;QAAA,yEAAgC;QAAA,mEAAO;QAAA,4DAAK;QAC5C,2EACA;QAAA,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACJ;QAAA,4DAAiB;QACjB,uEACI;QAAA,8EAAsC;QAAA,0EAAc;QAAA,4DAAS;QAC7D,8EAAqD;QAAlC,+IAAS,YAAQ,IAAC;QAAgB,mEAAO;QAAA,4DAAS;QACzE,4DAAM;QACV,4DAAO;QACX,4DAAW;QACX,4DAAyB;;QApFX,0DAA8B;QAA9B,2FAA8B;QAE9B,0DAA4B;QAA5B,yFAA4B;QAgC5B,2DAA+B;QAA/B,4FAA+B;QAC/B,0DAA6B;QAA7B,0FAA6B;QAIW,0DAAkC;QAAlC,kFAAkC;QAQlC,0DAAkC;QAAlC,kFAAkC;QAQlC,0DAAkC;QAAlC,kFAAkC;QAW1E,0DAA8B;QAA9B,2FAA8B;QAE9B,0DAA4B;QAA5B,yFAA4B;;6FDhD7B,sBAAsB;cARlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;gBAC7C,SAAS,EAAE,CAAC;wBACV,OAAO,EAAE,2EAAsB,EAAE,QAAQ,EAAE,EAAE,2BAA2B,EAAE,KAAK,EAAE;qBAClF,CAAC;aACH;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;;;;;;AAUlE,MAAM,yBAAyB;IAEtC,YACU,UAAuB,EACvB,IAAgB,EAChB,EAAe,EACf,SAAkD,EACjC,IAAI;QAJrB,eAAU,GAAV,UAAU,CAAa;QACvB,SAAI,GAAJ,IAAI,CAAY;QAChB,OAAE,GAAF,EAAE,CAAa;QACf,cAAS,GAAT,SAAS,CAAyC;IACzB,CAAC;IAOlC,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChC,CAAC;IACJ,CAAC;IAED,2CAA2C;IAC5C,UAAU;QAET,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAChD,IAAI;QACN,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,KAAK,CAAC,mJAAmJ,CAAC,CAAC;QAC7J,CAAC,CAAC;IACJ,CAAC;;kGA/BY,yBAAyB,0mBAO5B,wEAAe;yGAPZ,yBAAyB;QCxBtC,yEACI;QAAA,8EACI;QAAA,iFAAgB;QAAA,sEAAW;QAAA,4DAAiB;QAC5C,gEACA;QAAA,0EACI;QAD+B,qJAAY,gBAAY,IAAC;QACxD,mFACI;QAAA,yEACI;QAAA,iFACI;QAAA,sEAIJ;QAAA,4DAAiB;QACrB,4DAAM;QACV,4DAAmB;QACnB,uFACI;QAAA,6EAAkE;QAAA,kEAAM;QAAA,4DAAS;QACjF,6EAKiB;QAAA,kEAAM;QAAA,4DAAS;QACpC,4DAAmB;QACvB,4DAAO;QACX,4DAAW;QACf,4DAAM;;QAtBQ,0DAA4B;QAA5B,yFAA4B;QAiBV,0DAAkC;QAAlC,+FAAkC;;6FDGrD,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;sBAQE,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE/BzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;GAWG;AAEwC;;;;AAQpC,MAAM,SAAS;IACpB,yEAAyE;IACzE,YAAoB,MAAc,EAAU,aAA4B;QAApD,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;IAExE,CAAC;IAED,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAC1B,MAAM,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC9D,IAAG,eAAe,EAAC;YACjB,OAAO,IAAI,CAAC;SACb;aAAM;YACP,sEAAsE;YACtE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC1C,OAAO,KAAK,CAAC;SACb;IACF,CAAC;;kEAjBU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAEuD;AACe;;;;AAQlE,MAAM,qCAAqC;IAQhD,YAAoB,SAA8D,EACvD,IAAI;QADX,cAAS,GAAT,SAAS,CAAqD;QAGhF,sBAAsB;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACpC,CAAC;IAED,QAAQ;IACR,CAAC;;0HAlBU,qCAAqC,0MAStC,wEAAe;qHATd,qCAAqC;QCrBlD,wEAAqB;QAAA,uDAAkB;QAAA,4DAAK;QAE5C,yEACE;QAAA,oEAAI;QAAA,uDAAiB;QAAA,4DAAI;QAC3B,4DAAM;QAEN,gEAEA;QAAA,yEACE;QAAA,4EAAkE;QAAA,iEAAM;QAAA,4DAAS;QACjF,4EAAkF;QAAA,mEAAO;QAAA,4DAAS;QACpG,4DAAM;;QAXe,0DAAkB;QAAlB,iFAAkB;QAGjC,0DAAiB;QAAjB,0FAAiB;;6FDkBV,qCAAqC;cALjD,uDAAS;eAAC;gBACT,QAAQ,EAAE,oCAAoC;gBAC9C,WAAW,EAAE,iDAAiD;gBAC9D,SAAS,EAAE,CAAC,gDAAgD,CAAC;aAC9D;;sBAUI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE9B3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;AAE+C;AAGsC;AACM;;;;;;;AAOvF,MAAM,uBAAuB;IAElC,YAAoB,MAAiB,EAAU,aAA4B;QAAvD,WAAM,GAAN,MAAM,CAAW;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAEhF,QAAQ;IACR,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8FAAkB,CAAC;IACrC,CAAC;IACD,MAAM;QACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAoB,CAAC;IACxC,CAAC;;8FAXU,uBAAuB;uGAAvB,uBAAuB;QCtBpC,2EACI;QAAA,iFACI;QAAA,oEAAG;QAAA,uEAAY;QAAA,4DAAI;QACvB,4DAAiB;QACjB,sFACI;QAAA,4EAAuD;QAAnB,+IAAS,YAAQ,IAAC;QAAC,8EAAiC;QAAA,iEAAM;QAAA,4DAAW;QAAA,4DAAS;QAClH,4EAAuD;QAAnB,+IAAS,YAAQ,IAAC;QAAC,8EAAiC;QAAA,kEAAM;QAAA,4DAAW;QAAA,4DAAS;QACtH,4DAAmB;QAPvB,4DACI;;6FDqBS,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AErBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;AAEuD;AACe;;;;;AASlE,MAAM,0BAA0B;IAKrC,YAAoB,SAAmD,EAC7D,cAA8B,EACb,IAAI;QAFX,cAAS,GAAT,SAAS,CAA0C;QAC7D,mBAAc,GAAd,cAAc,CAAgB;QAEpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACnC,CAAC;IAEJ,QAAQ;IACR,CAAC;;oGAfU,0BAA0B,qVAO3B,wEAAe;0GAPd,0BAA0B;QCrBvC,wEAAqB;QAAA,uDAAkB;QAAA,4DAAK;QAC5C,yEACI;QAAA,oEAAI;QAAA,uDAAgB;QAAA,4DAAI;QAE5B,4DAAM;QAGN,gEAEA;QAAA,yEACI;QAAA,4EAAkE;QAAA,iEAAM;QAAA,4DAAS;QACjF,4EAAkE;QAAA,mEAAO;QAAA,4DAAS;QACtF,4DAAM;;QAZe,0DAAkB;QAAlB,iFAAkB;QAE/B,0DAAgB;QAAhB,yFAAgB;;6FDmBX,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;sBAQI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEd3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;;;;;;;;AAQlE,MAAM,0BAA0B;IAUrC,YACU,cAA8B,EAC9B,IAAgB,EAChB,EAAe,EACf,SAAmD,EAClC,IAAI;QAJrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,SAAI,GAAJ,IAAI,CAAY;QAChB,OAAE,GAAF,EAAE,CAAa;QACf,cAAS,GAAT,SAAS,CAA0C;QAP7D,YAAO,GAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAU/B,iDAAiD;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QAEvC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3C,+BAA+B;YAC7B,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,aAAa,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC;YACnC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC;IACJ,CAAC;IAEH,QAAQ;IACR,CAAC;IAED,iBAAiB;QACf,sCAAsC;QACtC,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;QAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;QAC9D,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;QAC9E,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEjC,gEAAgE;QAChE,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAC9F,aAAa;YACb,KAAK;YACL,KAAK;YACL,UAAU;QACZ,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;;oGAnDU,0BAA0B,olBAe3B,wEAAe;0GAfd,0BAA0B;QCxBvC,yEACI;QAAA,8EACI;QAAA,iFAAgB;QAAA,sEAAW;QAAA,4DAAiB;QAC5C,gEACA;QAAA,0EACI;QADsC,sJAAY,uBAAmB,IAAC;QACtE,mFACI;QAAA,yEACI;QAAA,iFACI;QAAA,sEAIJ;QAAA,4DAAiB;QAEjB,kFACI;QAAA,uEAIJ;QAAA,4DAAiB;QAGjB,kFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,iFACE;QADU,kMAAoB;QAC9B,iFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,iFAA0B;QAAA,iEAAK;QAAA,4DAAa;QAC9C,4DAAa;QAEjB,4DAAiB;QACrB,4DAAM;QACV,4DAAmB;QACnB,uFACI;QAAA,8EAAkE;QAAA,kEAAM;QAAA,4DAAS;QACjF,8EAKiB;QAAA,kEAAM;QAAA,4DAAS;QACpC,4DAAmB;QACvB,4DAAO;QACX,4DAAW;QACf,4DAAM;;QAvCQ,0DAAmC;QAAnC,gGAAmC;QAoBb,2DAAoB;QAApB,+EAAoB;QAcxB,0DAAyC;QAAzC,sGAAyC;;6FDd5D,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;sBAgBI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE3B3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AACK;;;;;;;;;;;;;AASlE,MAAM,yBAAyB;IAQpC,YAAoB,UAAuB,EAAU,IAAgB,EAAU,EAAe,EAAU,SAAkD,EAA2B,IAAI;QAArK,eAAU,GAAV,UAAU,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,cAAS,GAAT,SAAS,CAAyC;QAF1J,YAAO,GAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAGjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QAEvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YACrB,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAGD,QAAQ;IACR,CAAC;IAEH,UAAU;QACR,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QACrD,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEjC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YACpE,IAAI;YACJ,MAAM;YACN,UAAU;QACZ,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;;kGApCY,yBAAyB,8kBAQgI,wEAAe;yGARxK,yBAAyB;QCvBtC,yEACI;QAAA,8EACI;QAAA,iFAAgB;QAAA,sEAAW;QAAA,4DAAiB;QAC5C,gEACA;QAAA,0EACI;QAD+B,qJAAY,gBAAY,IAAC;QACxD,mFACI;QAAA,yEACI;QAAA,iFACI;QAAA,sEAIJ;QAAA,4DAAiB;QAEjB,kFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,iFACE;QADU,iMAAoB;QAC9B,iFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,iFAA0B;QAAA,iEAAK;QAAA,4DAAa;QAC9C,4DAAa;QAEjB,4DAAiB;QACrB,4DAAM;QACV,4DAAmB;QACnB,uFACI;QAAA,6EAAkE;QAAA,kEAAM;QAAA,4DAAS;QACjF,8EAKiB;QAAA,kEAAM;QAAA,4DAAS;QACpC,4DAAmB;QACvB,4DAAO;QACX,4DAAW;QACf,4DAAM;;QA/BQ,0DAA4B;QAA5B,yFAA4B;QAYN,0DAAoB;QAApB,+EAAoB;QAcxB,0DAAkC;QAAlC,+FAAkC;;6FDPrD,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;sBAS8J,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE/BrL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;AAEyE;AAQqD;AAC1B;AACA;;;;;;;;;;ICXjG,yEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IACjD,yEAAwC;IAAA,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,2FAAiB;;;IAKvD,yEAAuC;IAAA,wEAAY;IAAA,4DAAK;;;IACxD,yEAAwC;IAAA,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,iGAAuB;;;IAKjE,oEAA2C;;;;IAC3C,yEACI;IACF,6EACI;IAAA,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAChC,4DAAS;IACT,qFACE;IAAA,6EACE;IADoB,6WAA6B;IACjD,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IACzB,uEAAM;IAAA,gEAAI;IAAA,4DAAO;IACnB,4DAAS;IACT,8EACE;IADoB,kXAAiC;IACrD,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,wEAAM;IAAA,mEAAO;IAAA,4DAAO;IACtB,4DAAS;IACX,4DAAW;IACjB,4DAAK;;;;IAbuB,0DAA0B;IAA1B,mFAA0B;IAIM,0DAAqC;IAArC,kGAAqC;IAIjC,0DAAqC;IAArC,kGAAqC;;;IASrG,oEAA4D;;;IAC5D,oEAAkE;;ADpBtE,mCAAmC;AAW5B,MAAM,uBAAuB;IAKlC,YAAoB,IAAgB,EAAU,MAAiB,EAAU,UAAuB;QAA5E,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAW;QAAU,eAAU,GAAV,UAAU,CAAa;QAHhG,qBAAgB,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC1D,YAAO,GAAa,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAIxC;;YAEI;QACH,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC7C,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAClC,mCAAmC;QACrC,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACL,CAAC;IACD,QAAQ;IACR,CAAC;IAED;;;;;OAKG;IAEF,kBAAkB;IAClB,UAAU;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kHAAyB,EAAE;YAC5D,IAAI,EAAE,EAEL;YACD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,KAAK,QAAQ,EAAC;gBACvB,iBAAiB;gBACjB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAC7C,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBAClC,mCAAmC;gBACrC,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAGD,kBAAkB;IAClB,UAAU,CAAC,IAAI;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kHAAyB,EAAE;YAC5D,IAAI,EAAE;gBACJ,IAAI;gBACJ,YAAY,EAAE,eAAe;aAC9B;YACD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAC,OAAO;SACd,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAG,MAAM,KAAK,QAAQ,EAAE;gBACvB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAC7C,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBAClC,mCAAmC;gBACrC,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAED,kBAAkB;IACnB,UAAU,CAAC,MAAM;QACd,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6IAAoC,EAAE;YACvE,IAAI,EAAE;gBACJ,MAAM;gBACN,YAAY,EAAE,gBAAgB;gBAC9B,UAAU,EAAE,yCAAyC,MAAM,GAAG;aAC/D;YACD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACjD,0CAA0C;oBAC1C,sCAAsC;oBACtC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBAC9C,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;wBAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACnC,CAAC,EAAE,GAAG,CAAC,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC,CAAC;gBACH,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACL,CAAC;;8FArGU,uBAAuB;uGAAvB,uBAAuB;QCjCpC,oEAAG;QAAA,iEAAM;QAAA,4EAA4D;QAAvB,+IAAS,gBAAY,IAAC;QAAC,8EAAiC;QAAA,sEAAW;QAAA,4DAAW;QAAA,4DAAS;QAAA,4DAAI;QAEzI,2EAEI;QAIA,2EACE;QAAA,iHAAuC;QACvC,iHAAwC;QAC1C,qEAAe;QAGf,2EACI;QAAA,mHAAuC;QACvC,mHAAwC;QAC1C,qEAAe;QAGjB,4EACE;QAAA,mHAAsC;QACtC,oHACI;QAeN,qEAAe;QAGf,mHAAuD;QACvD,mHAA6D;QAC/D,4DAAQ;;QAzCO,0DAA6B;QAA7B,0FAA6B;QAuCvB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;;6FDTnD,uBAAuB;cARnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AE9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAEuD;AAEU;AACK;;;;;;;;;;;;;AAUlE,MAAM,qCAAqC;IAUhD,YAAoB,uBAAgD,EAAU,IAAgB,EAAU,EAAe,EAAU,SAA8D,EACpK,IAAI;QADX,4BAAuB,GAAvB,uBAAuB,CAAyB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,cAAS,GAAT,SAAS,CAAqD;QAH/L,YAAO,GAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAM/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACvC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACvC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9C,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,kBAAkB,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAC7C,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC;IACH,CAAC;IAEJ,QAAQ;IACR,CAAC;IAED,sBAAsB;QACpB,MAAM,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC;QAC7E,MAAM,kBAAkB,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAC7F,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEjC,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAC/G,kBAAkB;YAClB,UAAU;YACV,UAAU;QACZ,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;;0HAtCU,qCAAqC,umBAWtC,wEAAe;qHAXd,qCAAqC;QCzBlD,yEACI;QAAA,8EACI;QAAA,iFAAgB;QAAA,mFAAwB;QAAA,4DAAiB;QACzD,gEACA;QAAA,0EACI;QAD2C,iKAAY,4BAAwB,IAAC;QAChF,mFACI;QAAA,yEACI;QAAA,iFACI;QAAA,sEAIJ;QAAA,4DAAiB;QAEjB,kFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,iFACE;QADU,6MAAoB;QAC9B,iFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAC1C,iFAA0B;QAAA,iEAAK;QAAA,4DAAa;QAC9C,4DAAa;QAEjB,4DAAiB;QACrB,4DAAM;QACV,4DAAmB;QACnB,uFACI;QAAA,6EAAkE;QAAA,kEAAM;QAAA,4DAAS;QACjF,8EAKiB;QAAA,kEAAM;QAAA,4DAAS;QACpC,4DAAmB;QACvB,4DAAO;QACX,4DAAW;QACf,4DAAM;;QA/BQ,0DAAwC;QAAxC,qGAAwC;QAYlB,0DAAoB;QAApB,+EAAoB;QAcxB,0DAA8C;QAA9C,2GAA8C;;6FDLjE,qCAAqC;cALjD,uDAAS;eAAC;gBACT,QAAQ,EAAE,oCAAoC;gBAC9C,WAAW,EAAE,iDAAiD;gBAC9D,SAAS,EAAE,CAAC,gDAAgD,CAAC;aAC9D;;sBAYI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEpC3B;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;GAWG;AAEwC;;;AAQpC,MAAM,WAAW;IAEtB,oBAAoB;IACpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAGzC;;;;OAIG;IACF,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAED;;;;MAIE;IACH,YAAY,CAAC,MAAc;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,MAAM,EAAE,CAAC;IAC9C,CAAC;IAGA;;;;OAIG;IACN,UAAU,CAAC,IAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACnC,IAAI,EAAE,IAAI;SACX,CAAC;IACJ,CAAC;IAGC;;;;OAIG;IACL,UAAU,CAAC,MAAc,EAAE,IAAU,EAAE,UAAmB;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,MAAM,SAAS,EAAE;YAClD,IAAI;YACJ,UAAU;SACX,CAAC;IACJ,CAAC;IAEC;;;;OAIG;IACH,UAAU,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,MAAM,EAAE,EAAC;YAC5C,MAAM;SACP,CAAC;IACJ,CAAC;;sEA1DU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAEuC;;;AAOnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QAHZ,2EAA+B;;6FAG/B,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE,iCAAiC;gBAC3C,MAAM,EAAE,CAAC,EAAE,CAAC;aACb;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCnB7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;6FDmBR,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;AACa;AACK;;;;;;;;;;;;AAOpE,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH;AAOM,MAAM,eAAe;IAM1B,YAAoB,MAAc,EACxB,aAA4B,EAC5B,EAAe,EACf,IAAgB,EAChB,SAAsB;QAJZ,WAAM,GAAN,MAAM,CAAQ;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,OAAE,GAAF,EAAE,CAAa;QACf,SAAI,GAAJ,IAAI,CAAY;QAChB,cAAS,GAAT,SAAS,CAAa;QANhC,qBAAgB,GAAgC,QAAQ,CAAC;IAQzD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3D,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC5D,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;QACnD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEnD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAGtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YACpC,QAAQ;YACR,QAAQ;SACT,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAC;gBACvB,oBAAoB;gBACpB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,YAAY,GAAG,0CAA0C,CAAC;YAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,YAAY,CAAC,YAAoB;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE;YACzC,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE,KAAK;YACvB,UAAU,EAAE,OAAO;SACpB,CAAC,CAAC;IACL,CAAC;;8EApDU,eAAe;+FAAf,eAAe;QC/B5B,yEACI;QAAA,yEACI;QAAA,8EACI;QAAA,mFACJ;QACA,yEACI;QACA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QAGN,yEACI;QAAA,6EAGI;QAFE,oIAAY,YAAQ,SAAE,gBAAY,IAAC;QAErC,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEAGF;QAAA,4DAAiB;QAAA,iEACjB;QAAA,kFACE;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEAGF;QAAA,4DAAiB;QACjB,qEACE;QAAA,8EAIiC;QAAA,mEAAO;QAAA,4DAAS;QACnD,4DAAI;QACV,4DAAO;QACX,4DAAM;QAGN,0EACG;QAAA,yEAAkB;QAAA,4EAAgB;QAAA,4DAAI;QACzC,4DAAM;QAIN,0EACI;QAAA,qEACJ;QAAA,4DAAM;QAGN,2EACQ;QAAA,8EAIgD;QAAA,mEAAO;QAAA,4DAAS;QACxE,4DAAM;QACV,4DAAM;QACV,4DAAmB;QACnB,4DAAW;QACX,4DAAM;QACV,4DAAM;;QAhDgB,0DAAkB;QAAlB,+EAAkB;QAMT,0DAAyC;QAAzC,sGAAyC;QAMzC,0DAAyC;QAAzC,sGAAyC;QAQxC,0DAAwB;QAAxB,qFAAwB;;6FDF3C,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AE/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;AAE+C;AACiB;AACL;;;;;;;;;;AAG9D,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,6BAA6B,EAAE,GAAG;KACnC,CAAC;CACH;AAOM,MAAM,kBAAkB;IAG7B,YAAoB,aAA4B,EAAU,IAAgB,EAAU,EAAe;QAA/E,kBAAa,GAAb,aAAa,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,OAAE,GAAF,EAAE,CAAa;IAAI,CAAC;IACxG,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3D,QAAQ,EAAG,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5D,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5D,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3D,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1D,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxD,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC/D,CAAC;QACH;;;cAGM;IACP,CAAC;IACD,UAAU;QACR,IAAI,WAAW,GAAG;YAChB,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACpD,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACpD,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;YACtD,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACpD,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;YAClD,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;YAC9C,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;SAC3D;QACD,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mCAAmC,EAAE,EAAE,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/F,IAAI,GAAG;gBAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;;gBACpB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QACpC,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;;oFAnCU,kBAAkB;kGAAlB,kBAAkB;QC5B/B,8EACI;QAAA,mFACI;QAAA,0EACA;QADM,8IAAY,gBAAY,IAAC;QAC/B,iFACI;QAAA,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACxB,4DAAiB;QACb,iFACI;QAAA,4EAAW;QAAA,qEAAU;QAAA,4DAAY;QACjC,gEACA;QAAA,uEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,kFACI;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QACjB,iEACA;QAAA,sFACI;QAAA,6EAAoC;QAAA,kEAAM;QAAA,4DAAS;QACnD,8EAAiD;QAAA,uEAAW;QAAA,4DAAS;QACzE,4DAAqB;QACrB,iEACA;QAAA,iEACJ;QAAA,4DAAO;QACX,4DAAmB;QACnB,4DAAW;;QAtDyB,0DAA6B;QAA7B,0FAA6B;;6FD0BxD,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AE3BD;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCnB7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;6FDmBR,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;GAWG;AAGwC;;;AASpC,MAAM,uBAAuB;IAElC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAGzC;;;;OAIG;IACD,wBAAwB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IAClD,CAAC;IACF;;;;MAIE;IAEH,wBAAwB,CAAC,GAAW;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yBAAyB,GAAG,GAAG,CAAC,CAAC;IACxD,CAAC;IAGA;;;;OAIG;IAEL,sBAAsB,CAAC,UAAkB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE;YAC/C,UAAU;SACX,CAAC;IACJ,CAAC;IAEC;;;;OAIG;IAEF,sBAAsB,CAAC,GAAW,EAAE,UAAkB,EAAE,UAAmB;QAC3E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yBAAyB,GAAE,GAAG,EAAE;YACpD,UAAU;YACV,UAAU;SACT,CAAC;IACJ,CAAC;IAKD;;;;OAIG;IAEF,sBAAsB,CAAC,UAAkB;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,UAAU,EAAE;YAC7D,kBAAkB;YAClB,UAAU;SACX,CAAC,CAAC;IACL,CAAC;;8FA/DS,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCnB7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;6FDmBR,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAEuD;AACjB;AAEe;AACV;AACiC;AACnB;AACqB;AACA;AACzB;AACK;AACF;AACJ;AACoB;AACT;AACA;AACX;AACE;AACS;AACf;AACa;AACH;AACF;AACJ;AACA;AACmC;AACrB;AACA;AACA;AACN;AACN;AAC8D;AACH;AACM;AACjB;AACS;AACZ;AACuC;AAC/B;AAC7C;AACV;AAC8G;AAC1C;AACoC;AACA;AACpC;AAChE;AACsF;AAC3E;AACwD;AACA;AACA;AACiC;AACtE;AAC5B;AACJ;AACK;AACC;AACS;;AAyEjE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBANT,CAAE;YACX,OAAO,EAAE,uEAAiB,EAAE,QAAQ,EAAE,2EAAgB,EAAE,KAAK,EAAE,IAAI;SACpE;QACD,iEAAa,CAAE,YA/BN;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,qEAAgB;YAChB,0EAAgB;YAChB,yEAAe;YACf,qEAAa;YACb,sEAAgB;YAChB,2DAAW;YACX,mEAAmB;YACnB,qEAAa;YACb,uEAAc;YACd,gFAAkB;YAClB,8EAAiB;YACjB,2EAAgB;YAChB,yEAAe;YACf,qEAAa;YACb,qEAAa;YACb,uEAAc;YACd,qEAAa;YACb,+EAAkB;YAClB,qEAAa;YACb,yEAAe;YACf,oFAAoB;YACpB,2EAAgB;YAChB,uEAAe;SAChB;mIAOU,SAAS,mBAlElB,2DAAY;QACZ,wEAAa;QACb,6FAAmB;QACnB,6FAAmB;QACnB,+EAAe;QACf,uGAAuB;QACvB,kFAAgB;QAChB,kFAAgB;QAChB,kFAAgB;QAChB,4EAAc;QACd,mIAAmB;QACnB,gIAAkB;QAClB,sIAAoB;QACpB,sHAAuB;QACvB,+HAA0B;QAC1B,mHAAsB;QACtB,0JAAmC;QACnC,0HAAuB;QACvB,kLAAoC;QACpC,wIAAyB;QACzB,4KAAqC;QACrC,4KAAqC;QACrC,wIAAyB;QACzB,8JAAuB;QACvB,2IAA0B;QAC1B,2IAA0B;QAC1B,2IAA0B;QAC1B,4KAAqC;QACrC,sGAAsB;QACtB,4EAAc;QACd,qFAAiB,aAGjB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,qEAAgB;QAChB,0EAAgB;QAChB,yEAAe;QACf,qEAAa;QACb,sEAAgB;QAChB,2DAAW;QACX,mEAAmB;QACnB,qEAAa;QACb,uEAAc;QACd,gFAAkB;QAClB,8EAAiB;QACjB,2EAAgB;QAChB,yEAAe;QACf,qEAAa;QACb,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,+EAAkB;QAClB,qEAAa;QACb,yEAAe;QACf,oFAAoB;QACpB,2EAAgB;QAChB,uEAAe;6FAQN,SAAS;cApErB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAa;oBACb,6FAAmB;oBACnB,6FAAmB;oBACnB,+EAAe;oBACf,uGAAuB;oBACvB,kFAAgB;oBAChB,kFAAgB;oBAChB,kFAAgB;oBAChB,4EAAc;oBACd,mIAAmB;oBACnB,gIAAkB;oBAClB,sIAAoB;oBACpB,sHAAuB;oBACvB,+HAA0B;oBAC1B,mHAAsB;oBACtB,0JAAmC;oBACnC,0HAAuB;oBACvB,kLAAoC;oBACpC,wIAAyB;oBACzB,4KAAqC;oBACrC,4KAAqC;oBACrC,wIAAyB;oBACzB,8JAAuB;oBACvB,2IAA0B;oBAC1B,2IAA0B;oBAC1B,2IAA0B;oBAC1B,4KAAqC;oBACrC,sGAAsB;oBACtB,4EAAc;oBACd,qFAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,qEAAgB;oBAChB,0EAAgB;oBAChB,yEAAe;oBACf,qEAAa;oBACb,sEAAgB;oBAChB,2DAAW;oBACX,mEAAmB;oBACnB,qEAAa;oBACb,uEAAc;oBACd,gFAAkB;oBAClB,8EAAiB;oBACjB,2EAAgB;oBAChB,yEAAe;oBACf,qEAAa;oBACb,qEAAa;oBACb,uEAAc;oBACd,qEAAa;oBACb,+EAAkB;oBAClB,qEAAa;oBACb,yEAAe;oBACf,oFAAoB;oBACpB,2EAAgB;oBAChB,uEAAe;iBAChB;gBACD,SAAS,EAAE,CAAE;wBACX,OAAO,EAAE,uEAAiB,EAAE,QAAQ,EAAE,2EAAgB,EAAE,KAAK,EAAE,IAAI;qBACpE;oBACD,iEAAa,CAAE;gBACf,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC9ID;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAG+C;;;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCpB9B,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QAAA,gEAAM;QAAA,gEACZ;QAAA,yEACI;QAAA,oEACI;QAAA,oIACJ;QAAA,4DAAI;QACJ,oEACI;QAAA,wFACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAM;;6FDQO,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;GAWG;AAGwC;AAGG;AACF;;;AAGrC,MAAM,gBAAgB;IACzB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAElC,CAAC;IAED,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAC9C,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;gBAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAC1C;YAED,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAC1C;YAED,kCAAkC;YAClC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC;YAClD,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;;gFAnBQ,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACpBX;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;;AAO3C,MAAM,sBAAsB;IAEjC;QACE;;aAEK;IACP,CAAC;IAED,QAAQ;IACR,CAAC;;4FATU,sBAAsB;sGAAtB,sBAAsB;QCnBnC,oEAAG;QAAA,yEAAc;QAAA,4DAAI;QAAA,gEAAM;QAAA,gEAAM;QAAA,gEAAM;QAAA,gEACvC;QAAA,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACpB,gEAAM;QAAA,gEAAM;QAAA,iEAAM;;6FDiBL,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;AAE+C;AACiB;AACL;;;;;;;;;;AAE9D,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,6BAA6B,EAAE,GAAG;KACnC,CAAC;CACH;AAOM,MAAM,mBAAmB;IAE9B,YAAoB,EAAe,EAAU,IAAgB;QAAzC,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElE,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3D,QAAQ,EAAG,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5D,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5D,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3D,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1D,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxD,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC/D,CAAC;IACJ,CAAC;IACD,UAAU;QACR,IAAI,OAAO,GAAG;YACZ,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACnD,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACnD,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;YACrD,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACnD,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK;YACjD,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;YAC7C,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;SAC1D;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtF,IAAI,GAAG;gBAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;;gBACpB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAClC,CAAC,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IACD,MAAM;IAEN,CAAC;;sFAjCU,mBAAmB;mGAAnB,mBAAmB;QC3BhC,yEACA;QAAA,8EACI;QAAA,iFAAgB;QAAA,sEAAW;QAAA,4DAAiB;QAC5C,gEACI;QAAA,0EACA;QADM,+IAAY,gBAAY,IAAC;QAC/B,mFACI;QAAA,yEAEI;QAAA,iFACI;QAAA,sEAIJ;QAAA,4DAAiB;QAErB,kFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QAEjB,kFACI;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QAEjC,uEACJ;QAAA,4DAAiB;QAEjB,kFACI;QAAA,6EAAW;QAAA,wEAAY;QAAA,4DAAY;QACnC,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QAEjB,kFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QAEjB,kFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,iEACA;QAAA,uEACJ;QAAA,4DAAiB;QAEjB,kFACI;QAAA,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,iEACA;QAAA,wEACJ;QAAA,4DAAiB;QAEjB,kFACI;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,iEACA;QAAA,wEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,4DAAmB;QAEf,0FACI;QAAA,8EAA8E;QAApD,4IAAS,YAAQ,IAAC;QAAkC,kEAAM;QAAA,4DAAS;QAC7F,8EAAyE;QAAA,uEAAW;QAAA,4DAAS;QACjG,4DAAqB;QACrB,iEACJ;QAAA,4DAAO;QACX,4DAAW;QAEf,4DAAM;;QA/DkC,0DAA4B;QAA5B,yFAA4B;;6FDuBvD,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AE1BD;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;AAGuD;AACe;;;;AAOlE,MAAM,oCAAoC;IAM/C,YAAoB,SAA6D,EAA2B,IAAI;QAA5F,cAAS,GAAT,SAAS,CAAoD;QAC/E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACpC,CAAC;IAED,QAAQ;IACR,CAAC;;wHAbU,oCAAoC,0MAM4C,wEAAe;oHAN/F,oCAAoC;QCpBjD,wEAAqB;QAAA,uDAAkB;QAAA,4DAAK;QAC5C,yEACI;QAAA,oEAAI;QAAA,uDAAgB;QAAA,4DAAI;QAE5B,4DAAM;QAGN,gEAEA;QAAA,yEACI;QAAA,4EAAkE;QAAA,iEAAM;QAAA,4DAAS;QACjF,4EAAkE;QAAA,mEAAO;QAAA,4DAAS;QACtF,4DAAM;;QAZe,0DAAkB;QAAlB,iFAAkB;QAE/B,0DAAgB;QAAhB,yFAAgB;;6FDkBX,oCAAoC;cALhD,uDAAS;eAAC;gBACT,QAAQ,EAAE,oCAAoC;gBAC9C,WAAW,EAAE,iDAAiD;gBAC9D,SAAS,EAAE,CAAC,gDAAgD,CAAC;aAC9D;;sBAOqF,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE1B5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;AAOyF;AACA;AACA;;;;;;;;;;ICfvI,yEAAuC;IAAA,qEAAS;IAAA,4DAAK;;;IACrD,yEAAwC;IAAA,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,iGAAuB;;;IAI/D,yEAAuC;IAAA,wEAAY;IAAA,4DAAK;;;IACxD,yEAAwC;IAAA,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,iGAAuB;;;IAI/D,oEAA2C;;;;IAC3C,yEACE;IAAA,6EACE;IAAA,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAChC,4DAAS;IACT,qFACE;IAAA,6EACE;IADoB,qYAAyC;IAC7D,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IACzB,uEAAM;IAAA,gEAAI;IAAA,4DAAO;IACnB,4DAAS;IACT,8EACE;IADoB,0YAA6C;IACjE,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC3B,wEAAM;IAAA,mEAAO;IAAA,4DAAO;IACtB,4DAAS;IACX,4DAAW;IACb,4DAAK;;;IAbqB,0DAA0B;IAA1B,mFAA0B;;;IAgBtD,oEAA4D;;;IAC5D,oEAAkE;;ADN7D,MAAM,mCAAmC;IAK9C,YACU,IAAgB,EAChB,MAAiB,EACjB,uBAAgD;QAExD;;WAEG;QANK,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAW;QACjB,4BAAuB,GAAvB,uBAAuB,CAAyB;QAL1D,qBAAgB,GAAa,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAW5D,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAC/D,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,4CAA4C;QAC9C,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,QAAQ,KAAU,CAAC;IAEnB;;;;OAIG;IAEH,8BAA8B;IAC9B,sBAAsB;QACpB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sJAAqC,EAAE;YACxE,IAAI,EAAE,EAEL;YACD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,KAAK,QAAQ,EAAC;gBAEvB,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACtE,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACtC,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAID,8BAA8B;IAE/B,sBAAsB,CAAC,IAAI;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sJAAqC,EAAE;YACxE,IAAI,EAAE;gBACJ,IAAI;gBACJ,YAAY,EAAE,0BAA0B;aACzC;YACD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAG,MAAM,KAAK,QAAQ,EAAC;gBAErB,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACtE,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACtC,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;IAIC,8BAA8B;IAE9B,sBAAsB,CAAC,UAAU;QACjC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sJAAqC,EAAE;YACxE,IAAI,EAAE;gBACJ,UAAU;gBACV,YAAY,EAAE,oBAAoB;gBAClC,UAAU,EAAE,sDAAsD,UAAU,GAAG;aAChF;YACD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,MAAM,IAAI,SAAS,EAAE;gBACvB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;gBACvB,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAC9E,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC;oBACtD,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,GAAG,GAAE;wBACrE,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;wBACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBACtC,CAAC,EAAE,GAAG,CAAC,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC,CAAC;gBACJ,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IAEJ,CAAC;;sHAnHY,mCAAmC;mHAAnC,mCAAmC;QC5BhD,oEAAG;QAAA,6EAAkB;QAAA,4EAAyE;QAAnC,2JAAS,4BAAwB,IAAC;QAAC,8EAAiC;QAAA,sEAAW;QAAA,4DAAW;QAAA,4DAAS;QAAA,4DAAI;QAGlK,2EACE;QAAA,2EACE;QAAA,6HAAuC;QACvC,6HAAwC;QAC1C,qEAAe;QAEf,2EACE;QAAA,+HAAuC;QACvC,+HAAwC;QAC1C,qEAAe;QAEf,4EACE;QAAA,+HAAsC;QACtC,gIACE;QAcJ,qEAAe;QAEf,+HAAuD;QACvD,+HAA6D;QAC/D,4DAAQ;;QAhCS,0DAAgC;QAAhC,6FAAgC;QA8B5B,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;;6FDNjD,mCAAmC;cAL/C,uDAAS;eAAC;gBACT,QAAQ,EAAE,gCAAgC;gBAC1C,WAAW,EAAE,6CAA6C;gBAC1D,SAAS,EAAE,CAAC,4CAA4C,CAAC;aAC1D;;;;;;;;;;;;;;AE5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;AAE+C;AACY;;;;;;;AAG9D,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH;AAOM,MAAM,oBAAoB;IAE/B,YAAoB,aAA4B,EAAU,IAAgB;QAAtD,kBAAa,GAAb,aAAa,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAE/E,QAAQ,KAAK,CAAC;IACd,MAAM;IAEN,CAAC;IACD,MAAM;QACJ,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mCAAmC,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpF,IAAI,GAAG;gBAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;;gBACrB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QACpC,CAAC,CAAC;IACH,CAAC;;wFAdU,oBAAoB;oGAApB,oBAAoB;QC1BjC,2EACI;QAAA,mFACI;QAAA,oFACI;QAAA,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACxB,4DAAiB;QACjB,mFACI;QAAA,4EAAuD;QAApC,4IAAS,YAAQ,IAAC;QAAkB,iEAAM;QAAA,4DAAS;QACtE,4EAAuD;QAApC,4IAAS,YAAQ,IAAC;QAAkB,sEAAW;QAAA,4DAAS;QAC/E,4DAAmB;QACvB,4DAAmB;QACvB,4DAAW;;6FDgBE,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;GASG;AAE+C;AACY;AAE+B;AAK+B;;;;;;;;;;ICdhH,yEAAsC;IAAA,mEAAQ;IAAA,4DAAK;;;IACnD,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,6FACJ;;;IAIA,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;IACrD,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,8FACJ;;;IAIA,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;IACpD,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,6FACJ;;;IAIA,yEAAsC;IAAA,uEAAY;IAAA,4DAAK;;;IACvD,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,gGACJ;;;IAIA,yEAAsC;IAAA,kEAAO;IAAA,4DAAK;;;IAClD,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,4FACJ;;;IAIA,yEAAsC;IAAA,sEAAW;IAAA,4DAAK;;;IACtD,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,+FACJ;;;IAIA,oEAA2C;;;;IACvC,yEACI;IAAA,6EAA2C;IAAxB,oWAAuB;IAAC,2EAAU;IAAA,oEAAS;IAAA,4DAAW;IAAA,4DAAS;IACtF,4DAAK;;;IAEb,oEAA4D;;;IAC5D,oEAAiE;;ADhCzE,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,6BAA6B,EAAE,GAAG;KACnC,CAAC;CACH;AAMM,MAAM,uBAAuB;IAMlC,YAAmB,MAAiB,EAAU,IAAgB,EAAU,WAAwB,EAAU,aAA4B;QAAnH,WAAM,GAAN,MAAM,CAAW;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAFtI,qBAAgB,GAAQ,CAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAC,YAAY,EAAE,SAAS,CAAC;IAE2B,CAAC;IAG3I,QAAQ;QACN,qBAAqB;QACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iCAAiC,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACzB,CAAC,CAAC;QACF,mBAAmB;IACpB,CAAC;IAED,yBAAyB;IACzB,IAAI;QACF,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yGAAmB,EAAE;YACvD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAC,OAAO;SAAC,CAAC,CAAC;QAChB,oEAAoE;QACpE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iCAAiC,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACjF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YACzB,CAAC,CAAC;QACA,CAAC,CAAC;IACL,CAAC;IACF,OAAO,CAAC,IAAI;QACV,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wIAAuB,CAAC;IAC3C,CAAC;;8FAlCU,uBAAuB;uGAAvB,uBAAuB;QChCpC,oEAAG;QAAA,2EACK;QAAA,4EAA8C;QAAjB,+IAAS,UAAM,IAAC;QAAC,8EAAiC;QAAA,sEAAW;QAAA,4DAAW;QAAA,4DAAS;QAAA,4DAAI;QAEtH,2EACI;QAAA,2EACI;QAAA,iHAAsC;QACtC,iHACI;QAER,qEAAe;QAEf,2EACI;QAAA,mHAAsC;QACtC,mHACI;QAER,qEAAe;QAEf,4EACI;QAAA,mHAAsC;QACtC,mHACI;QAER,qEAAe;QAEf,4EACI;QAAA,mHAAsC;QACtC,mHACI;QAER,qEAAe;QAEf,4EACI;QAAA,mHAAsC;QACtC,mHACI;QAER,qEAAe;QAEf,6EACI;QAAA,mHAAsC;QACtC,mHACI;QAER,qEAAe;QAEf,oFACI;QAAA,mHAAsC;QAClC,mHACI;QAEZ,4DAAe;QACf,oHAAuD;QACvD,oHAA4D;QAChE,4DAAQ;;QAnDS,0DAAoB;QAApB,iFAAoB;QAiDd,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAA+C;QAA/C,kGAA+C;;6FDrBtD,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AE/BD;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCnB3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;6FDmBN,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAEuD;AAEU;AACK;;;;;;;;;;;AAUlE,MAAM,qCAAqC;IAEhD,YAAoB,EAAe,EAAU,uBAAgD,EAAU,IAAgB,EAAU,SAA8D,EACpK,IAAI;QADX,OAAE,GAAF,EAAE,CAAa;QAAU,4BAAuB,GAAvB,uBAAuB,CAAyB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,cAAS,GAAT,SAAS,CAAqD;IAC5J,CAAC;IAOpC,QAAQ;QACN,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9C,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC;IACJ,CAAC;IAEF,sBAAsB;QAErB,MAAM,UAAU,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC;QAE7E,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YAC/E,UAAU;QACZ,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,KAAK,CAAC,qKAAqK,CAAC,CAAC;QAC/K,CAAC,CAAC;IACJ,CAAC;;0HA3BY,qCAAqC,umBAGtC,wEAAe;qHAHd,qCAAqC;QCzBlD,yEACI;QAAA,8EACI;QAAA,iFAAgB;QAAA,mFAAwB;QAAA,4DAAiB;QACzD,gEACA;QAAA,0EACI;QAD2C,iKAAY,4BAAwB,IAAC;QAChF,mFACI;QAAA,yEACI;QAAA,iFACI;QAAA,sEAIJ;QAAA,4DAAiB;QACrB,4DAAM;QACV,4DAAmB;QACnB,uFACI;QAAA,6EAAkE;QAAA,kEAAM;QAAA,4DAAS;QACjF,6EAKiB;QAAA,kEAAM;QAAA,4DAAS;QACpC,4DAAmB;QACvB,4DAAO;QACX,4DAAW;QACf,4DAAM;;QAtBQ,0DAAwC;QAAxC,qGAAwC;QAiBtB,0DAA8C;QAA9C,2GAA8C;;6FDIjE,qCAAqC;cALjD,uDAAS;eAAC;gBACT,QAAQ,EAAE,oCAAoC;gBAC9C,WAAW,EAAE,iDAAiD;gBAC9D,SAAS,EAAE,CAAC,gDAAgD,CAAC;aAC9D;;sBAII,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AE5B3B;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAEwC;;;AAQpC,MAAM,cAAc;IAEzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC;;;;SAIK;IACH,mBAAmB;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACH,mBAAmB,CAAC,SAAiB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,SAAS,EAAE,CAAC;IACnD,CAAC;IAED;;;;OAIG;IACH,iBAAiB,CAAC,KAAa,EAAE,KAAa;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAC;YACpC,KAAK;YACL,KAAK;SACN,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,iBAAiB,CAAC,aAAqB,EAAE,KAAa,EAAE,KAAY,EAAE,UAAmB;QACvF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,aAAa,SAAS,EAAC;YAC1D,KAAK;YACL,KAAK;YACL,UAAU;SACX,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,iBAAiB,CAAC,SAAiB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,SAAS,EAAE,EAAC;QACjD,+EAA+E;SAChF,CAAC;IACJ,CAAC;;4EAxDQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;;;;;;;AAS3C,MAAM,mBAAmB;IAI9B,YAAoB,aAA4B,EAAU,MAAc;QAApD,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFxE,SAAI,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;IAEkD,CAAC;IAE7E,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;;sFAZU,mBAAmB;mGAAnB,mBAAmB;QCrBhC,yEAEE;QACA,yEACE;QAAA,iFACE;QAAA,oEACA;QAAA,uEAA2C;QAAA,gEAAK;QAAA,4DAAI;QACpD,uEAA6C;QAAA,kEAAO;QAAA,4DAAI;QACxD,uEAA6C;QAAA,qEAAU;QAAA,4DAAI;QAC3D,wEAA6C;QAAA,mEAAO;QAAA,4DAAI;QACxD,wEAA2C;QAAA,0EAAc;QAAA,4DAAI;QAC7D,mEAAa;QACb,sEAAoC;QACpC,wEAA0D;QAApB,uIAAS,aAAS,IAAC;QAAC,oEAAQ;QAAA,4DAAI;QACxE,4DAAc;QAChB,4DAAM;QAGN,0EACE;QAAA,4EACE;QAAA,iEAAM;QAAA,iEAAM;QAAA,iEACZ;QAAA,4EAA+B;QAC/B,iEAAM;QAAA,iEAAM;QAAA,iEACd;QAAA,4DAAO;QACT,4DAAM;QAEN,0EACE;QAAA,8EACE;QAAA,mFACE;QAAA,qEACE;QAAA,wDACF;;QAAA,4DAAI;QACN,4DAAc;QAChB,4DAAS;QACX,4DAAM;QACR,4DAAM;;QALI,2DACF;QADE,kMACF;;6FDVK,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAEyD;AACqB;AACxC;AACc;AAC0B;AACf;AAClB;AAC0C;AACrB;AACA;AACA;AACN;AAC0B;AAC1B;AACS;;;AAExE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6FAAmB;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,wEAAa;aACzB;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,4EAAc;aAC1B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,kFAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,iFAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,iFAAgB;aAC5B;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,sGAAuB;aACnC;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,qFAAiB;aAC7B;SACF;QACG,WAAW,EAAE,CAAC,4DAAS,CAAC;KAC7B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,6FAAmB;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,8EAAe;aAC3B;YACD;gBACE,IAAI,EAAC,eAAe;gBACpB,SAAS,EAAE,sGAAsB;aAClC;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,qFAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,4EAAc;aAC1B;SACF;KACF;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,aAAa;KAC1B;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,yBAAyB,EAAE,SAAS,EAAC,CAAC,CAAC,EAC1G,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,yBAAyB,EAAE,SAAS,EAAC,CAAC,CAAC;gBACpH,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC/FD;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE+C;;;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCnB3B,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QAAA,gEAAM;QAAA,gEACZ;QAAA,yEACI;QAAA,oEACI;QAAA,oIACJ;QAAA,4DAAI;QACJ,oEACI;QAAA,wFACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAM;;6FDOO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AElBD;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AAE4C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACvBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["/**\n * \n * ================================\n * ; Title: catalogmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component responsible for catalog page\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateCatalogItemComponent } from '../dialogs/create-catalog-item/create-catalog-item.component';\nimport { DeleteCatalogItemComponent } from '../dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateCatalogItemComponent } from '../dialogs/update-catalog-item/update-catalog-item.component';\nimport { Catalog } from '../interfaces/catalog.interface';\nimport { CatalogService } from '../services/catalog.service';\n\n@Component({\n  selector: 'app-catalogmanagement',\n  templateUrl: './catalogmanagement.component.html',\n  styleUrls: ['./catalogmanagement.component.css']\n})\nexport class CatalogmanagementComponent implements OnInit {\n\n  catalogDataSource: Catalog[];\n  displayedColumns: string[] = ['title', 'price', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private catalogServce: CatalogService) { \n    /**\n       * \n       * Find all Catalog Items\n       */\n      this.catalogServce.findAllCatalogItems().subscribe(res => {\n        this.catalogDataSource = res['data'];\n        //console.log(this.catalogDataSource);\n      }, err => {\n        console.log(err);\n      })\n  }\n\n  ngOnInit(): void {\n  }\n\n    /**\n   * \n   * SECTION FOR CATALOG APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   * \n   */\n\n  //createItem\n  createCatalogItem(){\n    const dialogRef = this.dialog.open(CreateCatalogItemComponent, {\n      data: {\n\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n        //refresh the list\n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //updateItem\n  updateCatalogItem(data){\n    console.log(data);\n    const dialogRef = this.dialog.open(UpdateCatalogItemComponent, {\n      data: {\n        data,\n        dialogHeader: 'Update Catalog Item'\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'update'){\n        //refresh the list\n        \n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //deleteItem\n  deleteCatalogItem(catalogItem){\n    const dialogRef = this.dialog.open(DeleteCatalogItemComponent, {\n      data: {\n        catalogItem,\n        dialogHeader: 'Disabling Item',\n        dialogBody: `Are you sure you want to disable ${catalogItem.title}`\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'confirm'){\n        console.log(catalogItem._id);\n       this.catalogServce.deleteCatalogItem(catalogItem._id).subscribe( res => {\n         //make another call to update the list\n         this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }, err => {\n         console.log(err)\n       })\n        \n      }\n    })\n  }\n}\n","<p>Items<button mat-button class=\"crudButton\" (click)=\"createCatalogItem()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"catalogDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef> Title </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.price | currency}} </td>\n      </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateCatalogItem(element)\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteCatalogItem(element)\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: createCatalogItemdialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-create-catalog-item',\n  templateUrl: './create-catalog-item.component.html',\n  styleUrls: ['./create-catalog-item.component.css']\n})\nexport class CreateCatalogItemComponent implements OnInit {\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient, \n    private fb: FormBuilder, \n    private dialogRef: MatDialogRef<CreateCatalogItemComponent>, \n    @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateCatalogItemForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createCatalogItemForm = this.fb.group({\n      title: ['', Validators.required],\n      price: ['', Validators.required]\n    })\n  }\n\n  createCatalogItem(){\n    const title = this.createCatalogItemForm.controls.title.value;\n    const price = this.createCatalogItemForm.controls.price.value;\n\n    this.catalogService.createCatalogItem(title, price).subscribe( res => {\n      title\n      price\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Catalog Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"createCatalogItemForm\" (ngSubmit)=\"createCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createCatalogItemForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"main-welcome\">\n  <h1 class=\"title\">\n    Welcome to WEB 450's - Bob's Computer Repair Shop <br />\n    <span class=\"subtitle\">\n      Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait unitl the last minute to begin working on each item.\n    </span>\n  </h1>\n</div>\n","/**\n * \n * ================================\n * ; Title: administration.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for administration page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.css']\n})\n\n\nexport class AdministrationComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n\n\n  constructor() { }\n  ngOnInit() { }   \n  \n}\n\n","<h1>Administration Dashboard</h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-content>\n            <div fxLayout=\"column\">\n\n\n\n<!--USER management column-->\n    <div fxFlex class=\"childColumnContainers\">\n        <div fxFlex><mat-card>\n            <mat-card-content>\n     <app-usermanagement></app-usermanagement>\n    </mat-card-content>\n    </mat-card>\n        </div>\n    </div>\n    \n\n\n\n<!--Security questions and Role Management Column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Security questions go here-->\n<mat-card>\n    <mat-card-content>\n               <app-securityquestionmanagement></app-securityquestionmanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Role Management Goes here-->\n<mat-card>\n    <mat-card-content>   \n               <app-rolemanagement></app-rolemanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n<!--Catalog and purchases graph column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Catalog Goes here-->\n               <mat-card>\n                   <mat-card-content>\n                        <app-catalogmanagement></app-catalogmanagement>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Purchases Graph goes here-->\n            <mat-card>\n                <mat-card-content>\n                    <app-purchasegraph></app-purchasegraph>\n                </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n<br />\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ; Reference: Google Material Docs: https://material.angular.io/components/stepper/overview\n * ================================\n * \n */\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { CookieService } from 'ngx-cookie-service'\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class CreateAccountComponent implements OnInit {\n  firstFormGroup: FormGroup\n  secondFormGroup: FormGroup\n  thirdFormGroup: FormGroup\n  newUser: any\n  questions: any\n  constructor(private cookieService: CookieService, private router: Router, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.firstFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      firstName: new FormControl(null, Validators.required),\n      lastName: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, Validators.required),\n      address: new FormControl(null, Validators.required)\n    })\n    this.secondFormGroup = this.fb.group({\n      securityQuestion1: new FormControl(null, Validators.required),\n      securityQuestion1Answer: new FormControl(null, Validators.required),\n      securityQuestion2: new FormControl(null, Validators.required),\n      securityQuestion2Answer: new FormControl(null, Validators.required),\n      securityQuestion3: new FormControl(null, Validators.required),\n      securityQuestion3Answer: new FormControl(null, Validators.required),\n    })\n    this.thirdFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    })\n    this.http.get('/api/securityQuestions').subscribe(res => {\n      this.questions = res['data']\n    })\n  }\n  registerAccount() {\n    this.newUser = {\n      username: this.firstFormGroup.get('username').value,\n      password: this.firstFormGroup.get('password').value,\n      firstName: this.firstFormGroup.get('firstName').value,\n      lastName: this.firstFormGroup.get('lastName').value,\n      phoneNumber: this.firstFormGroup.get('phoneNumber').value,\n      address: this.firstFormGroup.get('address').value\n    }\n    this.http.post('/api/users', this.newUser).subscribe(err => {\n      if (err) {\n        console.log(err)\n      } else {\n        console.log(this.newUser)\n      }\n    })\n    this.firstFormGroup.reset()\n  }\n  setSecurityQuestions() {\n   let newSecurityQuestions = {\n     securityQuestion1: this.secondFormGroup.get('securityQuestion1').value,\n     secuirtyQuestion1Answer: this.secondFormGroup.get('securityQuestion1Answer').value,\n     securityQuestion2: this.secondFormGroup.get('securityQuestion2').value,\n     securityQuestion2Answer: this.secondFormGroup.get('securiyQuestion2Answer').value,\n     securityQuestion3: this.secondFormGroup.get('securityQuestion2').value,\n     secuirtyQuestion3Answer: this.secondFormGroup.get('secuirtyQuestionAnswer3').value\n   }\n   console.log(newSecurityQuestions)\n  }\n  signIn() {\n   let signInUser = {\n     username: this.thirdFormGroup.get('username').value,\n     password: this.thirdFormGroup.get('password').value\n   }\n   this.http.post('/api/session/signin', signInUser).subscribe(res => {\n    if (res['data'].username) {\n      this.cookieService.set('sessionuser', res['data'].username, 1)\n      this.router.navigate(['/'])\n    }\n   })\n   this.secondFormGroup.reset()\n  }\n}","<mat-card>\n    <mat-card-title>\n        <p color=\"primary\" style=\"text-align: center\">Register For An Account</p>\n    </mat-card-title>\n</mat-card>\n<mat-horizontal-stepper #stepper>\n    <mat-step [stepControl]=\"firstFormGroup\">\n       <h1 style=\"text-align: center;\">Sign Up</h1>\n        <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Register Account</ng-template>\n            <mat-form-field>\n                <mat-label>Username</mat-label>\n                <input matInput placeholder=\"Ex. thespidermonkey25\" formControlName=\"username\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Password</mat-label>\n                <input matInput placeholder=\"Ex. root\" formControlName=\"password\" required> \n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"Ex. Peter\" formControlName=\"firstName\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Last Name</mat-label>\n                <input matInput placeholder=\"Ex. Parker\" formControlName=\"lastName\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Phone Number</mat-label>\n                <input matInput placeholder=\"Ex. 867 5309\" formControlName=\"phoneNumber\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Address</mat-label>\n                <input matInput placehodler=\"Ex. 12 Brooklyn Street\" formControlName=\"address\" required>\n            </mat-form-field>\n            <div>\n                <a routerLink=\"/session/signin\">Sign In</a>\n                <button mat-button (click)=\"registerAccount()\" matStepperNext>Create Account</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Security Questions\">\n        <form [formGroup]=\"secondFormGroup\">\n        <h1 style=\"text-align: center;\">Security Questions</h1>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Please Choose A Question:</mat-label>\n            <mat-select [(value)]=\"securityQuestion1\" *ngFor=\"let question of questions\">\n                <mat-option>{{ question.questionId }}</mat-option>\n            </mat-select>\n            <input matInput placeholder=\"Answer\" formControlName=\"securityQuestion1Answer\" required>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Please Choose A Question:</mat-label>\n            <mat-select [(value)]=\"securityQuestion2\" *ngFor=\"let question of questions\">\n                <mat-option>{{ question.questionId }}</mat-option>\n            </mat-select>\n            <input matInput placeholder=\"Answer\" formControlName=\"securityQuestion2Answer\" required>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Please Choose A Question:</mat-label>\n            <mat-select [(value)]=\"securityQuestion3\" *ngFor=\"let question of questions\">\n                <mat-option>{{ question.questionId }}</mat-option>\n            </mat-select>\n            <input matInput placeholder=\"Answer\" formControlName=\"securityQuestion3Answer\" required>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button (click)=\"setSecurityQuestions()\" matStepperNext>Set</button>\n        </div>\n    </form>\n    </mat-step>\n    <mat-step [stepControl]=\"thirdFormGroup\" label=\"Sign In\">\n        <h1 style=\"text-align: center;\">Sign In</h1>\n        <form [formGroup]=\"thirdFormGroup\">\n        <mat-form-field>\n            <mat-label>Username</mat-label>\n            <input matInput formControlName=\"username\" placeholder=\"Ex. spidermonkey25\" required>\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label>Password</mat-label>\n            <input matInput formControlName=\"password\" placeholder=\"Ex. Password\" required>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperPrevious>Create Account</button>\n            <button mat-button (click)=\"signIn()\" matStepperNext>Sign In</button>\n        </div>\n    </form>\n</mat-step>\n</mat-horizontal-stepper>","/**\n * \n * ================================\n * ; Title: createRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Role } from '../../interfaces/role.interface';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\n\n\n@Component({\n  selector: 'app-create-role-dialog',\n  templateUrl: './create-role-dialog.component.html',\n  styleUrls: ['./create-role-dialog.component.css']\n})\nexport class CreateRoleDialogComponent implements OnInit {\n\nconstructor(\n  private roleServce: RoleService, \n  private http: HttpClient, \n  private fb: FormBuilder, \n  private dialogRef: MatDialogRef<CreateRoleDialogComponent>, \n  @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateRoleForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createRoleForm = this.fb.group({\n      text: ['', Validators.required]\n    })\n  }\n\n  //create the role and insert it into the db\n createRole(){\n  \n  const text = this.createRoleForm.controls.text.value;\n  console.log(text);\n  this.roleServce.createRole(text).subscribe( res => {\n    text\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the role. Please ensure the role doesnt already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"createRoleForm\" (ngSubmit)=\"createRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createRoleForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * \n * ================================\n * ; Title: auth.guard.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file used for checking if a cookie was set/\n *                user has authorization to access a given page. \n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  //import our cookie service and router so we can use them with this guard\n  constructor(private router: Router, private cookieService: CookieService){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isAuthenticated = this.cookieService.get('sessionuser');\n    if(isAuthenticated){\n      return true;\n    } else {\n    //if no sessionUser is present, then redirect them to the signin page.\n    this.router.navigate(['/session/signin']);\n    return false;\n   }\n  }\n}\n","/**\n * \n * ================================\n * ; Title: delete-security-question-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Security Question Soft Delete Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-delete-securityquestion-dialog',\n  templateUrl: './delete-securityquestion-dialog.component.html',\n  styleUrls: ['./delete-securityquestion-dialog.component.css']\n})\nexport class DeleteSecurityquestionDialogComponent implements OnInit {\n\n  questionId: string;\n  //_id: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n\n  constructor(private dialogRef: MatDialogRef<DeleteSecurityquestionDialogComponent>,   \n    @Inject(MAT_DIALOG_DATA) data) { \n\n    //this._id = data._id;\n    this.questionId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n\n<div mat-dialog-content>\n  <p> {{ dialogBody }} </p>\n</div>\n\n<hr />\n\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\" cdkFocusInitial>Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: more-vert-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User more-vert-dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PutDialogComponent } from '../../../user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../../../user-admin-patch-dialog/patch-dialog.component'\n\n@Component({\n  selector: 'app-more-vert-dialog',\n  templateUrl: './more-vert-dialog.component.html',\n  styleUrls: ['./more-vert-dialog.component.css']\n})\nexport class MoreVertDialogComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, private cookieService: CookieService) { }\n\n  ngOnInit(): void {\n  }\n  update() {\n    this.dialog.open(PutDialogComponent)\n   }\n   delete() {\n    this.dialog.open(PatchDialogComponent)\n  } \n}\n","<mat-card>\n    <mat-card-title>\n        <p>User Actions</p>\n    </mat-card-title>\n    <mat-card-actions style=\"align-items: center\">\n        <button mat-button mat-dialog-close (click)=\"update()\"><mat-icon class=\"material-icons\">update</mat-icon></button>\n        <button mat-button mat-dialog-close (click)=\"delete()\"><mat-icon class=\"material-icons\">delete</mat-icon></button>\n    </mat-card-actions>","/**\n * \n * ================================\n * ; Title: deleteCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for deleting item\n * ================================\n * \n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n\n@Component({\n  selector: 'app-delete-catalog-item',\n  templateUrl: './delete-catalog-item.component.html',\n  styleUrls: ['./delete-catalog-item.component.css']\n})\nexport class DeleteCatalogItemComponent implements OnInit {\n\n  catalogItemId: string;\n  dialogHeader: string;\n  dialogBody: string;\n  constructor(private dialogRef: MatDialogRef<DeleteCatalogItemComponent>,\n    private catalogService: CatalogService,\n    @Inject(MAT_DIALOG_DATA) data) {\n      console.log(data.catalogItem._id);\n      this.catalogItemId = data.catalogItem._id;\n      this.dialogHeader = data.dialogHeader;\n      this.dialogBody = data.dialogBody;\n     }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: updateCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating item\n * ================================\n * \n */\n\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-update-catalog-item',\n  templateUrl: './update-catalog-item.component.html',\n  styleUrls: ['./update-catalog-item.component.css']\n})\nexport class UpdateCatalogItemComponent implements OnInit {\n  title;\n  price;\n  catalogItemId;\n  isDisabled;\n  updateCatalogItemForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient,\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<UpdateCatalogItemComponent>,\n    @Inject(MAT_DIALOG_DATA) data){ \n\n      //set the values passed from the parent component\n      this.title = data.data.title;\n      this.price = data.data.price;\n      this.catalogItemId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n\n      this.updateCatalogItemForm = this.fb.group({\n      //pass the values into the form\n        title: [this.title, Validators.required],\n        price: [this.price, Validators.required],\n        catalogItemId: [this.catalogItemId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n    }\n\n  ngOnInit(): void {\n  }\n\n  updateCatalogItem(){\n    //get the current values from the form\n    const title = this.updateCatalogItemForm.controls.title.value;\n    const price = this.updateCatalogItemForm.controls.price.value;\n    const catalogItemId = this.updateCatalogItemForm.controls.catalogItemId.value;\n    const isDisabled = this.selected;\n\n    //call the service and pass updated form values into the service\n    this.catalogService.updateCatalogItem(catalogItemId, title, price, isDisabled).subscribe( res =>{\n      catalogItemId\n      title\n      price\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateCatalogItemForm\" (ngSubmit)=\"updateCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateCatalogItemForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: updateRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RoleService } from '../../services/role.service';\nimport { MatSelectModule } from '@angular/material/select'\n\n@Component({\n  selector: 'app-update-role-dialog',\n  templateUrl: './update-role-dialog.component.html',\n  styleUrls: ['./update-role-dialog.component.css']\n})\nexport class UpdateRoleDialogComponent implements OnInit {\n  text;\n  roleId;\n  isDisabled;\n  updateRoleForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n  constructor(private roleServce: RoleService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateRoleDialogComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.text = data.data.text;\n    this.roleId = data.data._id;\n    this.isDisabled = data.data.isDisabled;\n    \n    this.updateRoleForm = this.fb.group({\n      text: [this.text, Validators.required],\n      roleId: [this.roleId],\n      isDisabled: [this.isDisabled, Validators.required]\n    });\n  }\n  \n\n  ngOnInit(): void {\n  }\n\nupdateRole(){\n  const text = this.updateRoleForm.controls.text.value;\n  const roleId = this.updateRoleForm.controls.roleId.value;\n  const isDisabled = this.selected;\n\n  this.roleServce.updateRole(roleId, text, isDisabled).subscribe( res => {\n    text\n    roleId\n    isDisabled\n  }, err => {\n    console.log(err);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateRoleForm\" (ngSubmit)=\"updateRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateRoleForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: rolemanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for managing the role management table\n * ================================\n * \n */\n\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\nimport { Role } from '../interfaces/role.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HttpClient } from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { DeleteRecordDialogComponentComponent } from './delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from '../dialogs/create-role-dialog/create-role-dialog.component';\nimport { UpdateRoleDialogComponent } from '../dialogs/update-role-dialog/update-role-dialog.component';\n\n//todo create a taskDialogComponent\n\n\n@Component({\n  selector: 'app-rolemanagement',\n  templateUrl: './rolemanagement.component.html',\n  styleUrls: ['./rolemanagement.component.css']\n})\n\n\n\nexport class RolemanagementComponent implements OnInit {\n  roleDataSource: Role[];\n  displayedColumns: string[] = ['role', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private roleServce: RoleService) { \n    \n    /**\n      * Find All Roles\n      */\n     this.roleServce.findAllRoles().subscribe(res => {\n       this.roleDataSource = res['data'];\n       //console.log(this.roleDataSource);\n     }, err => {\n       console.log(err);\n     })\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * \n   * \n   * SECTION FOR ROLE API (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n \n   //createRoleDialog\n   createRole(){\n     const dialogRef = this.dialog.open(CreateRoleDialogComponent, {\n       data: {\n         \n       },\n       disableClose: true,\n       width: \"800px\"\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'create'){\n        //update the list\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   \n   //updateRoleDialog\n   updateRole(data){\n     console.log(data);\n     const dialogRef = this.dialog.open(UpdateRoleDialogComponent, {\n       data: {\n         data,\n         dialogHeader: 'Updating Role'\n       },\n       disableClose: true,\n       width:'800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if(result === 'update') {\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   //deleteRoleDialog\n  deleteRole(roleId){\n     const dialogRef = this.dialog.open(DeleteRecordDialogComponentComponent, {\n       data: {\n         roleId,\n         dialogHeader: 'Disabling Role',\n         dialogBody: `Are you sure you want to disable role ${roleId}?`\n       },\n       disableClose: true,\n       width: '800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'confirm') {\n         this.roleServce.deleteRole(roleId).subscribe(res => {\n           //console.log('Role successfully deleted')\n           //make another call to update the list\n           this.roleServce.findAllRoles().subscribe(res => {\n            this.roleDataSource = res['data'];\n            console.log(this.roleDataSource);\n          }, err => {\n            console.log(err);\n          })\n         })\n       }\n     })\n  }\n\n\n   \n}\n","\n<p>Roles <button mat-button class=\"crudButton\"(click)=\"createRole()\"><mat-icon class=\"matieral-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"roleDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.text}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateRole(element)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteRole(element._id)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: update-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: Security Question Update Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-update-securityquestion-dialog',\n  templateUrl: './update-securityquestion-dialog.component.html',\n  styleUrls: ['./update-securityquestion-dialog.component.css']\n})\nexport class UpdateSecurityquestionDialogComponent implements OnInit {\n\n  questionId;\n  securityQuestionId;\n  isDisabled;\n  updateSecurityQuestionForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) {\n\n      this.questionId = data.data.questionId;\n      this.securityQuestionId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n      this.updateSecurityQuestionForm = this.fb.group({\n        questionId: [this.questionId, Validators.required],\n        securityQuestionId: [this.securityQuestionId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n     }\n\n  ngOnInit(): void {\n  }\n\n  updateSecurityQuestion() {\n    const questionId = this.updateSecurityQuestionForm.controls.questionId.value;\n    const securityQuestionId = this.updateSecurityQuestionForm.controls.securityQuestionId.value;\n    const isDisabled = this.selected;\n\n    this.SecurityQuestionService.updateSecurityQuestion(securityQuestionId, questionId, isDisabled).subscribe( res => {\n      securityQuestionId\n      questionId\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n\n\n\n\n\n\n\n \n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateSecurityQuestionForm\" (ngSubmit)=\"updateSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Enter security question\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateSecurityQuestionForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: role.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for interfacing with our apis for the role-management\n *  component\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Role } from '../interfaces/role.interface'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  //import http client\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find All Roles\n   * \n   */\n   findAllRoles(): Observable<any>{\n     return this.http.get(`/api/roles/`);\n   }\n\n   /**\n   * \n   * Find Role By ID\n   * \n   */\n  findRoleById(roleId: string): Observable<any>{\n    return this.http.get(`/api/roles/${roleId}`)\n  }\n\n\n   /**\n    * \n    * Create Role\n    * \n    */\ncreateRole(text: Role): Observable<any>{\n  return this.http.post(`/api/roles/`, {\n    text: text \n  })\n}\n\n\n  /**\n   * \n   * Update Role\n   * \n   */\nupdateRole(roleId: String, text: Role, isDisabled: Boolean): Observable<any>{\n  return this.http.put(`/api/roles/${roleId}/update`, {\n    text,\n    isDisabled\n  })\n}\n\n  /**\n   * \n   * Delete Role\n   * \n   */\n  deleteRole(roleId: String): Observable<any>{\n    return this.http.patch(`/api/roles/${roleId}`,{\n      roleId\n    })\n  }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/**\n * \n * ================================\n * ; Title: pricing.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for pricing page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pricing',\n  templateUrl: './pricing.component.html',\n  styleUrls: ['./pricing.component.css']\n})\nexport class PricingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pricing works!</p>\n","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(private router: Router, \n    private cookieService: CookieService, \n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar) { \n\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  signin(){\n    const username = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    console.log(username);\n    console.log(password);\n    \n\n    this.http.post('/api/session/signin', {\n      username,\n      password\n    }).subscribe(res => {\n      console.log(res['data'].username);\n      if (res['data'].username){\n        //user authenticated\n        this.cookieService.set('sessionuser', res['data'].username, 1);\n        this.router.navigate(['/']);\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n        this.openSnackBar(this.errorMessage);\n    });\n  }\n\n\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n  }\n}\n","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n            <!--LOGO-->\n            <div fxFlex>\n                <img src=\"./assets/logo.png\" class=\"logo\">\n            </div>\n\n            <!--SigninForm-->\n            <div fxFlex class=\"signInFormStuff\">\n                <form [formGroup]=\"form\" \n                      (ngSubmit)=\"signin(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                    <mat-form-field>\n                        <mat-label>Username</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['userName']\" \n                               placeholder=\"username\" >\n                      </mat-form-field><br />\n                      <mat-form-field>\n                        <mat-label>Password</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['password']\"\n                               placeholder=\"password\">\n                      </mat-form-field>\n                      <p>\n                        <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Sign-in</button>\n                      </p>\n                </form>\n            </div>\n\n            <!--Forgot-->\n            <div fxFlex>\n               <a routerLink=\"/\">Forgot Password?</a>\n            </div>\n            \n\n            <!--Divider-->\n            <div fxFlex>\n                <hr class=\"divider\">\n            </div>\n\n             <!--Signup Password-->\n            <div fxFlex class=\"signUpSection\">\n                    <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                routerLink=\"/session/createAccount\">Sign-Up</button>\n            </div>\n        </div>\n    </mat-card-content>\n    </mat-card>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: put-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User put dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-put-dialog',\n  templateUrl: './put-dialog.component.html',\n  styleUrls: ['./put-dialog.component.css']\n})\nexport class PutDialogComponent implements OnInit {\n  updatedUserForm: FormGroup\n  user: any\n  constructor(private cookieService: CookieService, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.updatedUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n   /* let id = this.cookieService.get('updateId')\n    this.http.get(`http://localhost:3000/api/user/${id}`).subscribe(user => {\n      this.user = user['data']\n    }) */\n  }\n  updateUser() {\n    let updatedUser = {\n      username: this.updatedUserForm.get('username').value,\n      password: this.updatedUserForm.get('password').value,\n      firstName: this.updatedUserForm.get('firstName').value,\n      lastName: this.updatedUserForm.get('lastName').value,\n      address: this.updatedUserForm.get('address').value,\n      email: this.updatedUserForm.get('email').value,\n      phoneNumber: this.updatedUserForm.get('phoneNumber').value\n    }\n    let id = this.cookieService.get('id')\n    this.http.put(`http://localhost:3000/api/users/${id}`, updatedUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"UPDATE Success\")\n    })\n    this.updatedUserForm.reset();\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"updateUser()\" [formGroup]=\"updatedUserForm\">\n        <mat-card-title>\n            <h1>Update User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-dialog-actions>\n                <button mat-button mat-dialog-close>Cancel</button>\n                <button type=\"submit\"mat-button mat-dialog-close>Update User</button>\n            </mat-dialog-actions>\n            <br>\n            <br>\n        </form>\n    </mat-card-content>\n    </mat-card>","/**\n * \n * ================================\n * ; Title: contact.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for contact page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","/**\n * \n * ================================\n * ; Title: security-question.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: component responsible for interfacing with our apis for the security-question\n *  component\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  /**\n   * \n   * Find All Security Questions\n   * \n   */\n    findAllSecurityQuestions(): Observable<any> {\n      return this.http.get(`/api/securityQuestions/`);\n    }\n   /**\n   * \n   * Find Security Question by ID\n   * \n   */\n\n  findSecurityQuestionById(_id: string): Observable<any> {\n    return this.http.get('/api/securityQuestions/' + _id);\n  }\n  \n\n   /**\n    * \n    * Create Security Question\n    * \n    */\n\n createSecurityQuestion(questionId: string): Observable<any> {\n  return this.http.post('/api/securityQuestions/', {\n    questionId\n  })\n}\n\n  /**\n   * \n   * Update Security Question\n   * \n   */\n\n   updateSecurityQuestion(_id: string, questionId: string, isDisabled: boolean): Observable<any> {\n   return this.http.put('/api/securityQuestions/'+ _id, {\n    questionId,\n    isDisabled\n    })\n  }\n\n\n\n\n  /**\n   * \n   * Delete Security Question\n   * \n   */\n\n   deleteSecurityQuestion(questionId: string): Observable<any> {\n     return this.http.patch('/api/securityQuestions/' + questionId, {\n       //isDisabled: true\n       questionId\n     });\n   }\n\n}\n\n\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PostDialogComponent } from '../app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component';\nimport { PutDialogComponent } from '../app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component';\nimport { PatchDialogComponent } from '../app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component';\nimport { RolemanagementComponent } from './pages/administration/rolemanagement/rolemanagement.component';\nimport { CatalogmanagementComponent } from './pages/administration/catalogmanagement/catalogmanagement.component';\nimport { PurchasegraphComponent } from './pages/administration/purchasegraph/purchasegraph.component';\nimport { SecurityquestionmanagementComponent } from './pages/administration/securityquestionmanagement/securityquestionmanagement.component';\nimport { UserManagementComponent } from '../app/pages/administration/usermanagement/usermanagement.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DeleteRecordDialogComponentComponent } from './pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from './pages/administration/dialogs/create-role-dialog/create-role-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from './pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { DeleteSecurityquestionDialogComponent } from './pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { UpdateRoleDialogComponent } from './pages/administration/dialogs/update-role-dialog/update-role-dialog.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MoreVertDialogComponent } from './pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CreateCatalogItemComponent } from './pages/administration/dialogs/create-catalog-item/create-catalog-item.component';\nimport { UpdateCatalogItemComponent } from './pages/administration/dialogs/update-catalog-item/update-catalog-item.component';\nimport { DeleteCatalogItemComponent } from './pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateSecurityquestionDialogComponent } from './pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ErrorInterceptor } from './shared/error.interceptor';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SigninComponent,\n    AdministrationComponent,\n    ProfileComponent,\n    ContactComponent,\n    PricingComponent,\n    AboutComponent,\n    PostDialogComponent,\n    PutDialogComponent,\n    PatchDialogComponent,\n    RolemanagementComponent,\n    CatalogmanagementComponent,\n    PurchasegraphComponent,\n    SecurityquestionmanagementComponent,\n    UserManagementComponent,\n    DeleteRecordDialogComponentComponent,\n    CreateRoleDialogComponent,\n    CreateSecurityquestionDialogComponent,\n    DeleteSecurityquestionDialogComponent,\n    UpdateRoleDialogComponent,\n    MoreVertDialogComponent,\n    CreateCatalogItemComponent,\n    UpdateCatalogItemComponent,\n    DeleteCatalogItemComponent,\n    UpdateSecurityquestionDialogComponent,\n    CreateAccountComponent,\n    ErrorComponent,\n    NotfoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatTableModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatStepperModule,\n    ScrollingModule\n  ],\n  providers: [ {\n    provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true\n  },\n  CookieService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * \n * ================================\n * ; Title: notfound.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling 400 errors\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <div fxFlex>\n        <img src=\"./assets/404.png\" class=\"logo\" routerLink=\"/\">\n    </div><br /><br />\n    <div fxFlex>\n        <p>\n            The link you followed is probably broken or this page has been removed.\n        </p>\n        <p>\n            Click on the 404 to go home\n        </p>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: Error Interceptor.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file is resopnsible for intercepting 500 server errors that are \n * returned to the client.\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private router: Router){\n\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(catchError(err => {\n            if ([404].indexOf(err.status) !== -1) {\n                this.router.navigate(['/session/404']);\n            }\n\n            if ([500].indexOf(err.status) !== -1){\n                this.router.navigate(['/session/500']);\n            }\n\n            //otherwise, catch error and trhow\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","/**\n * \n * ================================\n * ; Title: purchasegraph.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for purchase graph\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-purchasegraph',\n  templateUrl: './purchasegraph.component.html',\n  styleUrls: ['./purchasegraph.component.css']\n})\nexport class PurchasegraphComponent implements OnInit {\n\n  constructor() { \n    /**\n       * Find All purchases\n       */\n  }\n\n  ngOnInit(): void {\n  }\n\n   /**\n   * \n   * SECTION FOR PURCHASES APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n  \n\n}\n","<p>Purchase Graph</p><br /><br /><br /><br />\n<h1>Coming Soon</h1>\n<br /><br /><br />","/**\n * \n * ================================\n * ; Title: post-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User post dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  createUserForm: any\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.createUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n  }\n  createUser() {\n    let newUser = {\n      username: this.createUserForm.get('username').value,\n      password: this.createUserForm.get('password').value,\n      firstName: this.createUserForm.get('firstName').value,\n      lastName: this.createUserForm.get('lastName').value,\n      address: this.createUserForm.get('address').value,\n      email: this.createUserForm.get('email').value,\n      phoneNumber: this.createUserForm.get('phoneNumber').value\n    }\n    this.http.post('http://localhost:3000/api/users', newUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"POST SUCCESS\")\n    }) \n    this.createUserForm.reset();\n  }\n  cancel() {\n\n  }\n}\n","<div fxLayout=\"column\">\n<mat-card class=\"mat-elevation-z8\">\n    <mat-card-title>Create User</mat-card-title>\n    <br />\n        <form (ngSubmit)=\"createUser()\" [formGroup]=\"createUserForm\">\n        <mat-card-content>\n            <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n               \n                <mat-form-field>\n                    <input type=\"text\" \n                           matInput\n                           placeholder=\"enter role name\"\n                           formControlName=\"text\">\n                </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. rjackson25\" formControlName=\"username\" />\n            </mat-form-field>\n     \n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n            \n                <input matInput placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n      \n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n        \n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n         \n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n        </div>\n        </mat-card-content>\n       \n            <mat-dialog-actions align=\"end\">\n                <button mat-raised-button (click)=\"cancel()\" color=\"primary\" mat-dialog-close>Cancel</button>\n                <button type=\"submit\" mat-raised-button color=\"primary\" mat-dialog-close>Create User</button>\n            </mat-dialog-actions>\n            <br />\n        </form>\n    </mat-card>\n\n</div>","/**\n * \n * ================================\n * ; Title: deleteRecordDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-record-dialog-component',\n  templateUrl: './delete-record-dialog-component.component.html',\n  styleUrls: ['./delete-record-dialog-component.component.css']\n})\nexport class DeleteRecordDialogComponentComponent implements OnInit {\n\n  recordId: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.recordId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: securityquestionmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for admin security question page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { SecurityQuestionService } from '../services/security-question.service';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\nimport { FormGroup } from '@angular/forms';\nimport { DeleteSecurityquestionDialogComponent } from '../dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from '../dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { UpdateSecurityquestionDialogComponent } from '../dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-securityquestionmanagement\",\n  templateUrl: \"./securityquestionmanagement.component.html\",\n  styleUrls: [\"./securityquestionmanagement.component.css\"],\n})\nexport class SecurityquestionmanagementComponent implements OnInit {\n  securityQuestions: SecurityQuestion[];\n  questionId: string;\n  displayedColumns: string[] = [\"question\", \"status\", \"action\"];\n\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private securityQuestionService: SecurityQuestionService\n  ) {\n    /**\n     * Find all Security Questions\n     */\n\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\n      (res) => {\n        this.securityQuestions = res[\"data\"];\n        console.log(res);\n        //console.log(this.securityQuestionService);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   *\n   * SECTION FOR SECURITY QUESTION API CALLS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n\n  //createSecurityQuestionDialog\n  createSecurityQuestion(){\n    const dialogRef = this.dialog.open(CreateSecurityquestionDialogComponent, {\n      data: {\n        \n      },\n      disableClose: true,\n      width: \"800px\"\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n\n       this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n         this.securityQuestions = res['data'];\n         console.log(this.securityQuestions);\n       }, err => {\n         console.log(err);\n       })\n      }\n    })\n  }\n\n\n\n  //updateSecurityQuestionDialog\n\n updateSecurityQuestion(data){\n  console.log(data);\n  const dialogRef = this.dialog.open(UpdateSecurityquestionDialogComponent, {\n    data: {\n      data,\n      dialogHeader: 'Update Security Question'\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if(result === 'update'){\n      \n      this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n        this.securityQuestions = res['data'];\n        console.log(this.securityQuestions);\n      }, err => {\n        console.log(err);\n      })\n    }\n  })\n}\n\n\n\n  //deleteSecurityQuestionDialog\n\n  deleteSecurityQuestion(questionId){\n  const dialogRef = this.dialog.open(DeleteSecurityquestionDialogComponent, {\n    data: {\n      questionId,\n      dialogHeader: 'Disabling Question',\n      dialogBody: `Are you sure you want to disable security question ${questionId}?`\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if (result == 'confirm') {\n      console.log(questionId)\n      this.securityQuestionService.deleteSecurityQuestion(questionId).subscribe(res => {\n        console.log('Security question successfully disabled')\n        this.securityQuestionService.findAllSecurityQuestions().subscribe(res=> {\n          this.securityQuestions = res['data'];\n          console.log(this.securityQuestions);\n        }, err => {\n          console.log(err);\n        })\n      })\n    }\n  })\n\n}\n  \n}\n","<!--JB moved this p tag and button in here for grouping purposes-->\n<p>Security Questions<button mat-button class=\"crudButton\" (click)=\"createSecurityQuestion()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n\n<table mat-table [dataSource]=\"securityQuestions\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"question\">\n    <th mat-header-cell *matHeaderCellDef> Question </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.questionId}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"action\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"updateSecurityQuestion(element)\">\n          <mat-icon>edit</mat-icon>\n          <span>Edit</span>\n        </button>\n        <button mat-menu-item (click)=\"deleteSecurityQuestion(element._id)\">\n          <mat-icon>delete</mat-icon>\n          <span>Disable</span>\n        </button>\n      </mat-menu>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","/**\n * \n * ================================\n * ; Title: patch-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User patch dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-patch-dialog',\n  templateUrl: './patch-dialog.component.html',\n  styleUrls: ['./patch-dialog.component.css']\n})\nexport class PatchDialogComponent implements OnInit {\n\n  constructor(private cookieService: CookieService, private http: HttpClient) { }\n\n  ngOnInit() { }\n  cancel() {\n\n  }\n  delete() {\n    let id = this.cookieService.get('id')\n    this.http.patch(`http://localhost:3000/api/users/${id}`, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n     else console.log(\"DELETE Success\")\n   }) \n  }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title class=\"text-center\">\n            <h1>Delete User</h1>\n        </mat-card-title>\n        <mat-card-actions>\n            <button mat-button (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"delete()\" mat-dialog-close>Delete User</button>\n        </mat-card-actions>\n    </mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: usermanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User mgmt component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PostDialogComponent } from '../dialogs/user-admin-post-dialog/post-dialog.component'\nimport { PutDialogComponent } from '../dialogs/user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../dialogs/user-admin-patch-dialog/patch-dialog.component'\nimport { RoleService } from '../services/role.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MoreVertDialogComponent } from '../dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n@Component({\n  selector: 'app-usermanagement',\n  templateUrl: './usermanagement.component.html',\n  styleUrls: ['./usermanagement.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n  displayedColumns: any = [ 'username', 'fistName', 'lastName', 'phoneNumber', 'address','isDisabled', 'actions']\n\n  constructor(public dialog: MatDialog, private http: HttpClient, private roleService: RoleService, private cookieService: CookieService) { }\n\n\n  ngOnInit() {\n    //Begin Brendans code\n    this.http.get('http://localhost:3000/api/users', httpOptions).subscribe(data => {\n      this.users = data['data'];\n      console.log(this.users)\n    })\n    //end Brendans code\n   }\n\n   /**Begin Brendans code */\n   post() {\n     const dialogRef = this.dialog.open(PostDialogComponent, {\n      disableClose: true,\n      width:'800px'});\n      //added by JB 10/28. After user is submitted, refresh the user list.\n      dialogRef.afterClosed().subscribe(result => {\n        this.http.get('http://localhost:3000/api/users', httpOptions).subscribe(data => {\n      this.users = data['data'];\n      console.log(this.users)\n    })\n      })\n   }\n  options(user) {\n    this.cookieService.set('id', user._id)\n    this.dialog.open(MoreVertDialogComponent)\n  }\n  }","<p>User Management\n        <button mat-button id=\"post\" (click)=\"post()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p>\n    <!--- Username Column -->\n    <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\" >\n        <ng-container matColumnDef=\"username\">\n            <th mat-header-cell *matHeaderCellDef>Username</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.username }}\n            </td>\n        </ng-container>\n        <!--- First Name Column -->\n        <ng-container matColumnDef=\"fistName\">\n            <th mat-header-cell *matHeaderCellDef>First Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.firstName }}\n            </td>\n        </ng-container>\n        <!--- Last Name Column -->\n        <ng-container matColumnDef=\"lastName\">\n            <th mat-header-cell *matHeaderCellDef>Last Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.lastName }}\n            </td>\n        </ng-container>\n        <!--- Phone Number Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th mat-header-cell *matHeaderCellDef>Phone Number</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.phoneNumber }}\n            </td>\n        </ng-container>\n        <!--- Address Column -->\n        <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef>Address</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.address }}\n            </td>\n        </ng-container>\n        <!--- isDisabled Column -->\n        <ng-container matColumnDef=\"isDisabled\">\n            <th mat-header-cell *matHeaderCellDef>isDisabled?</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.isDisabled }}\n            </td>\n        </ng-container>\n        <!--- Actions Column -->\n        <ng-contaoner matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n                <td mat-cell *matCellDef=\"let user\">\n                    <button mat-button (click)=\"options(user)\"><mat-icon>more_vert</mat-icon></button>\n                </td>\n        </ng-contaoner>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>","/**\n * \n * ================================\n * ; Title: about.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for about page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","/**\n * \n * ================================\n * ; Title: create-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Create Security Question Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-create-securityquestion-dialog',\n  templateUrl: './create-securityquestion-dialog.component.html',\n  styleUrls: ['./create-securityquestion-dialog.component.css']\n})\nexport class CreateSecurityquestionDialogComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private dialogRef: MatDialogRef<CreateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) { }\n\n    questionId: string;\n    createSecurityQuestionForm: FormGroup;\n    enteredQuestionId: any [];\n\n\n  ngOnInit(): void {\n    this.createSecurityQuestionForm = this.fb.group({\n      questionId: ['', Validators.required]\n    })\n  }\n\n createSecurityQuestion(){\n  \n  const questionId = this.createSecurityQuestionForm.controls.questionId.value;\n\n  console.log(questionId);\n  this.SecurityQuestionService.createSecurityQuestion(questionId).subscribe( res => {\n    questionId\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the security question. Please ensure the question doesn't already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"createSecurityQuestionForm\" (ngSubmit)=\"createSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Example: What was your first pet?\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createSecurityQuestionForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: catalog.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: service for catalog api requests\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Catalog } from '../interfaces/catalog.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n     * \n     * Find All Items\n     * \n     */\n    findAllCatalogItems(): Observable<any>{\n      return this.http.get('/api/catalog/');\n    }\n\n    /**\n     * \n     * Find Item By Id\n     * \n     */\n    findCatalogItemById(catalogId: string): Observable<any>{\n      return this.http.get(`/api/catalog/${catalogId}`)\n    }\n\n    /**\n     * \n     * Create Item\n     * \n     */\n    createCatalogItem(title: string, price: number): Observable<any>{\n      return this.http.post('/api/catalog/',{\n        title,\n        price\n      })\n    }\n\n    /**\n     * \n     * Update Item\n     * \n     */\n    updateCatalogItem(catalogItemId: string, title: string, price:number, isDisabled: boolean): Observable<any>{\n      return this.http.put(`/api/catalog/${catalogItemId}/update`,{\n        title,\n        price,\n        isDisabled\n      })\n    }\n\n    /**\n     * \n     * Delete Item\n     * \n     */\n    deleteCatalogItem(catalogId: string): Observable<any>{\n      return this.http.patch(`/api/catalog/${catalogId}`,{\n        //nothing needs to be passed since we have the disable written at the api level\n      })\n    }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();\n  \n  constructor(private cookieService: CookieService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  singOut(){\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/signin']);\n  }\n\n}\n","<div fxLayout=\"column\" class=\"pageContainer\">\n\n  <!-- navigation -->\n  <nav fxFlex> \n    <mat-toolbar fxFlex>\n      <img src=\"./assets/logo2.png\" class=\"brandLogo\" routerLink=\"/\">\n      <a class=\"navbar-link\" routerLink=\"/about\">About</a>\n      <a class=\"navbar-link\" routerLink=\"/pricing\">Pricing</a>\n      <a class=\"navbar-link\" routerLink=\"/contact\">Contact Us</a>\n      <a class=\"navbar-link\" routerLink=\"/profile\">Profile</a>\n      <a class=\"navbar-link\" routerLink=\"/admin\">Administration</a>\n      <span></span>\n      <span class=\"example-spacer\"></span>\n      <a class=\"navbar-link\" routerLink=\"/\" (click)=\"singOut()\">Sign Out</a>\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <br /><br /><br />\n      <router-outlet></router-outlet>\n      <br /><br /><br />\n    </main>\n  </div>\n  <!-- footer -->\n  <div fxFlex >\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content footerStyle\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'pricing',\n        component: PricingComponent\n      },\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'admin',\n        component: AdministrationComponent\n      },\n      {\n        path: 'not-found',\n        component: NotfoundComponent\n      }\n    ],\n        canActivate: [AuthGuard]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent\n      },\n      {\n        path:'createAccount',\n        component: CreateAccountComponent\n      },\n      {\n        path: '404',\n        component: NotfoundComponent\n      },\n      {\n        path: '500',\n        component: ErrorComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'session/404'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * \n * ================================\n * ; Title: error.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling 500 server errors\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <div fxFlex>\n        <img src=\"./assets/500.png\" class=\"logo\" routerLink=\"/\">\n    </div><br /><br />\n    <div fxFlex>\n        <p>\n            The link you followed is probably broken or this page has been removed.\n        </p>\n        <p>\n            Click on the 404 to go home\n        </p>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}