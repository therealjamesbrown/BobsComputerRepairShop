{"version":3,"sources":["webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.ts","webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/administration/administration.component.ts","webpack:///src/app/pages/administration/administration.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.html","webpack:///src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.html","webpack:///src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.html","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.ts","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.html","webpack:///src/app/pages/administration/services/role.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/pages/pricing/pricing.component.ts","webpack:///src/app/pages/pricing/pricing.component.html","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/pages/administration/services/security-question.service.ts","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.html","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.ts","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.html","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.ts","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.html","webpack:///src/app/pages/administration/usermanagement/usermanagement.component.ts","webpack:///src/app/pages/administration/usermanagement/usermanagement.component.html","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.html","webpack:///src/app/pages/administration/services/catalog.service.ts","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CatalogmanagementComponent","http","dialog","catalogServce","displayedColumns","actions","findAllCatalogItems","subscribe","res","catalogDataSource","console","log","err","selector","templateUrl","styleUrls","HomeComponent","AdministrationComponent","AuthLayoutComponent","CreateRoleDialogComponent","roleServce","fb","dialogRef","data","createRoleForm","group","text","required","controls","value","createRole","environment","production","DeleteSecurityquestionDialogComponent","router","_id","recordId","dialogHeader","dialogBody","MoreVertDialogComponent","cookieService","open","update","UpdateRoleDialogComponent","options","roleId","isDisabled","updateRoleForm","selected","updateRole","RolemanagementComponent","findAllRoles","roleDataSource","disableClose","width","afterClosed","result","deleteRole","RoleService","get","post","put","patch","providedIn","AppComponent","template","styles","PricingComponent","httpOptions","headers","SigninComponent","_snackBar","verticalPosition","form","userName","compose","password","username","set","navigate","errorMessage","openSnackBar","duration","panelClass","signin","PutDialogComponent","updatedUserForm","firstName","lastName","address","email","phoneNumber","updatedUser","id","reset","updateUser","ContactComponent","SecurityQuestionService","newSecurityQuestion","questionId","updatedSecurityQuestion","ProfileComponent","AppModule","declarations","imports","providers","bootstrap","PurchasegraphComponent","PostDialogComponent","createUserForm","newUser","createUser","cancel","DeleteRecordDialogComponentComponent","SecurityquestionmanagementComponent","securityQuestionService","findAllSecurityQuestions","securityQuestions","deleteSecurityQuestion","PatchDialogComponent","UserManagementComponent","roleService","users","user","AboutComponent","CreateSecurityquestionDialogComponent","CatalogService","catalogId","title","price","BaseLayoutComponent","year","Date","now","deleteAll","singOut","NotFoundComponent","routes","path","component","children","redirectTo","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","exports","bootstrapModule","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Catalog } from '../interfaces/catalog.interface';\nimport { CatalogService } from '../services/catalog.service';\n\n@Component({\n  selector: 'app-catalogmanagement',\n  templateUrl: './catalogmanagement.component.html',\n  styleUrls: ['./catalogmanagement.component.css']\n})\nexport class CatalogmanagementComponent implements OnInit {\n\n  catalogDataSource: Catalog[];\n  displayedColumns: string[] = ['title', 'price', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private catalogServce: CatalogService) { \n    /**\n       * \n       * Find all Catalog Items\n       */\n      this.catalogServce.findAllCatalogItems().subscribe(res => {\n        this.catalogDataSource = res['data'];\n        console.log(this.catalogDataSource);\n      }, err => {\n        console.log(err);\n      })\n  }\n\n  ngOnInit(): void {\n  }\n\n    /**\n   * \n   * SECTION FOR CATALOG APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   * \n   */\n\n}\n","<p>Items<button mat-button class=\"crudButton\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"catalogDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef> Title </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.price}} </td>\n      </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item >\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item >\n              <mat-icon>delete</mat-icon>\n              <span>Delete</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"main-welcome\">\n  <h1 class=\"title\">\n    Welcome to WEB 450's - Bob's Computer Repair Shop <br />\n    <span class=\"subtitle\">\n      Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait unitl the last minute to begin working on each item.\n    </span>\n  </h1>\n</div>\n","/**\n * \n * ================================\n * ; Title: administration.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for administration page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.css']\n})\n\n\nexport class AdministrationComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n\n\n  constructor() { }\n  ngOnInit() { }   \n  \n}\n\n","<h1>Administration Dashboard</h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-content>\n            <div fxLayout=\"column\">\n\n\n\n<!--USER management column-->\n    <div fxFlex class=\"childColumnContainers\">\n        <div fxFlex>\n     <app-usermanagement></app-usermanagement>\n        </div>\n    </div>\n    \n\n\n\n<!--Security questions and Role Management Column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Security questions go here-->\n<mat-card>\n    <mat-card-content>\n               <app-securityquestionmanagement></app-securityquestionmanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Role Management Goes here-->\n<mat-card>\n    <mat-card-content>   \n               <app-rolemanagement></app-rolemanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n<!--Catalog and purchases graph column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Catalog Goes here-->\n               <mat-card>\n                   <mat-card-content>\n               <app-catalogmanagement></app-catalogmanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Purchases Graph goes here-->\n                <p>Purchases</p>\n                <!--<app-purchasegraph></app-purchasegraph>-->\n            </div>\n        </div>\n    </div>\n\n\n\n\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n<br />\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","/**\n * \n * ================================\n * ; Title: createRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Role } from '../../interfaces/role.interface';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\n\n\n@Component({\n  selector: 'app-create-role-dialog',\n  templateUrl: './create-role-dialog.component.html',\n  styleUrls: ['./create-role-dialog.component.css']\n})\nexport class CreateRoleDialogComponent implements OnInit {\n\nconstructor(private roleServce: RoleService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<CreateRoleDialogComponent>, @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateRoleForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createRoleForm = this.fb.group({\n      text: ['', Validators.required]\n    })\n  }\n\n  //create the role and insert it into the db\n createRole(){\n  \n  const text = this.createRoleForm.controls.text.value;\n  console.log(text);\n  this.roleServce.createRole(text).subscribe( res => {\n    text\n  }, err => {\n    console.log(err)\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"createRoleForm\" (ngSubmit)=\"createRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createRoleForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * \n * ================================\n * ; Title: delete-security-question-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Security Question Soft Delete Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-delete-securityquestion-dialog',\n  templateUrl: './delete-securityquestion-dialog.component.html',\n  styleUrls: ['./delete-securityquestion-dialog.component.css']\n})\nexport class DeleteSecurityquestionDialogComponent implements OnInit {\n\n  recordId: string;\n  _id: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n\n  constructor(private dialogRef: MatDialogRef<DeleteSecurityquestionDialogComponent>, private router: Router,  @Inject(MAT_DIALOG_DATA) data) { \n\n    this._id = data._id;\n    this.recordId = data.recordId;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n\n<div mat-dialog-content>\n  <p> {{ dialogBody }} </p>\n</div>\n\n<hr />\n\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\" cdkFocusInitial>Save</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PutDialogComponent } from '../../../user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../../../user-admin-patch-dialog/patch-dialog.component'\n\n@Component({\n  selector: 'app-more-vert-dialog',\n  templateUrl: './more-vert-dialog.component.html',\n  styleUrls: ['./more-vert-dialog.component.css']\n})\nexport class MoreVertDialogComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, private cookieService: CookieService) { }\n\n  ngOnInit(): void {\n  }\n  update() {\n    this.dialog.open(PutDialogComponent)\n   }\n   delete() {\n    this.dialog.open(PatchDialogComponent)\n  } \n}\n","<mat-card>\n    <mat-card-title>\n        <p>User Actions</p>\n    </mat-card-title>\n    <mat-card-actions style=\"align-items: center\">\n        <button mat-button mat-dialog-close (click)=\"update()\"><mat-icon class=\"material-icons\">update</mat-icon></button>\n        <button mat-button mat-dialog-close (click)=\"delete()\"><mat-icon class=\"material-icons\">delete</mat-icon></button>\n    </mat-card-actions>","/**\n * \n * ================================\n * ; Title: updateRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RoleService } from '../../services/role.service';\nimport { MatSelectModule } from '@angular/material/select'\n\n@Component({\n  selector: 'app-update-role-dialog',\n  templateUrl: './update-role-dialog.component.html',\n  styleUrls: ['./update-role-dialog.component.css']\n})\nexport class UpdateRoleDialogComponent implements OnInit {\n  text;\n  roleId;\n  isDisabled;\n  updateRoleForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n  constructor(private roleServce: RoleService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateRoleDialogComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.text = data.data.text;\n    this.roleId = data.data._id;\n    this.isDisabled = data.data.isDisabled;\n    \n    this.updateRoleForm = this.fb.group({\n      text: [this.text, Validators.required],\n      roleId: [this.roleId],\n      isDisabled: [this.isDisabled, Validators.required]\n    });\n  }\n  \n\n  ngOnInit(): void {\n  }\n\nupdateRole(){\n  const text = this.updateRoleForm.controls.text.value;\n  const roleId = this.updateRoleForm.controls.roleId.value;\n  const isDisabled = this.selected;\n\n  this.roleServce.updateRole(roleId, text, isDisabled).subscribe( res => {\n    text\n    roleId\n    isDisabled\n  }, err => {\n    console.log(err);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateRoleForm\" (ngSubmit)=\"updateRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateRoleForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: rolemanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for managing the role management table\n * ================================\n * \n */\n\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\nimport { Role } from '../interfaces/role.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HttpClient } from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { DeleteRecordDialogComponentComponent } from './delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from '../dialogs/create-role-dialog/create-role-dialog.component';\nimport { UpdateRoleDialogComponent } from '../dialogs/update-role-dialog/update-role-dialog.component';\n\n//todo create a taskDialogComponent\n\n\n@Component({\n  selector: 'app-rolemanagement',\n  templateUrl: './rolemanagement.component.html',\n  styleUrls: ['./rolemanagement.component.css']\n})\n\n\n\nexport class RolemanagementComponent implements OnInit {\n  roleDataSource: Role[];\n  displayedColumns: string[] = ['role', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private roleServce: RoleService) { \n    \n    /**\n      * Find All Roles\n      */\n     this.roleServce.findAllRoles().subscribe(res => {\n       this.roleDataSource = res['data'];\n       console.log(this.roleDataSource);\n     }, err => {\n       console.log(err);\n     })\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * \n   * \n   * SECTION FOR ROLE API (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n \n   //createRoleDialog\n   createRole(){\n     const dialogRef = this.dialog.open(CreateRoleDialogComponent, {\n       data: {\n         \n       },\n       disableClose: true,\n       width: \"800px\"\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'create'){\n        //update the list\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   \n   //updateRoleDialog\n   updateRole(data){\n     console.log(data);\n     const dialogRef = this.dialog.open(UpdateRoleDialogComponent, {\n       data: {\n         data,\n         dialogHeader: 'Updating Role'\n       },\n       disableClose: true,\n       width:'800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if(result === 'update') {\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   //deleteRoleDialog\n  deleteRole(roleId){\n     const dialogRef = this.dialog.open(DeleteRecordDialogComponentComponent, {\n       data: {\n         roleId,\n         dialogHeader: 'Disabling Role',\n         dialogBody: `Are you sure you want to disable role ${roleId}?`\n       },\n       disableClose: true,\n       width: '800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'confirm') {\n         this.roleServce.deleteRole(roleId).subscribe(res => {\n           //console.log('Role successfully deleted')\n           //make another call to update the list\n           this.roleServce.findAllRoles().subscribe(res => {\n            this.roleDataSource = res['data'];\n            console.log(this.roleDataSource);\n          }, err => {\n            console.log(err);\n          })\n         })\n       }\n     })\n  }\n\n\n   \n}\n","\n<p>Role Management <button mat-raised-button class=\"crudButton\"(click)=\"createRole()\"><mat-icon class=\"matieral-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"roleDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.text}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateRole(element)\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteRole(element._id)\">\n              <mat-icon>delete</mat-icon>\n              <span>Delete</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: role.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for interfacing with our apis for the role-management\n *  component\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Role } from '../interfaces/role.interface'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  //import http client\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find All Roles\n   * \n   */\n   findAllRoles(): Observable<any>{\n     return this.http.get(`/api/roles/`);\n   }\n\n   /**\n   * \n   * Find Role By ID\n   * \n   */\n  findRoleById(roleId: string): Observable<any>{\n    return this.http.get(`/api/roles/${roleId}`)\n  }\n\n\n   /**\n    * \n    * Create Role\n    * \n    */\ncreateRole(text: Role): Observable<any>{\n  return this.http.post(`/api/roles/`, {\n    text: text \n  })\n}\n\n\n  /**\n   * \n   * Update Role\n   * \n   */\nupdateRole(roleId: String, text: Role, isDisabled: Boolean): Observable<any>{\n  return this.http.put(`/api/roles/${roleId}/update`, {\n    text,\n    isDisabled\n  })\n}\n\n  /**\n   * \n   * Delete Role\n   * \n   */\n  deleteRole(roleId: String): Observable<any>{\n    return this.http.patch(`/api/roles/${roleId}`,{\n      roleId\n    })\n  }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/**\n * \n * ================================\n * ; Title: pricing.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for pricing page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pricing',\n  templateUrl: './pricing.component.html',\n  styleUrls: ['./pricing.component.css']\n})\nexport class PricingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pricing works!</p>\n","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(private router: Router, \n    private cookieService: CookieService, \n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar) { \n\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  signin(){\n    const username = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    console.log(username);\n    console.log(password);\n    \n\n    this.http.post('/api/session/signin', {\n      username,\n      password\n    }).subscribe(res => {\n      console.log(res['data'].username);\n      if (res['data'].username){\n        //user authenticated\n        this.cookieService.set('sessionuser', res['data'].username, 1);\n        this.router.navigate(['/']);\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n        this.openSnackBar(this.errorMessage);\n    });\n  }\n\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n  }\n}\n","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n            <!--LOGO-->\n            <div fxFlex>\n                <img src=\"./assets/logo.png\" class=\"logo\">\n            </div>\n\n            <!--SigninForm-->\n            <div fxFlex class=\"signInFormStuff\">\n                <form [formGroup]=\"form\" \n                      (ngSubmit)=\"signin(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                    <mat-form-field>\n                        <mat-label>Username</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['userName']\" \n                               placeholder=\"username\" >\n                      </mat-form-field><br />\n                      <mat-form-field>\n                        <mat-label>Password</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['password']\"\n                               placeholder=\"password\">\n                      </mat-form-field>\n                      <p>\n                        <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Sign-in</button>\n                      </p>\n                </form>\n            </div>\n\n            <!--Forgot Password-->\n            <div fxFlex>\n               <a routerLink=\"/\">Forgot Password?</a>\n            </div>\n            \n            <!--Divider-->\n            <div fxFlex>\n                <hr class=\"divider\">\n            </div>\n\n             <!--Signup Password-->\n            <div fxFlex class=\"signUpSection\">\n                    <button type=\"submit\" \n                            fxFlex \n                            mat-raised-button \n                            color=\"primary\"\n                            >Sign-Up</button>\n            </div>\n        </div>\n    </mat-card-content>\n    </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-put-dialog',\n  templateUrl: './put-dialog.component.html',\n  styleUrls: ['./put-dialog.component.css']\n})\nexport class PutDialogComponent implements OnInit {\n  updatedUserForm: FormGroup\n  user: any\n  constructor(private cookieService: CookieService, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.updatedUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n   /* let id = this.cookieService.get('updateId')\n    this.http.get(`http://localhost:3000/api/user/${id}`).subscribe(user => {\n      this.user = user['data']\n    }) */\n  }\n  updateUser() {\n    let updatedUser = {\n      username: this.updatedUserForm.get('username').value,\n      password: this.updatedUserForm.get('password').value,\n      firstName: this.updatedUserForm.get('firstName').value,\n      lastName: this.updatedUserForm.get('lastName').value,\n      address: this.updatedUserForm.get('address').value,\n      email: this.updatedUserForm.get('email').value,\n      phoneNumber: this.updatedUserForm.get('phoneNumber').value\n    }\n    let id = this.cookieService.get('id')\n    this.http.put(`http://localhost:3000/api/users/${id}`, updatedUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"UPDATE Success\")\n    })\n    this.updatedUserForm.reset();\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"updateUser()\" [formGroup]=\"updatedUserForm\">\n        <mat-card-title>\n            <h1>Update User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-dialog-actions>\n                <button mat-button mat-dialog-close>Cancel</button>\n                <button type=\"submit\"mat-button mat-dialog-close>Update User</button>\n            </mat-dialog-actions>\n            <br>\n            <br>\n        </form>\n    </mat-card-content>\n    </mat-card>","/**\n * \n * ================================\n * ; Title: contact.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for contact page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","/**\n * \n * ================================\n * ; Title: security-question.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: component responsible for interfacing with our apis for the security-question\n *  component\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  /**\n   * \n   * Find All Security Questions\n   * \n   */\n    findAllSecurityQuestions(): Observable<any> {\n      return this.http.get(`/api/securityQuestions/`);\n    }\n   /**\n   * \n   * Find Security Question by ID\n   * \n   */\n\n  findSecurityQuestionById(_id: string): Observable<any> {\n    return this.http.get('/api/securityQuestions/' + _id);\n  }\n  \n\n   /**\n    * \n    * Create Security Question\n    * \n    */\n\n\n   createSecurityQuestion(newSecurityQuestion: SecurityQuestion): Observable<any> {\n    return this.http.post('/api/security-questions/', {\n      questionId: newSecurityQuestion.questionId\n    })\n  }\n\n  /**\n   * \n   * Update Security Question\n   * \n   */\n\n   updateSecurityQuestion(questionId: string, updatedSecurityQuestion: SecurityQuestion): Observable<any> {\n   return this.http.put('/api/security-questions/'+ questionId, {\n    questionId: updatedSecurityQuestion.questionId\n    })\n  }\n\n  /**\n   * \n   * Delete Security Question\n   * \n   */\n\n   deleteSecurityQuestion(questionId: string): Observable<any> {\n     return this.http.patch('/api/security-questions/' + questionId, {\n       //isDisabled: true\n       questionId\n     });\n   }\n\n}\n\n\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PostDialogComponent } from '../app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component';\nimport { PutDialogComponent } from '../app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component';\nimport { PatchDialogComponent } from '../app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component';\nimport { RolemanagementComponent } from './pages/administration/rolemanagement/rolemanagement.component';\nimport { CatalogmanagementComponent } from './pages/administration/catalogmanagement/catalogmanagement.component';\nimport { PurchasegraphComponent } from './pages/administration/purchasegraph/purchasegraph.component';\nimport { SecurityquestionmanagementComponent } from './pages/administration/securityquestionmanagement/securityquestionmanagement.component';\nimport { UserManagementComponent } from '../app/pages/administration/usermanagement/usermanagement.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DeleteRecordDialogComponentComponent } from './pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from './pages/administration/dialogs/create-role-dialog/create-role-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from './pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { DeleteSecurityquestionDialogComponent } from './pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { UpdateRoleDialogComponent } from './pages/administration/dialogs/update-role-dialog/update-role-dialog.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MoreVertDialogComponent } from './pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SigninComponent,\n    AdministrationComponent,\n    NotFoundComponent,\n    ProfileComponent,\n    ContactComponent,\n    PricingComponent,\n    AboutComponent,\n    PostDialogComponent,\n    PutDialogComponent,\n    PatchDialogComponent,\n    RolemanagementComponent,\n    CatalogmanagementComponent,\n    PurchasegraphComponent,\n    SecurityquestionmanagementComponent,\n    UserManagementComponent,\n    DeleteRecordDialogComponentComponent,\n    CreateRoleDialogComponent,\n    CreateSecurityquestionDialogComponent,\n    DeleteSecurityquestionDialogComponent,\n    UpdateRoleDialogComponent,\n    MoreVertDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatTableModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSelectModule,\n    MatSlideToggleModule\n  ],\n  providers: [ CookieService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * \n * ================================\n * ; Title: purchasegraph.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for purchase graph\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-purchasegraph',\n  templateUrl: './purchasegraph.component.html',\n  styleUrls: ['./purchasegraph.component.css']\n})\nexport class PurchasegraphComponent implements OnInit {\n\n  constructor() { \n    /**\n       * Find All purchases\n       */\n  }\n\n  ngOnInit(): void {\n  }\n\n   /**\n   * \n   * SECTION FOR PURCHASES APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n  \n\n}\n","<p>purchasegraph works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  createUserForm: any\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.createUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n  }\n  createUser() {\n    let newUser = {\n      username: this.createUserForm.get('username').value,\n      password: this.createUserForm.get('password').value,\n      firstName: this.createUserForm.get('firstName').value,\n      lastName: this.createUserForm.get('lastName').value,\n      address: this.createUserForm.get('address').value,\n      email: this.createUserForm.get('email').value,\n      phoneNumber: this.createUserForm.get('phoneNumber').value\n    }\n    this.http.post('http://localhost:3000/api/users', newUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"POST SUCCESS\")\n    }) \n    this.createUserForm.reset();\n  }\n  cancel() {\n\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"createUser()\" [formGroup]=\"createUserForm\">\n        <mat-card-title>\n            <h1>Create User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. rjackson25\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-dialog-actions>\n                <button mat-button (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n                <button type=\"submit\" mat-button mat-dialog-close>Create User</button>\n            </mat-dialog-actions>\n        </form>\n    </mat-card-content>\n    </mat-card>","/**\n * \n * ================================\n * ; Title: deleteRecordDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-record-dialog-component',\n  templateUrl: './delete-record-dialog-component.component.html',\n  styleUrls: ['./delete-record-dialog-component.component.css']\n})\nexport class DeleteRecordDialogComponentComponent implements OnInit {\n\n  recordId: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.recordId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: securityquestionmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for admin security question page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { SecurityQuestionService } from '../services/security-question.service';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\nimport { FormGroup } from '@angular/forms';\nimport { DeleteSecurityquestionDialogComponent } from '../dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-securityquestionmanagement\",\n  templateUrl: \"./securityquestionmanagement.component.html\",\n  styleUrls: [\"./securityquestionmanagement.component.css\"],\n})\nexport class SecurityquestionmanagementComponent implements OnInit {\n  securityQuestions: SecurityQuestion[];\n  //questionId: string;\n  displayedColumns: string[] = [\"question\", \"status\", \"action\"];\n\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private securityQuestionService: SecurityQuestionService\n  ) {\n    /**\n     * Find all Security Questions\n     */\n\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\n      (res) => {\n        this.securityQuestions = res[\"data\"];\n        console.log(res);\n        //console.log(this.securityQuestionService);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   *\n   * SECTION FOR SECURITY QUESTION API CALLS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n\n  //createRoleDialog\n\n  //editRoleDialog\n\n  //deleteRoleDialog\n\n  deleteSecurityQuestion(questionId){\n  const dialogRef = this.dialog.open(DeleteSecurityquestionDialogComponent, {\n    data: {\n      questionId,\n      dialogHeader: 'Delete Security Question',\n      dialogBody: `Are you sure you want to disable security question ` + questionId + `?`\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if (result == 'confirm') {\n      this.securityQuestionService.deleteSecurityQuestion(questionId).subscribe(res => {\n        console.log('Security question successfully deleted')\n        this.securityQuestionService.findAllSecurityQuestions().subscribe(res=> {\n          this.securityQuestions = res['data'];\n          console.log(this.securityQuestions);\n        }, err => {\n          console.log(err);\n        })\n      })\n    }\n  })\n\n}\n  \n}\n","<!--JB moved this p tag and button in here for grouping purposes-->\n<p>Security Questions<button id=\"add\"><mat-icon class=\"matieral-icons\">library_add</mat-icon></button></p> \n\n\n<table mat-table [dataSource]=\"securityQuestions\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"question\">\n    <th mat-header-cell *matHeaderCellDef> Question </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.questionId}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"action\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item>\n          <mat-icon>edit</mat-icon>\n          <span>Edit</span>\n        </button>\n        <button mat-menu-item (click)=\"deleteSecurityQuestion(element._id)\">\n          <mat-icon>delete</mat-icon>\n          <span>Delete</span>\n        </button>\n      </mat-menu>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-patch-dialog',\n  templateUrl: './patch-dialog.component.html',\n  styleUrls: ['./patch-dialog.component.css']\n})\nexport class PatchDialogComponent implements OnInit {\n\n  constructor(private cookieService: CookieService, private http: HttpClient) { }\n\n  ngOnInit() { }\n  cancel() {\n\n  }\n  delete() {\n    let id = this.cookieService.get('id')\n    this.http.patch(`http://localhost:3000/api/users/${id}`, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n     else console.log(\"DELETE Success\")\n   }) \n  }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title class=\"text-center\">\n            <h1>Delete User</h1>\n        </mat-card-title>\n        <mat-card-actions>\n            <button mat-button (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"delete()\" mat-dialog-close>Delete User</button>\n        </mat-card-actions>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PostDialogComponent } from '../dialogs/user-admin-post-dialog/post-dialog.component'\nimport { PutDialogComponent } from '../dialogs/user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../dialogs/user-admin-patch-dialog/patch-dialog.component'\nimport { RoleService } from '../services/role.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MoreVertDialogComponent } from '../dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n@Component({\n  selector: 'app-usermanagement',\n  templateUrl: './usermanagement.component.html',\n  styleUrls: ['./usermanagement.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n  displayedColumns: any = [ 'username', 'fistName', 'lastName', 'phoneNumber', 'address','isDisabled', 'actions']\n\n  constructor(public dialog: MatDialog, private http: HttpClient, private roleService: RoleService, private cookieService: CookieService) { }\n\n\n  ngOnInit() {\n    //Begin Brendans code\n    this.http.get('http://localhost:3000/api/users', httpOptions).subscribe(data => {\n      this.users = data['data'];\n      console.log(this.users)\n    })\n    //end Brendans code\n   }\n\n   /**Begin Brendans code */\n   post() {\n     this.dialog.open(PostDialogComponent)\n   }\n  options(user) {\n    this.cookieService.set('id', user._id)\n    this.dialog.open(MoreVertDialogComponent)\n  }\n  }","<mat-card>\n<mat-card-content>\n    <mat-card-title>\n        <p>User Management</p>\n    </mat-card-title>\n    <mat-card-actions>\n        <button mat-button id=\"post\" (click)=\"post()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button>\n    </mat-card-actions>\n</mat-card-content>\n<mat-card-content>\n    <!--- Username Column -->\n    <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\" style=\"text-align: center\">\n        <ng-container matColumnDef=\"username\">\n            <th mat-header-cell *matHeaderCellDef>Username</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.username }}\n            </td>\n        </ng-container>\n        <!--- First Name Column -->\n        <ng-container matColumnDef=\"fistName\">\n            <th mat-header-cell *matHeaderCellDef>First Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.firstName }}\n            </td>\n        </ng-container>\n        <!--- Last Name Column -->\n        <ng-container matColumnDef=\"lastName\">\n            <th mat-header-cell *matHeaderCellDef>Last Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.lastName }}\n            </td>\n        </ng-container>\n        <!--- Phone Number Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th mat-header-cell *matHeaderCellDef>Phone Number</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.phoneNumber }}\n            </td>\n        </ng-container>\n        <!--- Address Column -->\n        <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef>Address</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.address }}\n            </td>\n        </ng-container>\n        <!--- isDisabled Column -->\n        <ng-container matColumnDef=\"isDisabled\">\n            <th mat-header-cell *matHeaderCellDef>Disabled</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.isDisabled }}\n            </td>\n        </ng-container>\n        <!--- Actions Column -->\n        <ng-contaoner matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef>Actions</th>\n                <td mat-cell *matCellDef=\"let user\">\n                    <button mat-button (click)=\"options(user)\"><mat-icon>more_vert</mat-icon></button>\n                </td>\n        </ng-contaoner>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n</mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: about.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for about page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","/**\n * \n * ================================\n * ; Title: create-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Create Security Question Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-securityquestion-dialog',\n  templateUrl: './create-securityquestion-dialog.component.html',\n  styleUrls: ['./create-securityquestion-dialog.component.css']\n})\nexport class CreateSecurityquestionDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>create-securityquestion-dialog works!</p>\n","/**\n * \n * ================================\n * ; Title: catalog.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: service for catalog api requests\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Catalog } from '../interfaces/catalog.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n     * \n     * Find All Items\n     * \n     */\n    findAllCatalogItems(): Observable<any>{\n      return this.http.get('/api/catalog/');\n    }\n\n    /**\n     * \n     * Find Item By Id\n     * \n     */\n    findCatalogItemById(catalogId: string): Observable<any>{\n      return this.http.get(`/api/catalog/${catalogId}`)\n    }\n\n    /**\n     * \n     * Create Item\n     * \n     */\n    createCatalogItem(title: string, price: number): Observable<any>{\n      return this.http.post('/api/catalog/',{\n        title,\n        price\n      })\n    }\n\n    /**\n     * \n     * Update Item\n     * \n     */\n    updateCatalogItem(catalogId: string, title: string, price:number, isDisabled: boolean): Observable<any>{\n      return this.http.put(`/api/catalog/${catalogId}/update`,{\n        title,\n        price,\n        isDisabled\n      })\n    }\n\n    /**\n     * \n     * Delete Item\n     * \n     */\n    deleteCatalogItem(catalogId: string): Observable<any>{\n      return this.http.patch(`/api/catalog/${catalogId}`,{\n        //nothing needs to be passed since we have the disable written at the api level\n      })\n    }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();\n  \n  constructor(private cookieService: CookieService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  singOut(){\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/signin']);\n  }\n\n}\n","<div fxLayout=\"column\" class=\"pageContainer\">\n\n  <!-- navigation -->\n  <nav fxFlex> \n    <mat-toolbar fxFlex>\n      <img src=\"./assets/logo2.png\" class=\"brandLogo\" routerLink=\"/\">\n      <a class=\"navbar-link\" routerLink=\"/about\">About</a>\n      <a class=\"navbar-link\" routerLink=\"/pricing\">Pricing</a>\n      <a class=\"navbar-link\" routerLink=\"/contact\">Contact Us</a>\n      <a class=\"navbar-link\" routerLink=\"/profile\">Profile</a>\n      <a class=\"navbar-link\" routerLink=\"/admin\">Administration</a>\n      <span></span>\n      <span class=\"example-spacer\"></span>\n      <a class=\"navbar-link\" (click)=\"singOut()\">Sign Out</a>\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <br /><br /><br />\n      <router-outlet></router-outlet>\n      <br /><br /><br />\n    </main>\n  </div>\n  <!-- footer -->\n  <div fxFlex >\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content footerStyle\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'pricing',\n        component: PricingComponent\n      },\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'admin',\n        component: AdministrationComponent\n      },\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      }\n    ],\n    // canActivate: [AuthGuard]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: '/not-found'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}