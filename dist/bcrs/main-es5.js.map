{"version":3,"sources":["webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.ts","webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/administration/administration.component.ts","webpack:///src/app/pages/administration/administration.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/app/pages/administration/securityquestionmanagement/patch-dialog/patch-dialog.component.ts","webpack:///src/app/pages/administration/securityquestionmanagement/patch-dialog/patch-dialog.component.html","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.ts","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.html","webpack:///src/app/pages/administration/services/role.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/pages/pricing/pricing.component.ts","webpack:///src/app/pages/pricing/pricing.component.html","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/pages/administration/services/security-question.service.ts","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.html","webpack:///src/app/pages/post-dialog/post-dialog.component.ts","webpack:///src/app/pages/post-dialog/post-dialog.component.html","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.ts","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.html","webpack:///src/app/pages/patch-dialog/patch-dialog.component.ts","webpack:///src/app/pages/patch-dialog/patch-dialog.component.html","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.ts","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.html","webpack:///src/app/pages/administration/usermanagement/usermanagement.component.ts","webpack:///src/app/pages/put-dialog/put-dialog.component.ts","webpack:///src/app/pages/put-dialog/put-dialog.component.html","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CatalogmanagementComponent","selector","templateUrl","styleUrls","HomeComponent","httpOptions","headers","AdministrationComponent","dialog","http","roleService","cookieService","get","subscribe","data","users","open","user","set","_id","post","AuthLayoutComponent","PatchDialogComponent","dialogRef","router","dialogHeader","dialogBody","CreateRoleDialogComponent","environment","production","AuthGuard","route","state","isAuthenticated","navigate","providedIn","RolemanagementComponent","roleServce","displayedColumns","actions","findAllRoles","res","roleDataSource","console","log","err","roleId","disableClose","width","afterClosed","result","deleteRole","RoleService","text","isDisabled","put","patch","AppComponent","template","styles","PricingComponent","SigninComponent","fb","_snackBar","verticalPosition","form","group","userName","compose","required","password","username","controls","value","errorMessage","openSnackBar","duration","panelClass","signin","ContactComponent","SecurityQuestionService","newSecurityQuestion","questionId","updatedSecurityQuestion","ProfileComponent","AppModule","declarations","imports","providers","bootstrap","PurchasegraphComponent","PostDialogComponent","createUserForm","firstName","lastName","address","email","phoneNumber","newUser","reset","createUser","cancel","DeleteRecordDialogComponentComponent","recordId","id","SecurityquestionmanagementComponent","securityQuestionService","findAllSecurityQuestions","securityQuestions","UsermanagementComponent","PutDialogComponent","updatedUserForm","updatedUser","updateUser","AboutComponent","BaseLayoutComponent","year","Date","now","deleteAll","singOut","NotFoundComponent","routes","path","component","children","canActivate","redirectTo","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","exports","bootstrapModule","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-catalogmanagement',\n  templateUrl: './catalogmanagement.component.html',\n  styleUrls: ['./catalogmanagement.component.css']\n})\nexport class CatalogmanagementComponent implements OnInit {\n\n  constructor() { \n    /**\n       * \n       * Find all Catalog Items\n       */\n      \n  }\n\n  ngOnInit(): void {\n  }\n\n    /**\n   * \n   * SECTION FOR CATALOG APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   * \n   */\n\n}\n","<p>catalogmanagement works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"main-welcome\">\n  <h1 class=\"title\">\n    Welcome to WEB 450's - Bob's Computer Repair Shop <br />\n    <span class=\"subtitle\">\n      Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait unitl the last minute to begin working on each item.\n    </span>\n  </h1>\n</div>\n","/**\n * \n * ================================\n * ; Title: administration.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for administration page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PostDialogComponent } from '../post-dialog/post-dialog.component'\nimport { PutDialogComponent } from '../put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../patch-dialog/patch-dialog.component'\nimport { RoleService } from './services/role.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.css']\n})\n\n\nexport class AdministrationComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n\n\n  constructor(public dialog: MatDialog, private http: HttpClient, private roleService: RoleService, private cookieService: CookieService) { \n\n   \n  }\n\n\n  ngOnInit() {\n    //Begin Brendans code\n    this.http.get('http://localhost:3000/api/users', httpOptions).subscribe(data => {\n      this.users = data['data'];\n    })\n    //end Brendans code\n   }\n\n   /**Begin Brendans code */\n   post() {\n     this.dialog.open(PostDialogComponent)\n   }\n   update(user) {\n    this.cookieService.set('updateId', user._id)\n    this.dialog.open(PutDialogComponent)\n   }\n   delete(user) {\n    this.cookieService.set('deleteId', user._id)\n    this.dialog.open(PatchDialogComponent)\n   }\n   ///**End Brendans code */\n\n\n  \n}\n","<h1>Administration Dashboard</h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-content>\n            <div fxLayout=\"column\">\n\n\n\n<!--USER management column-->\n    <div fxFlex class=\"childColumnContainers\">\n        <div fxFlex>\n        <p>User Management</p><button mat-button id=\"post\" (click)=\"post()\"><mat-icon>open_in_new</mat-icon></button>\n      <!---<app-usermanagement></app-usermanagement>-->\n        <table class=\"table\" style=\"text-align: center\">\n            <thead>\n            <tr>\n                    <th scope=\"col\">Username</th>\n                    <th scope=\"col\">First Name</th>  \n                    <th scope=\"col\">Last Name</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Address</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let user of users\">\n                    <td scope=\"row\">{{ user.username }}</td>\n                    <td scope=\"row\">{{ user.firstName }}</td>\n                    <td scope=\"row\">{{ user.lastName }}</td>\n                    <td scope=\"row\">{{ user.phoneNumber }}</td>\n                    <td scope=\"row\">{{ user.address }}</td>\n                    <td scope=\"row\">{{ user.email }}</td>\n                    <td scope=\"row\"><button mat-button (click)='update(user)'><mat-icon class=\"material-icons\">update</mat-icon></button><button mat-button (click)=\"delete(user)\"><mat-icon class=\"material-icons\">delete</mat-icon></button></td>\n                </tr>\n            </tbody>\n        </table>\n        </div>\n    </div>\n    \n\n\n\n<!--Security questions and Role Management Column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Security questions go here-->\n<mat-card>\n    <mat-card-content>\n               <p>Security Questions</p>\n               <app-securityquestionmanagement></app-securityquestionmanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Role Management Goes here-->\n<mat-card>\n    <mat-card-content>\n                <p>Role Management <button mat-raised-button class=\"crudButton\">Create</button></p>    \n               <app-rolemanagement></app-rolemanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n\n\n<!--Catalog and purchases graph column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Catalog Goes here-->\n               <p>Catalog</p>\n               <app-catalogmanagement></app-catalogmanagement>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Purchases Graph goes here-->\n                <p>Purchases</p>\n                <!--<app-purchasegraph></app-purchasegraph>-->\n            </div>\n        </div>\n    </div>\n\n\n\n\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n<br />\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-patch-dialog',\n  templateUrl: './patch-dialog.component.html',\n  styleUrls: ['./patch-dialog.component.css']\n})\nexport class PatchDialogComponent implements OnInit {\n\n  _id: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n  constructor(private dialogRef: MatDialogRef<PatchDialogComponent>, private router: Router,  @Inject(MAT_DIALOG_DATA) data) { \n\n    this._id = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n}\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n\n<div mat-dialog-content>\n  <p> {{ dialogBody }} </p>\n  <small style=\"color: red;\">WARNING: This cannot be undone.</small>\n</div>\n\n<hr />\n\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\" cdkFocusInitial>Save</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-role-dialog',\n  templateUrl: './create-role-dialog.component.html',\n  styleUrls: ['./create-role-dialog.component.css']\n})\nexport class CreateRoleDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>create-role-dialog works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * \n * ================================\n * ; Title: auth.guard.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file used for checking if a cookie was set/\n *                user has authorization to access a given page. \n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  //import our cookie service and router so we can use them with this guard\n  constructor(private router: Router, private cookieService: CookieService){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isAuthenticated = this.cookieService.get('sessionuser');\n    if(isAuthenticated){\n      return true;\n    } else {\n    //if no sessionUser is present, then redirect them to the signin page.\n    this.router.navigate(['/session/signin']);\n    return false;\n   }\n  }\n}\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\nimport { Role } from '../interfaces/role.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HttpClient } from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { DeleteRecordDialogComponentComponent } from './delete-record-dialog-component/delete-record-dialog-component.component';\n\n//todo create a taskDialogComponent\n\n\n@Component({\n  selector: 'app-rolemanagement',\n  templateUrl: './rolemanagement.component.html',\n  styleUrls: ['./rolemanagement.component.css']\n})\n\n\n\nexport class RolemanagementComponent implements OnInit {\n  roleDataSource: Role[];\n  displayedColumns: string[] = ['role', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private roleServce: RoleService) { \n    \n    /**\n      * Find All Roles\n      */\n     this.roleServce.findAllRoles().subscribe(res => {\n       this.roleDataSource = res['data'];\n       console.log(this.roleDataSource);\n     }, err => {\n       console.log(err);\n     })\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * \n   * \n   * SECTION FOR ROLE API (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n \n   //createRoleDialog\n\n   \n   //editRoleDialog\n\n\n   //deleteRoleDialog\n  deleteRole(roleId){\n     const dialogRef = this.dialog.open(DeleteRecordDialogComponentComponent, {\n       data: {\n         roleId,\n         dialogHeader: 'Disabling Role',\n         dialogBody: `Are you sure you want to disable role ${roleId}?`\n       },\n       disableClose: true,\n       width: '800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'confirm') {\n         this.roleServce.deleteRole(roleId).subscribe(res => {\n           console.log('Role successfully deleted')\n           //make another call to update the list\n           this.roleServce.findAllRoles().subscribe(res => {\n            this.roleDataSource = res['data'];\n            console.log(this.roleDataSource);\n          }, err => {\n            console.log(err);\n          })\n         })\n       }\n     })\n  }\n\n\n   \n}\n","<table mat-table [dataSource]=\"roleDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.text}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item>\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteRole(element._id)\">\n              <mat-icon>delete</mat-icon>\n              <span>Delete</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: role.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for interfacing with our apis for the role-management\n *  component\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Role } from '../interfaces/role.interface'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  //import http client\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find All Roles\n   * \n   */\n   findAllRoles(): Observable<any>{\n     return this.http.get(`/api/roles/`);\n   }\n\n   /**\n   * \n   * Find Role By ID\n   * \n   */\n  findRoleById(roleId: string): Observable<any>{\n    return this.http.get(`/api/roles/${roleId}`)\n  }\n\n\n   /**\n    * \n    * Create Role\n    * \n    */\ncreateRole(text: Role): Observable<any>{\n  return this.http.post(`/api/roles/`, {\n    text: text \n  })\n}\n\n\n  /**\n   * \n   * Update Role\n   * \n   */\nupdateRole(roleId: String, text: Role, isDisabled: Boolean){\n  return this.http.put(`/api/roles/${roleId}`, {\n    text,\n    isDisabled\n  })\n}\n\n  /**\n   * \n   * Delete Role\n   * \n   */\n  deleteRole(roleId: String): Observable<any>{\n    return this.http.patch(`/api/roles/${roleId}`,{\n      roleId\n    })\n  }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/**\n * \n * ================================\n * ; Title: pricing.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for pricing page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pricing',\n  templateUrl: './pricing.component.html',\n  styleUrls: ['./pricing.component.css']\n})\nexport class PricingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pricing works!</p>\n","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(private router: Router, \n    private cookieService: CookieService, \n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar) { \n\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  signin(){\n    const username = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    console.log(username);\n    console.log(password);\n    \n\n    this.http.post('/api/session/signin', {\n      username,\n      password\n    }).subscribe(res => {\n      console.log(res['data'].username);\n      if (res['data'].username){\n        //user authenticated\n        this.cookieService.set('sessionuser', res['data'].username, 1);\n        this.router.navigate(['/']);\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n        this.openSnackBar(this.errorMessage);\n    });\n  }\n\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n  }\n}\n","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n            <!--LOGO-->\n            <div fxFlex>\n                <img src=\"./assets/logo.png\" class=\"logo\">\n            </div>\n\n            <!--SigninForm-->\n            <div fxFlex class=\"signInFormStuff\">\n                <form [formGroup]=\"form\" \n                      (ngSubmit)=\"signin(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                    <mat-form-field>\n                        <mat-label>Username</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['userName']\" \n                               placeholder=\"username\" >\n                      </mat-form-field><br />\n                      <mat-form-field>\n                        <mat-label>Password</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['password']\"\n                               placeholder=\"password\">\n                      </mat-form-field>\n                      <p>\n                        <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Sign-in</button>\n                      </p>\n                </form>\n            </div>\n\n            <!--Forgot Password-->\n            <div fxFlex>\n               <a routerLink=\"/\">Forgot Password?</a>\n            </div>\n            \n            <!--Divider-->\n            <div fxFlex>\n                <hr class=\"divider\">\n            </div>\n\n             <!--Signup Password-->\n            <div fxFlex class=\"signUpSection\">\n                    <button type=\"submit\" \n                            fxFlex \n                            mat-raised-button \n                            color=\"primary\"\n                            >Sign-Up</button>\n            </div>\n        </div>\n    </mat-card-content>\n    </mat-card>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: contact.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for contact page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","/**\n * \n * ================================\n * ; Title: security-question.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: component responsible for interfacing with our apis for the security-question\n *  component\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  /**\n   * \n   * Find All Security Questions\n   * \n   */\n    findAllSecurityQuestions(): Observable<any> {\n      return this.http.get(`/api/securityQuestions/`);\n    }\n   /**\n   * \n   * Find Security Question by ID\n   * \n   */\n\n  findSecurityQuestionById(_id: string): Observable<any> {\n    return this.http.get('/api/securityQuestions/' + _id);\n  }\n  \n\n   /**\n    * \n    * Create Security Question\n    * \n    */\n\n\n   createSecurityQuestion(newSecurityQuestion: SecurityQuestion): Observable<any> {\n    return this.http.post('/api/security-questions/', {\n      questionId: newSecurityQuestion.questionId\n    })\n  }\n\n  /**\n   * \n   * Update Security Question\n   * \n   */\n\n   updateSecurityQuestion(questionId: string, updatedSecurityQuestion: SecurityQuestion): Observable<any> {\n   return this.http.put('/api/security-questions/'+ questionId, {\n    questionId: updatedSecurityQuestion.questionId\n    })\n  }\n\n  /**\n   * \n   * Delete Security Question\n   * \n   */\n\n   deleteSecurityQuestion(_id: string, isDisabled: Boolean): Observable<any> {\n     return this.http.patch('/api/security-questions/' + _id, {\n       isDisabled: true\n     });\n   }\n\n}\n\n\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PostDialogComponent } from './pages/post-dialog/post-dialog.component';\nimport { PutDialogComponent } from './pages/put-dialog/put-dialog.component';\nimport { PatchDialogComponent } from './pages/patch-dialog/patch-dialog.component';\nimport { RolemanagementComponent } from './pages/administration/rolemanagement/rolemanagement.component';\nimport { CatalogmanagementComponent } from './pages/administration/catalogmanagement/catalogmanagement.component';\nimport { PurchasegraphComponent } from './pages/administration/purchasegraph/purchasegraph.component';\nimport { SecurityquestionmanagementComponent } from './pages/administration/securityquestionmanagement/securityquestionmanagement.component';\nimport { UsermanagementComponent } from './pages/administration/usermanagement/usermanagement.component';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DeleteRecordDialogComponentComponent } from './pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from './pages/administration/dialogs/create-role-dialog/create-role-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SigninComponent,\n    AdministrationComponent,\n    NotFoundComponent,\n    ProfileComponent,\n    ContactComponent,\n    PricingComponent,\n    AboutComponent,\n    PostDialogComponent,\n    PutDialogComponent,\n    PatchDialogComponent,\n    RolemanagementComponent,\n    CatalogmanagementComponent,\n    PurchasegraphComponent,\n    SecurityquestionmanagementComponent,\n    UsermanagementComponent,\n    DeleteRecordDialogComponentComponent,\n    CreateRoleDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatTableModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  providers: [ CookieService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * \n * ================================\n * ; Title: purchasegraph.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for purchase graph\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-purchasegraph',\n  templateUrl: './purchasegraph.component.html',\n  styleUrls: ['./purchasegraph.component.css']\n})\nexport class PurchasegraphComponent implements OnInit {\n\n  constructor() { \n    /**\n       * Find All purchases\n       */\n  }\n\n  ngOnInit(): void {\n  }\n\n   /**\n   * \n   * SECTION FOR PURCHASES APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n  \n\n}\n","<p>purchasegraph works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  createUserForm: any\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.createUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n  }\n  createUser() {\n    let newUser = {\n      username: this.createUserForm.get('username').value,\n      password: this.createUserForm.get('password').value,\n      firstName: this.createUserForm.get('firstName').value,\n      lastName: this.createUserForm.get('lastName').value,\n      address: this.createUserForm.get('address').value,\n      email: this.createUserForm.get('email').value,\n      phoneNumber: this.createUserForm.get('phoneNumber').value\n    }\n    this.http.post('http://localhost:3000/api/users', newUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"POST SUCCESS\")\n    }) \n    this.createUserForm.reset();\n  }\n  cancel() {\n\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"createUser()\" [formGroup]=\"createUserForm\">\n        <mat-card-title>\n            <h1>Create User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. rjackson25\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-dialog-actions>\n                <button class=\"btn btn-danger\" (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n                <button type=\"submit\" class=\"btn btn-success\" mat-dialog-close>Create User</button>\n            </mat-dialog-actions>\n        </form>\n    </mat-card-content>\n    </mat-card>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-record-dialog-component',\n  templateUrl: './delete-record-dialog-component.component.html',\n  styleUrls: ['./delete-record-dialog-component.component.css']\n})\nexport class DeleteRecordDialogComponentComponent implements OnInit {\n\n  recordId: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.recordId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-patch-dialog',\n  templateUrl: './patch-dialog.component.html',\n  styleUrls: ['./patch-dialog.component.css']\n})\nexport class PatchDialogComponent implements OnInit {\n\n  constructor(private cookieService: CookieService, private http: HttpClient) { }\n\n  ngOnInit() { }\n  cancel() {\n\n  }\n  delete() {\n    let id = this.cookieService.get('deleteId')\n    this.http.patch(`http://localhost:3000/api/users/${id}`, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n     else console.log(\"DELETE Success\")\n   }) \n  }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title class=\"text-center\">\n            <h1>Delete User</h1>\n        </mat-card-title>\n        <mat-card-actions>\n            <button class=\"btn btn-success\" mat-button (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n            <button class=\"btn btn-danger\" mat-button (click)=\"delete()\" mat-dialog-close>Delete User</button>\n        </mat-card-actions>\n    </mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: securityquestionmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for admin security question page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { SecurityQuestionService } from '../services/security-question.service';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\nimport { FormGroup } from '@angular/forms';\nimport { PatchDialogComponent } from './patch-dialog/patch-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-securityquestionmanagement\",\n  templateUrl: \"./securityquestionmanagement.component.html\",\n  styleUrls: [\"./securityquestionmanagement.component.css\"],\n})\nexport class SecurityquestionmanagementComponent implements OnInit {\n  securityQuestions: SecurityQuestion[];\n  questionId: string;\n  displayedColumns: string[] = [\"question\", \"status\", \"action\"];\n\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private securityQuestionService: SecurityQuestionService\n  ) {\n    /**\n     * Find all Security Questions\n     */\n\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\n      (res) => {\n        this.securityQuestions = res[\"data\"];\n        console.log(res);\n        //console.log(this.securityQuestionService);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   *\n   * SECTION FOR SECURITY QUESTION API CALLS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n\n  //createRoleDialog\n\n  //editRoleDialog\n\n  //deleteRoleDialog\n\n  deleteSecurityQuestion(questionId){\n  const dialogRef = this.dialog.open(PatchDialogComponent, {\n    data: {\n      questionId,\n      dialogHeader: 'Delete Security Question',\n      dialogBody: `Are you sure you want to delete security question ` + questionId + `?`\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n}\n  \n}\n","<table mat-table [dataSource]=\"securityQuestions\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"question\">\n    <th mat-header-cell *matHeaderCellDef> Question </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.questionId}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"action\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item>\n          <mat-icon>edit</mat-icon>\n          <span>Edit</span>\n        </button>\n        <button mat-menu-item (click)=\"deleteSecurityQuestion(element._id)\">\n          <mat-icon>delete</mat-icon>\n          <span>Delete</span>\n        </button>\n      </mat-menu>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usermanagement',\n  templateUrl: './usermanagement.component.html',\n  styleUrls: ['./usermanagement.component.css']\n})\nexport class UsermanagementComponent implements OnInit {\n\n  constructor() { \n     /**\n     * Find all Users\n     */\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n    * \n    * SECITION FOR USER MANAGEMENT API CALLS (create, update, delete)\n    * You'll need to import http client and the related service\n    * \n    */\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-put-dialog',\n  templateUrl: './put-dialog.component.html',\n  styleUrls: ['./put-dialog.component.css']\n})\nexport class PutDialogComponent implements OnInit {\n  updatedUserForm: FormGroup\n  user: any\n  constructor(private cookieService: CookieService, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.updatedUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n   /* let id = this.cookieService.get('updateId')\n    this.http.get(`http://localhost:3000/api/user/${id}`).subscribe(user => {\n      this.user = user['data']\n    }) */\n  }\n  updateUser() {\n    let updatedUser = {\n      username: this.updatedUserForm.get('username').value,\n      password: this.updatedUserForm.get('password').value,\n      firstName: this.updatedUserForm.get('firstName').value,\n      lastName: this.updatedUserForm.get('lastName').value,\n      address: this.updatedUserForm.get('address').value,\n      email: this.updatedUserForm.get('email').value,\n      phoneNumber: this.updatedUserForm.get('phoneNumber').value\n    }\n    let id = this.cookieService.get('updateId')\n    this.http.put(`http://localhost:3000/api/users/${id}`, updatedUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"UPDATE Success\")\n    })\n    this.updatedUserForm.reset();\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"updateUser()\" [formGroup]=\"updatedUserForm\">\n        <mat-card-title>\n            <h1>Update User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-dialog-actions>\n                <button class=\"btn btn-danger\" mat-dialog-close>Cancel</button>\n                <button type=\"submit\" class=\"btn btn-success\" mat-dialog-close>Update User</button>\n            </mat-dialog-actions>\n            <br>\n            <br>\n        </form>\n    </mat-card-content>\n    </mat-card>","/**\n * \n * ================================\n * ; Title: about.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for about page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();\n  \n  constructor(private cookieService: CookieService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  singOut(){\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/signin']);\n  }\n\n}\n","<div fxLayout=\"column\" class=\"pageContainer\">\n\n  <!-- navigation -->\n  <nav fxFlex> \n    <mat-toolbar fxFlex>\n      <img src=\"./assets/logo2.png\" class=\"brandLogo\" routerLink=\"/\">\n      <a class=\"navbar-link\" routerLink=\"/about\">About</a>\n      <a class=\"navbar-link\" routerLink=\"/pricing\">Pricing</a>\n      <a class=\"navbar-link\" routerLink=\"/contact\">Contact Us</a>\n      <a class=\"navbar-link\" routerLink=\"/profile\">Profile</a>\n      <a class=\"navbar-link\" routerLink=\"/admin\">Administration</a>\n      <span></span>\n      <span class=\"example-spacer\"></span>\n      <a class=\"navbar-link\" (click)=\"singOut()\">Sign Out</a>\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <br /><br /><br />\n      <router-outlet></router-outlet>\n      <br /><br /><br />\n    </main>\n  </div>\n  <!-- footer -->\n  <div fxFlex >\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content footerStyle\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'pricing',\n        component: PricingComponent\n      },\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'admin',\n        component: AdministrationComponent\n      },\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      }\n    ],\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: '/not-found'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}