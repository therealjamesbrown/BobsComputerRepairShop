{"version":3,"sources":["webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.ts","webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.html","webpack:///src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.ts","webpack:///src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/administration/administration.component.ts","webpack:///src/app/pages/administration/administration.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/app/pages/create-account/create-account.component.ts","webpack:///src/app/pages/create-account/create-account.component.html","webpack:///src/app/pages/services/purchasehistory.service.ts","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.html","webpack:///src/app/pages/reset-password/reset-password/reset-password.component.ts","webpack:///src/app/pages/reset-password/reset-password/reset-password.component.html","webpack:///src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.html","webpack:///src/app/pages/home/dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component.ts","webpack:///src/app/pages/home/dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component.html","webpack:///src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.ts","webpack:///src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.html","webpack:///src/app/pages/home/dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component.ts","webpack:///src/app/pages/home/dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component.html","webpack:///src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.ts","webpack:///src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.html","webpack:///src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.html","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.ts","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.html","webpack:///src/app/pages/home/orderhistory/orderhistory.component.ts","webpack:///src/app/pages/home/orderhistory/orderhistory.component.html","webpack:///src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.html","webpack:///src/app/pages/administration/services/role.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/app/pages/home/createorder/createorder.component.ts","webpack:///src/app/pages/home/createorder/createorder.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/pages/administration/services/security-question.service.ts","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/notfound/notfound.component.ts","webpack:///src/app/pages/notfound/notfound.component.html","webpack:///src/app/shared/error.interceptor.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.html","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.ts","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.html","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.ts","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.html","webpack:///src/app/pages/administration/usermanagement/usermanagement.component.ts","webpack:///src/app/pages/administration/usermanagement/usermanagement.component.html","webpack:///src/app/pages/reset-password/verify-username/verify-username.component.ts","webpack:///src/app/pages/reset-password/verify-username/verify-username.component.html","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.html","webpack:///src/app/pages/administration/services/catalog.service.ts","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/pages/reset-password/reset-password-process/reset-password-process.component.ts","webpack:///src/app/pages/reset-password/reset-password-process/reset-password-process.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/pages/error/error.component.ts","webpack:///src/app/pages/error/error.component.html","webpack:///src/app/pages/reset-password/verify-security-questions/verify-security-questions.component.ts","webpack:///src/app/pages/reset-password/verify-security-questions/verify-security-questions.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CatalogmanagementComponent","http","dialog","catalogServce","displayedColumns","actions","findAllCatalogItems","subscribe","res","catalogDataSource","err","console","log","dialogRef","open","data","disableClose","width","afterClosed","result","dialogHeader","catalogItem","dialogBody","title","_id","deleteCatalogItem","createCatalogItem","selector","templateUrl","styleUrls","CreateCatalogItemComponent","catalogService","fb","createCatalogItemForm","group","required","price","controls","value","HomeComponent","cookieService","user","get","ad","adCookie","set","AdministrationComponent","AuthLayoutComponent","CreateAccountComponent","router","firstFormGroup","username","password","firstName","lastName","phoneNumber","address","secondFormGroup","securityQuestion1","securityQuestion1Answer","securityQuestion2","securityQuestion2Answer","securityQuestion3","securityQuestion3Answer","thirdFormGroup","questions","newUser","post","reset","newSecurityQuestions","secuirtyQuestion1Answer","secuirtyQuestion3Answer","signInUser","navigate","provide","useValue","displayDefaultIndicatorType","registerAccount","setSecurityQuestions","signIn","providers","PurchasehistoryService","invoideId","patch","providedIn","CreateRoleDialogComponent","roleServce","createRoleForm","text","createRole","alert","environment","production","AuthGuard","route","state","isAuthenticated","DeleteSecurityquestionDialogComponent","questionId","ResetPasswordComponent","snapshot","queryParamMap","form3","compose","resetPassword","MoreVertDialogComponent","update","ViewtransactiondialogComponent","transaction","laborAmount","lineItem","lineItemTotal","orderDate","partsAmount","grandTotal","total","item","DeleteCatalogItemComponent","catalogItemId","ViewAllTransactionsDialogComponent","purchaseHistoryService","checked","findAllPurchasesByUserName","allPurchaseHistoryDataSource","UpdateCatalogItemComponent","options","isDisabled","updateCatalogItemForm","selected","updateCatalogItem","UpdateRoleDialogComponent","roleId","updateRoleForm","updateRole","RolemanagementComponent","findAllRoles","roleDataSource","deleteRole","OrderhistoryComponent","purchaseHistoryDataSource","nonArchivedPurchaseHistoryDataSource","push","invoiceId","archiveTransaction","viewAllTransactions","UpdateSecurityquestionDialogComponent","SecurityQuestionService","securityQuestionId","updateSecurityQuestionForm","updateSecurityQuestion","RoleService","put","AppComponent","template","styles","httpOptions","headers","SigninComponent","_snackBar","verticalPosition","form","userName","errorMessage","openSnackBar","duration","panelClass","signin","CreateorderComponent","PutDialogComponent","updatedUserForm","email","updatedUser","id","updateUser","ContactComponent","ProfileComponent","AppModule","useClass","multi","declarations","imports","bootstrap","NotfoundComponent","ErrorInterceptor","req","next","handle","pipe","indexOf","status","error","message","statusText","PurchasegraphComponent","PostDialogComponent","createUserForm","createUser","cancel","DeleteRecordDialogComponentComponent","recordId","SecurityquestionmanagementComponent","securityQuestionService","findAllSecurityQuestions","securityQuestions","deleteSecurityQuestion","createSecurityQuestion","PatchDialogComponent","UserManagementComponent","roleService","users","VerifyUsernameComponent","form1","queryParams","skipLocationChange","validateUsername","AboutComponent","CreateSecurityquestionDialogComponent","createSecurityQuestionForm","CatalogService","catalogId","BaseLayoutComponent","year","Date","now","deleteAll","singOut","ResetPasswordProcessComponent","stepOneComponent","stepTwoComponent","form2","stepThreeComponent","routes","path","component","children","canActivate","redirectTo","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","exports","ErrorComponent","VerifySecurityQuestionsComponent","question1","questionText","question2","question3","answerToSecurityQuestion1","answerToSecurityQuestion2","answerToSecurityQuestion3","questionText1","questionText2","questionText3","answerText1","answerText2","answerText3","bootstrapModule","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["/**\n * \n * ================================\n * ; Title: catalogmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component responsible for catalog page\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateCatalogItemComponent } from '../dialogs/create-catalog-item/create-catalog-item.component';\nimport { DeleteCatalogItemComponent } from '../dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateCatalogItemComponent } from '../dialogs/update-catalog-item/update-catalog-item.component';\nimport { Catalog } from '../interfaces/catalog.interface';\nimport { CatalogService } from '../services/catalog.service';\n\n@Component({\n  selector: 'app-catalogmanagement',\n  templateUrl: './catalogmanagement.component.html',\n  styleUrls: ['./catalogmanagement.component.css']\n})\nexport class CatalogmanagementComponent implements OnInit {\n\n  catalogDataSource: Catalog[];\n  displayedColumns: string[] = ['title', 'price', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private catalogServce: CatalogService) { \n    /**\n       * \n       * Find all Catalog Items\n       */\n      this.catalogServce.findAllCatalogItems().subscribe(res => {\n        this.catalogDataSource = res['data'];\n        //console.log(this.catalogDataSource);\n      }, err => {\n        console.log(err);\n      })\n  }\n\n  ngOnInit(): void {\n  }\n\n    /**\n   * \n   * SECTION FOR CATALOG APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   * \n   */\n\n  //createItem\n  createCatalogItem(){\n    const dialogRef = this.dialog.open(CreateCatalogItemComponent, {\n      data: {\n\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n        //refresh the list\n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //updateItem\n  updateCatalogItem(data){\n    console.log(data);\n    const dialogRef = this.dialog.open(UpdateCatalogItemComponent, {\n      data: {\n        data,\n        dialogHeader: 'Update Catalog Item'\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'update'){\n        //refresh the list\n        \n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //deleteItem\n  deleteCatalogItem(catalogItem){\n    const dialogRef = this.dialog.open(DeleteCatalogItemComponent, {\n      data: {\n        catalogItem,\n        dialogHeader: 'Disabling Item',\n        dialogBody: `Are you sure you want to disable ${catalogItem.title}`\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'confirm'){\n        console.log(catalogItem._id);\n       this.catalogServce.deleteCatalogItem(catalogItem._id).subscribe( res => {\n         //make another call to update the list\n         this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }, err => {\n         console.log(err)\n       })\n        \n      }\n    })\n  }\n}\n","<p>Items<button mat-button class=\"crudButton\" (click)=\"createCatalogItem()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"catalogDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef> Title </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.price | currency}} </td>\n      </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateCatalogItem(element)\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteCatalogItem(element)\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: createCatalogItemdialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-create-catalog-item',\n  templateUrl: './create-catalog-item.component.html',\n  styleUrls: ['./create-catalog-item.component.css']\n})\nexport class CreateCatalogItemComponent implements OnInit {\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient, \n    private fb: FormBuilder, \n    private dialogRef: MatDialogRef<CreateCatalogItemComponent>, \n    @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateCatalogItemForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createCatalogItemForm = this.fb.group({\n      title: ['', Validators.required],\n      price: ['', Validators.required]\n    })\n  }\n\n  createCatalogItem(){\n    const title = this.createCatalogItemForm.controls.title.value;\n    const price = this.createCatalogItemForm.controls.price.value;\n\n    this.catalogService.createCatalogItem(title, price).subscribe( res => {\n      title\n      price\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Catalog Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"createCatalogItemForm\" (ngSubmit)=\"createCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createCatalogItemForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n//get the user and welcome them\nuser: any = this.cookieService.get('sessionuser');\nad: Boolean = true; //show the add to begin with\nadCookie: any = this.cookieService.get('adCookie')\n\n  constructor(private cookieService: CookieService) {}\n\n  ngOnInit(): void {\n  }\n  hideAd(){\n    this.ad = false; //hide the add \n    //set a cookie so the ad doesn't come back until next session\n   this.cookieService.set('adCookie','true', 1)\n  }\n\n}\n","<div fxLayout=\"column\" class=\"outerContainer\">\n  <div fxFlex>\n    <mat-card>\n      <mat-card-content>\n        <div fxLayout=\"column\">\n          <div fxFlex class=\"childColumnContainers\">\n            <h1> Welcome, {{user}}!</h1>\n          </div>\n\n          <div fxFlex class=\"childColumnContainers\" *ngIf=\"ad != false && !adCookie\">\n            <mat-card>\n              <mat-card-content class=\"ad\" (click)=\"hideAd()\">\n                Ad goes here\n                <button \n                mat-raised-button \n                class=\"adButton\">X</button>\n                <br>\n                <p>Terms and conditions apply.</p>\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n\n          <div fxFlex class=\"childColumnContainers\">\n            <mat-card>\n              <mat-card-content class=\"ad\">\n                <h3>Purchases By Graph</h3>\n                Coming soon\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n\n          <div fxFlex class=\"childColumnContainers\">\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n              <div fxFlex>\n                <mat-card>\n                  <mat-card-content>\n                    <app-createorder></app-createorder>\n                  </mat-card-content>\n                </mat-card>\n              \n              </div>\n              <div fxFlex>\n                <mat-card>\n                  <mat-card-content>\n                    <app-orderhistory></app-orderhistory>\n                  </mat-card-content>\n                </mat-card>\n                \n              </div>\n            </div>\n          </div>\n\n\n          <div fxFlex class=\"childColumnContainers\">\n            <mat-card class=\"contactContainer\">\n              <mat-card-content class=\"ad\">\n                <h3>Questions?</h3>\n                <p routerLink=\"/contact\" class=\"contact\">Contact</p>\n              </mat-card-content>\n            </mat-card>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: administration.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for administration page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.css']\n})\n\n\nexport class AdministrationComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n\n\n  constructor() { }\n  ngOnInit() { }   \n  \n}\n\n","\n<img src=\"./assets/contact.png\" class=\"logo\">\n<!--Original royalty free image obtained from https://i.pinimg.com/originals/94/00/17/94001795a3efc6330f4b6b835b68b989.png-->\n<h1>Administration Dashboard</h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-content>\n            <div fxLayout=\"column\">\n\n\n\n<!--USER management column-->\n    <div fxFlex class=\"childColumnContainers\">\n        <div fxFlex><mat-card>\n            <mat-card-content>\n     <app-usermanagement></app-usermanagement>\n    </mat-card-content>\n    </mat-card>\n        </div>\n    </div>\n    \n\n\n\n<!--Security questions and Role Management Column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Security questions go here-->\n<mat-card>\n    <mat-card-content>\n               <app-securityquestionmanagement></app-securityquestionmanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Role Management Goes here-->\n<mat-card>\n    <mat-card-content>   \n               <app-rolemanagement></app-rolemanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n<!--Catalog and purchases graph column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Catalog Goes here-->\n               <mat-card>\n                   <mat-card-content>\n                        <app-catalogmanagement></app-catalogmanagement>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Purchases Graph goes here-->\n            <mat-card>\n                <mat-card-content>\n                    <app-purchasegraph></app-purchasegraph>\n                </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n<br />\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ; Reference: Google Material Docs: https://material.angular.io/components/stepper/overview\n * ================================\n * \n */\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { CookieService } from 'ngx-cookie-service'\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class CreateAccountComponent implements OnInit {\n  firstFormGroup: FormGroup\n  secondFormGroup: FormGroup\n  thirdFormGroup: FormGroup\n  newUser: any\n  questions: any\n  securityQuestion1: any\n  securityQuestion2: any\n  securityQuestion3: any\n  constructor(private cookieService: CookieService, private router: Router, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.firstFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      firstName: new FormControl(null, Validators.required),\n      lastName: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, Validators.required),\n      address: new FormControl(null, Validators.required)\n    })\n    this.secondFormGroup = this.fb.group({\n      securityQuestion1: new FormControl(null, Validators.required),\n      securityQuestion1Answer: new FormControl(null, Validators.required),\n      securityQuestion2: new FormControl(null, Validators.required),\n      securityQuestion2Answer: new FormControl(null, Validators.required),\n      securityQuestion3: new FormControl(null, Validators.required),\n      securityQuestion3Answer: new FormControl(null, Validators.required),\n    })\n    this.thirdFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    })\n    this.http.get('/api/securityQuestions').subscribe(res => {\n      this.questions = res['data']\n    })\n  }\n  registerAccount() {\n    this.newUser = {\n      username: this.firstFormGroup.get('username').value,\n      password: this.firstFormGroup.get('password').value,\n      firstName: this.firstFormGroup.get('firstName').value,\n      lastName: this.firstFormGroup.get('lastName').value,\n      phoneNumber: this.firstFormGroup.get('phoneNumber').value,\n      address: this.firstFormGroup.get('address').value\n    }\n    this.http.post('/api/users', this.newUser).subscribe(err => {\n      if (err) {\n        console.log(err)\n      } else {\n        console.log(this.newUser)\n      }\n    })\n    this.firstFormGroup.reset()\n  }\n  setSecurityQuestions() {\n   let newSecurityQuestions = {\n     securityQuestion1: this.securityQuestion1,\n     secuirtyQuestion1Answer: this.secondFormGroup.get('securityQuestion1Answer').value,\n     securityQuestion2: this.securityQuestion2,\n     securityQuestion2Answer: this.secondFormGroup.get('securiyQuestion2Answer').value,\n     securityQuestion3: this.securityQuestion3,\n     secuirtyQuestion3Answer: this.secondFormGroup.get('secuirtyQuestion3Answer').value\n   }\n   console.log(newSecurityQuestions.securityQuestion1)\n  }\n  signIn() {\n   let signInUser = {\n     username: this.thirdFormGroup.get('username').value,\n     password: this.thirdFormGroup.get('password').value\n   }\n   this.http.post('/api/session/signin', signInUser).subscribe(res => {\n    if (res['data'].username) {\n      this.cookieService.set('sessionuser', res['data'].username, 1)\n      this.router.navigate(['/'])\n    }\n   })\n   this.secondFormGroup.reset()\n  }\n}","<mat-card>\n    <mat-card-title>\n        <p color=\"primary\" style=\"text-align: center\">Register For An Account</p>\n    </mat-card-title>\n</mat-card>\n<mat-horizontal-stepper #stepper>\n     <!-- Account Registration -->\n    <mat-step [stepControl]=\"firstFormGroup\">\n       <h1 style=\"text-align: center;\">Sign Up</h1>\n        <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Register Account</ng-template>\n            <mat-form-field>\n                <mat-label>Username</mat-label>\n                <input matInput placeholder=\"Ex. thespidermonkey25\" formControlName=\"username\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Password</mat-label>\n                <input matInput placeholder=\"Ex. root\" formControlName=\"password\" required> \n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"Ex. Peter\" formControlName=\"firstName\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Last Name</mat-label>\n                <input matInput placeholder=\"Ex. Parker\" formControlName=\"lastName\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Phone Number</mat-label>\n                <input matInput placeholder=\"Ex. 867 5309\" formControlName=\"phoneNumber\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Address</mat-label>\n                <input matInput placehodler=\"Ex. 12 Brooklyn Street\" formControlName=\"address\" required>\n            </mat-form-field>\n            <div>\n                <a routerLink=\"/session/signin\">Sign In</a>\n                <button mat-button (click)=\"registerAccount()\" matStepperNext>Create Account</button>\n            </div>\n        </form>\n    </mat-step>\n    <!-- Security Questions -->\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Security Questions\">\n        <form style=\"text-align: center;\" [formGroup]=\"secondFormGroup\" (ngSubmit)=\"setSecurityQuestions()\">\n            <mat-card-content>\n                <mat-card-title>Set Your Security Questions.</mat-card-title>\n                <mat-card-subtitle>So You Can Reset Your Password.</mat-card-subtitle>\n                <!-- Security Question 1 -->\n                    <mat-label>Security Question 1</mat-label>\n                    <mat-select [(value)]=\"securityQuestion1\">\n                        <mat-option *ngFor=\"let question of questions\">{{ question.questionId }}</mat-option>\n                    </mat-select>\n                <input type=\"text\" formControlName=\"securityQuestion1Answer\" />\n                <br>\n                <!-- Security Question 2 -->\n                    <mat-label>Security Question 2</mat-label>\n                    <mat-select [(value)]=\"securityQuestion2\">\n                        <mat-option *ngFor=\"let question of questions\">{{ question.questionId }}</mat-option>\n                    </mat-select>\n                <input type=\"text\" formControlName=\"securityQuestion2Answer\" />\n                <br>\n                <!-- Security Question 3 -->\n                    <mat-label>Security Question 3</mat-label>\n                    <mat-select [(value)]=\"securityQuestion3\">\n                        <mat-option *ngFor=\"let question of questions\">{{ question.questionId }}</mat-option>\n                    </mat-select>\n                <input type=\"text\" formControlName=\"securityQuestion3Answer\" />\n            </mat-card-content>\n            <br>\n            <!-- Security Question 3 End -->\n            <div>\n                <button mat-button matStepPrevious>Back</button>\n                <button type=\"submit\" mat-button>Set Questions</button>\n            </div>\n        </form>\n    </mat-step>\n     <!-- Sign In -->\n    <mat-step [stepControl]=\"thirdFormGroup\" label=\"Sign In\">\n        <h1 style=\"text-align: center;\">Sign In</h1>\n        <form [formGroup]=\"thirdFormGroup\">\n        <mat-form-field>\n            <mat-label>Username</mat-label>\n            <input matInput formControlName=\"username\" placeholder=\"Ex. spidermonkey25\" required>\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label>Password</mat-label>\n            <input matInput formControlName=\"password\" placeholder=\"Ex. Password\" required>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperPrevious>Create Account</button>\n            <button mat-button (click)=\"signIn()\" matStepperNext>Sign In</button>\n        </div>\n    </form>\n</mat-step>\n</mat-horizontal-stepper>","/**\n * \n * ================================\n * ; Title: purchasehistory.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: service for purchase history api requests\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchasehistoryService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find all purchases from invoice collection\n   * \n   */\n\n   findAllPurchasesByUserName(username): Observable<any>{\n     return this.http.get(`/api/invoices/user/${username}`)\n   }\n\n\n   /**\n    * \n    * Archive Transactions\n    * \n    */\n    archiveTransaction(invoideId): Observable<any>{\n      return this.http.patch(`/api/invoices/${invoideId}`,{\n        //no need to pass any body\n      })\n    }\n}\n","/**\n * \n * ================================\n * ; Title: createRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Role } from '../../interfaces/role.interface';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\n\n\n@Component({\n  selector: 'app-create-role-dialog',\n  templateUrl: './create-role-dialog.component.html',\n  styleUrls: ['./create-role-dialog.component.css']\n})\nexport class CreateRoleDialogComponent implements OnInit {\n\nconstructor(\n  private roleServce: RoleService, \n  private http: HttpClient, \n  private fb: FormBuilder, \n  private dialogRef: MatDialogRef<CreateRoleDialogComponent>, \n  @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateRoleForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createRoleForm = this.fb.group({\n      text: ['', Validators.required]\n    })\n  }\n\n  //create the role and insert it into the db\n createRole(){\n  \n  const text = this.createRoleForm.controls.text.value;\n  console.log(text);\n  this.roleServce.createRole(text).subscribe( res => {\n    text\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the role. Please ensure the role doesnt already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"createRoleForm\" (ngSubmit)=\"createRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createRoleForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * \n * ================================\n * ; Title: auth.guard.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file used for checking if a cookie was set/\n *                user has authorization to access a given page. \n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  //import our cookie service and router so we can use them with this guard\n  constructor(private router: Router, private cookieService: CookieService){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isAuthenticated = this.cookieService.get('sessionuser');\n    if(isAuthenticated){\n      return true;\n    } else {\n    //if no sessionUser is present, then redirect them to the signin page.\n    this.router.navigate(['/session/signin']);\n    return false;\n   }\n  }\n}\n","/**\n * \n * ================================\n * ; Title: delete-security-question-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Security Question Soft Delete Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-delete-securityquestion-dialog',\n  templateUrl: './delete-securityquestion-dialog.component.html',\n  styleUrls: ['./delete-securityquestion-dialog.component.css']\n})\nexport class DeleteSecurityquestionDialogComponent implements OnInit {\n\n  questionId: string;\n  //_id: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n\n  constructor(private dialogRef: MatDialogRef<DeleteSecurityquestionDialogComponent>,   \n    @Inject(MAT_DIALOG_DATA) data) { \n\n    //this._id = data._id;\n    this.questionId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n\n<div mat-dialog-content>\n  <p> {{ dialogBody }} </p>\n</div>\n\n<hr />\n\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\" cdkFocusInitial>Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: reset-password.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing password reset\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\n//import { UserInterface } from '../../../shared/user.interface';\nimport { ViewChild } from '@angular/core';\nimport { VerifySecurityQuestionsComponent } from '../verify-security-questions/verify-security-questions.component';\nimport { VerifyUsernameComponent } from '../verify-username/verify-username.component';  \n\n\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class ResetPasswordComponent implements OnInit {\n\n   isAuthenticated: string;\n   username: string;\n   form3: FormGroup;\n\n/*\n //begin add\n   @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n   @ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n   @ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n \n   get frmStepOne() {\n      return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n   }\n \n   get frmStepTwo() {\n      return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n   }\n \n   get frmStepThree() {\n      return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n   }\n //end add\n */\n\nconstructor(private http: HttpClient, private route: ActivatedRoute, private router: Router, private fb: FormBuilder, private cookieService: CookieService) {\n   this.isAuthenticated = this.route.snapshot.queryParamMap.get('isAuthenticated');\n   this.username = this.route.snapshot.queryParamMap.get('username');\n   console.log(this.username);\n\n//   if(!this.isAuthenticated) {\n//     this.router.navigate(['/session/signin'])\n//   }\n  }\n\n ngOnInit() {\n   this.form3 = this.fb.group({\n     password: [null, Validators.compose([Validators.required])]\n   });\n }\n\n resetPassword() {\n   console.log(this.username)\n   this.http.post('/api/session/users/' + this.username + '/reset-password', {\n     password: this.form3.controls['password'].value\n   }).subscribe(res => {\n     //user authenticated\n     this.cookieService.set('sessionuser', this.username, 1);  \n     this.router.navigate(['/']);\n   }, err => {\n     console.log(err);\n   })\n }\n\n}","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n  <div fxFlex>\n    <h1>Reset Password</h1>\n    <mat-card class=\"mat-elevation-z8\">\n      <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n          <!--LOGO-->\n      <!--    <div fxFlex>\n            <img src=\"./assets/logo.png\" class=\"logo\" />\n          </div>-->\n<!--\n          <mat-horizontal-stepper #stepper>\n            <mat-step [stepControl]=\"form3\">-->\n              <form\n                [formGroup]=\"form3\"\n                (ngSubmit)=\"resetPassword()\"\n                #resetPasswordForm\n              >\n              <!--<ng-template matStepLabel>Create New Password</ng-template>-->\n                <mat-card-content fxLayout=\"column\">\n                  <mat-form-field fxFlex>\n                    <input\n                      matInput\n                      type=\"password\"\n                      [formControl]=\"form3.controls['password']\"\n                      placeholder=\"New password\"\n                    />\n                  </mat-form-field>\n                  <br /><br />\n                  <div fxLayoutAlign=\"end\">\n                    <button mat-raised-button color=\"accent\">Submit</button>\n                  </div>\n                </mat-card-content>\n              </form>\n  <!--          </mat-step>\n          </mat-horizontal-stepper>-->\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: more-vert-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User more-vert-dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PutDialogComponent } from '../../../user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../../../user-admin-patch-dialog/patch-dialog.component'\n\n@Component({\n  selector: 'app-more-vert-dialog',\n  templateUrl: './more-vert-dialog.component.html',\n  styleUrls: ['./more-vert-dialog.component.css']\n})\nexport class MoreVertDialogComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, private cookieService: CookieService) { }\n\n  ngOnInit(): void {\n  }\n  update() {\n    this.dialog.open(PutDialogComponent)\n   }\n   delete() {\n    this.dialog.open(PatchDialogComponent)\n  } \n}\n","<mat-card>\n    <mat-card-title>\n        <p>User Actions</p>\n    </mat-card-title>\n    <mat-card-actions style=\"align-items: center\">\n        <button mat-button mat-dialog-close (click)=\"update()\"><mat-icon class=\"material-icons\">update</mat-icon></button>\n        <button mat-button mat-dialog-close (click)=\"delete()\"><mat-icon class=\"material-icons\">delete</mat-icon></button>\n    </mat-card-actions>","/**\n * \n * ================================\n * ; Title: viewTransactionDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for viewing a sepcific transaction\n * ================================\n * \n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-viewtransactiondialog',\n  templateUrl: './viewtransactiondialog.component.html',\n  styleUrls: ['./viewtransactiondialog.component.css']\n})\nexport class ViewtransactiondialogComponent implements OnInit {\n\n//variable declaration\ntransaction;\nlaborAmount;\nlineItem;\nlineItems;\nlineItemTotal;\norderDate;\npartsAmount;\ngrandTotal;\n\n\n  constructor(\n    private dialogRef: MatDialogRef<ViewtransactiondialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data\n    ) {\n\n      \n      this.transaction = data;\n      this.laborAmount = data.laborAmount;\n      this.lineItem = data.lineItem;\n      this.lineItemTotal = data.lineItemTotal;\n      this.orderDate = data.orderDate;\n      this.partsAmount = data.partsAmount;\n      this.grandTotal = data.total;\n      \n      for(let item of this.lineItem){\n        console.log(item.title);\n      }\n     }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n<h1 mat-dialog-title>Transaction Details</h1>\n<mat-dialog-content class=\"mat-typography\">\n  <mat-list>\n      <div FxLayout=\"column\">\n      <div fxFlex class=\"lineItemOuter\">\n      <mat-list-item>Line Items:\n          <mat-list class=\"innerLineItem\">\n              <div fxLayout=\"column\">\n                <div fxFlex *ngFor=\"let item of transaction.lineItem\">\n                    <mat-list-item>Title:{{item.title}}<br />Amount:{{item.price | currency}}</mat-list-item>\n                </div>\n            </div>\n          </mat-list>\n        </mat-list-item>\n    </div>\n    <div fxFlex>\n      <mat-list-item>Line Item Total: {{transaction.lineItemTotal | currency}}</mat-list-item>\n      <mat-list-item>Order Date: {{transaction.orderDate}}</mat-list-item>\n      <mat-list-item>Parts Amount: {{transaction.partsAmount | currency}}</mat-list-item>\n      <mat-list-item>Labor Amount: {{transaction.laborAmount | currency}}</mat-list-item>\n    </div>\n</div>\n  </mat-list>\n<h3 align=\"end\"><strong>Grand Total: {{transaction.total | currency}}</strong></h3>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button [mat-dialog-close]=\"false\" color=\"primary\">Close</button>\n</mat-dialog-actions>\n</mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: deleteCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for deleting item\n * ================================\n * \n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n\n@Component({\n  selector: 'app-delete-catalog-item',\n  templateUrl: './delete-catalog-item.component.html',\n  styleUrls: ['./delete-catalog-item.component.css']\n})\nexport class DeleteCatalogItemComponent implements OnInit {\n\n  catalogItemId: string;\n  dialogHeader: string;\n  dialogBody: string;\n  constructor(private dialogRef: MatDialogRef<DeleteCatalogItemComponent>,\n    private catalogService: CatalogService,\n    @Inject(MAT_DIALOG_DATA) data) {\n      console.log(data.catalogItem._id);\n      this.catalogItemId = data.catalogItem._id;\n      this.dialogHeader = data.dialogHeader;\n      this.dialogBody = data.dialogBody;\n     }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: viewAllTranrsactions.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for displaying all transactions (archived and not)\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { PurchasehistoryService } from 'src/app/pages/services/purchasehistory.service';\n\n\n@Component({\n  selector: 'app-view-all-transactions-dialog',\n  templateUrl: './view-all-transactions-dialog.component.html',\n  styleUrls: ['./view-all-transactions-dialog.component.css']\n})\nexport class ViewAllTransactionsDialogComponent implements OnInit {\n  allPurchaseHistoryDataSource: any;\n  displayedColumns: string[] = ['date', 'amount'];\n  actions: string[] = ['update', 'disable'];\n  checked: any = false;\n  username: string = this.cookieService.get('sessionuser');\n  dateFormatted;\n\n  constructor(\n    private cookieService: CookieService,\n    private purchaseHistoryService: PurchasehistoryService,\n  ) {\n    this.purchaseHistoryService.findAllPurchasesByUserName(this.username).subscribe(res => {\n      this.allPurchaseHistoryDataSource = res['data'];\n      console.log(this.allPurchaseHistoryDataSource);\n    }, err => {\n      console.log(err);\n    })\n   }\n  ngOnInit(): void {\n  }\n}\n","\n<mat-card>\n    <mat-card-content>\n<p>All Orders</p>\n<mat-dialog-content>\n<table mat-table [dataSource]=\"allPurchaseHistoryDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef>Date</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderDate}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"amount\">\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.total | currency}} </td>\n      </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button [mat-dialog-close]=\"false\" color=\"primary\">Close</button>\n  </mat-dialog-actions>\n</mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: updateCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating item\n * ================================\n * \n */\n\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-update-catalog-item',\n  templateUrl: './update-catalog-item.component.html',\n  styleUrls: ['./update-catalog-item.component.css']\n})\nexport class UpdateCatalogItemComponent implements OnInit {\n  title;\n  price;\n  catalogItemId;\n  isDisabled;\n  updateCatalogItemForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient,\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<UpdateCatalogItemComponent>,\n    @Inject(MAT_DIALOG_DATA) data){ \n\n      //set the values passed from the parent component\n      this.title = data.data.title;\n      this.price = data.data.price;\n      this.catalogItemId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n\n      this.updateCatalogItemForm = this.fb.group({\n      //pass the values into the form\n        title: [this.title, Validators.required],\n        price: [this.price, Validators.required],\n        catalogItemId: [this.catalogItemId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n    }\n\n  ngOnInit(): void {\n  }\n\n  updateCatalogItem(){\n    //get the current values from the form\n    const title = this.updateCatalogItemForm.controls.title.value;\n    const price = this.updateCatalogItemForm.controls.price.value;\n    const catalogItemId = this.updateCatalogItemForm.controls.catalogItemId.value;\n    const isDisabled = this.selected;\n\n    //call the service and pass updated form values into the service\n    this.catalogService.updateCatalogItem(catalogItemId, title, price, isDisabled).subscribe( res =>{\n      catalogItemId\n      title\n      price\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateCatalogItemForm\" (ngSubmit)=\"updateCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateCatalogItemForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: updateRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RoleService } from '../../services/role.service';\nimport { MatSelectModule } from '@angular/material/select'\n\n@Component({\n  selector: 'app-update-role-dialog',\n  templateUrl: './update-role-dialog.component.html',\n  styleUrls: ['./update-role-dialog.component.css']\n})\nexport class UpdateRoleDialogComponent implements OnInit {\n  text;\n  roleId;\n  isDisabled;\n  updateRoleForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n  constructor(private roleServce: RoleService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateRoleDialogComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.text = data.data.text;\n    this.roleId = data.data._id;\n    this.isDisabled = data.data.isDisabled;\n    \n    this.updateRoleForm = this.fb.group({\n      text: [this.text, Validators.required],\n      roleId: [this.roleId],\n      isDisabled: [this.isDisabled, Validators.required]\n    });\n  }\n  \n\n  ngOnInit(): void {\n  }\n\nupdateRole(){\n  const text = this.updateRoleForm.controls.text.value;\n  const roleId = this.updateRoleForm.controls.roleId.value;\n  const isDisabled = this.selected;\n\n  this.roleServce.updateRole(roleId, text, isDisabled).subscribe( res => {\n    text\n    roleId\n    isDisabled\n  }, err => {\n    console.log(err);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateRoleForm\" (ngSubmit)=\"updateRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateRoleForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: rolemanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for managing the role management table\n * ================================\n * \n */\n\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\nimport { Role } from '../interfaces/role.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HttpClient } from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { DeleteRecordDialogComponentComponent } from './delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from '../dialogs/create-role-dialog/create-role-dialog.component';\nimport { UpdateRoleDialogComponent } from '../dialogs/update-role-dialog/update-role-dialog.component';\n\n//todo create a taskDialogComponent\n\n\n@Component({\n  selector: 'app-rolemanagement',\n  templateUrl: './rolemanagement.component.html',\n  styleUrls: ['./rolemanagement.component.css']\n})\n\n\n\nexport class RolemanagementComponent implements OnInit {\n  roleDataSource: Role[];\n  displayedColumns: string[] = ['role', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private roleServce: RoleService) { \n    \n    /**\n      * Find All Roles\n      */\n     this.roleServce.findAllRoles().subscribe(res => {\n       this.roleDataSource = res['data'];\n       //console.log(this.roleDataSource);\n     }, err => {\n       console.log(err);\n     })\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * \n   * \n   * SECTION FOR ROLE API (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n \n   //createRoleDialog\n   createRole(){\n     const dialogRef = this.dialog.open(CreateRoleDialogComponent, {\n       data: {\n         \n       },\n       disableClose: true,\n       width: \"800px\"\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'create'){\n        //update the list\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   \n   //updateRoleDialog\n   updateRole(data){\n     console.log(data);\n     const dialogRef = this.dialog.open(UpdateRoleDialogComponent, {\n       data: {\n         data,\n         dialogHeader: 'Updating Role'\n       },\n       disableClose: true,\n       width:'800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if(result === 'update') {\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   //deleteRoleDialog\n  deleteRole(roleId){\n     const dialogRef = this.dialog.open(DeleteRecordDialogComponentComponent, {\n       data: {\n         roleId,\n         dialogHeader: 'Disabling Role',\n         dialogBody: `Are you sure you want to disable role ${roleId}?`\n       },\n       disableClose: true,\n       width: '800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'confirm') {\n         this.roleServce.deleteRole(roleId).subscribe(res => {\n           //console.log('Role successfully deleted')\n           //make another call to update the list\n           this.roleServce.findAllRoles().subscribe(res => {\n            this.roleDataSource = res['data'];\n            console.log(this.roleDataSource);\n          }, err => {\n            console.log(err);\n          })\n         })\n       }\n     })\n  }\n\n\n   \n}\n","\n<p>Roles <button mat-button class=\"crudButton\"(click)=\"createRole()\"><mat-icon class=\"matieral-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"roleDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.text}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateRole(element)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteRole(element._id)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: orderhistory.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for purchase history management.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Invoice } from '../../../shared/invoice.interface';\nimport { PurchasehistoryService } from '../../services/purchasehistory.service';\nimport { ViewAllTransactionsDialogComponent } from '../dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component';\nimport { ViewtransactiondialogComponent } from '../dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component';\n\n\n@Component({\n  selector: 'app-orderhistory',\n  templateUrl: './orderhistory.component.html',\n  styleUrls: ['./orderhistory.component.css']\n})\nexport class OrderhistoryComponent implements OnInit {\n  purchaseHistoryDataSource: any;\n  displayedColumns: string[] = ['date', 'amount', 'action'];\n  actions: string[] = ['update', 'disable'];\n  checked: any = false;\n  username: string = this.cookieService.get('sessionuser');\n  dateFormatted;\n  nonArchivedPurchaseHistoryDataSource: any;\n\n  constructor(\n    private cookieService: CookieService, \n    private purchaseHistoryService: PurchasehistoryService,\n    private dialog: MatDialog) {\n   \n  //populate all the transactions for a user, but we'll filter out the archived ones on the html side\n  this.purchaseHistoryService.findAllPurchasesByUserName(this.username).subscribe(res => {\n    \n    //pull back all transactions\n    this.purchaseHistoryDataSource = res['data'];\n\n    //filter out the archived transractions and push them into a new datasource array\n    this.nonArchivedPurchaseHistoryDataSource = [];\n    for(let item of this.purchaseHistoryDataSource){\n      if(item.isDisabled != true ){\n        this.nonArchivedPurchaseHistoryDataSource.push(item);\n      }\n    }\n    //console.log(this.purchaseHistoryDataSource);\n  }, err => {\n    console.log(err);\n  })\n   }\n\n\n  ngOnInit(): void {\n  }\n\n/*\nFunction that allows us to view transaction details for one transaction.\n*/\nviewTransactionDetails(transaction){\n  //console.log(transaction);\n  const dialogRef = this.dialog.open(ViewtransactiondialogComponent, {\n    data: transaction,\n    disableClose: true,\n    width: '800px'\n  })\n\n  dialogRef.afterClosed().subscribe(result => {\n   // console.log('closed');\n  })\n}\n\n\n/**\n * \n * Function that launches a dialog to show all the users transactions\n * \n */\nviewAllTransactions(){\n  const dialogRef = this.dialog.open(ViewAllTransactionsDialogComponent, {\n    disableClose: true,\n    width: '800px'\n  })\n\n  dialogRef.afterClosed().subscribe(result => {\n    //console.log('closed.')\n  })\n}\n\n\n/**\n * \n * Function that archives a transaction\n * \n */\narchiveTransraction(invoiceId){\n  console.log(invoiceId);\n  this.purchaseHistoryService.archiveTransaction(invoiceId).subscribe(res => {\n    //after patch refresh the data.\n    this.purchaseHistoryService.findAllPurchasesByUserName(this.username).subscribe( res => {\n      //pull back all transactions\n    this.purchaseHistoryDataSource = res['data'];\n\n    //filter out the archived transractions and push them into a new datasource array\n    this.nonArchivedPurchaseHistoryDataSource = [];\n    for(let item of this.purchaseHistoryDataSource){\n      if(item.isDisabled != true ){\n        this.nonArchivedPurchaseHistoryDataSource.push(item);\n      }\n    }\n    })\n    \n   \n  }, err => {\n    console.log(err);\n  })\n\n  \n}\n}\n","<p>Recent Orders<button mat-raised-button (click)=\"viewAllTransactions()\" class=\"crudButton\">View All</button></p>\n\n\n\n<table mat-table [dataSource]=\"nonArchivedPurchaseHistoryDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef>Date</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderDate}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"amount\">\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.total | currency}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"viewTransactionDetails(element)\">\n              <mat-icon>pageview</mat-icon>\n              <span>View Details</span>\n            </button>\n            <button mat-menu-item (click)=\"archiveTransraction(element._id)\">\n              <mat-icon>delete</mat-icon>\n              <span>Archive</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: update-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: Security Question Update Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-update-securityquestion-dialog',\n  templateUrl: './update-securityquestion-dialog.component.html',\n  styleUrls: ['./update-securityquestion-dialog.component.css']\n})\nexport class UpdateSecurityquestionDialogComponent implements OnInit {\n\n  questionId;\n  securityQuestionId;\n  isDisabled;\n  updateSecurityQuestionForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) {\n\n      this.questionId = data.data.questionId;\n      this.securityQuestionId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n      this.updateSecurityQuestionForm = this.fb.group({\n        questionId: [this.questionId, Validators.required],\n        securityQuestionId: [this.securityQuestionId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n     }\n\n  ngOnInit(): void {\n  }\n\n  updateSecurityQuestion() {\n    const questionId = this.updateSecurityQuestionForm.controls.questionId.value;\n    const securityQuestionId = this.updateSecurityQuestionForm.controls.securityQuestionId.value;\n    const isDisabled = this.selected;\n\n    this.SecurityQuestionService.updateSecurityQuestion(securityQuestionId, questionId, isDisabled).subscribe( res => {\n      securityQuestionId\n      questionId\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n\n\n\n\n\n\n\n \n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateSecurityQuestionForm\" (ngSubmit)=\"updateSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Enter security question\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateSecurityQuestionForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: role.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for interfacing with our apis for the role-management\n *  component\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Role } from '../interfaces/role.interface'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  //import http client\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find All Roles\n   * \n   */\n   findAllRoles(): Observable<any>{\n     return this.http.get(`/api/roles/`);\n   }\n\n   /**\n   * \n   * Find Role By ID\n   * \n   */\n  findRoleById(roleId: string): Observable<any>{\n    return this.http.get(`/api/roles/${roleId}`)\n  }\n\n\n   /**\n    * \n    * Create Role\n    * \n    */\ncreateRole(text: Role): Observable<any>{\n  return this.http.post(`/api/roles/`, {\n    text: text \n  })\n}\n\n\n  /**\n   * \n   * Update Role\n   * \n   */\nupdateRole(roleId: String, text: Role, isDisabled: Boolean): Observable<any>{\n  return this.http.put(`/api/roles/${roleId}/update`, {\n    text,\n    isDisabled\n  })\n}\n\n  /**\n   * \n   * Delete Role\n   * \n   */\n  deleteRole(roleId: String): Observable<any>{\n    return this.http.patch(`/api/roles/${roleId}`,{\n      roleId\n    })\n  }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(private router: Router, \n    private cookieService: CookieService, \n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar) { \n\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  signin(){\n    const username = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    //console.log(username);\n    //console.log(password);\n    \n\n    this.http.post('/api/session/signin', {\n      username,\n      password\n    }).subscribe(res => {\n      console.log(res['data'].username);\n      if (res['data'].username){\n        //user authenticated\n        this.cookieService.set('sessionuser', res['data'].username, 1);\n        this.router.navigate(['/']);\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n        this.openSnackBar(this.errorMessage);\n    });\n  }\n\n\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n  }\n}\n","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n            <!--LOGO-->\n            <div fxFlex>\n                <img src=\"./assets/logo.png\" class=\"logo\">\n            </div>\n\n            <!--SigninForm-->\n            <div fxFlex class=\"signInFormStuff\">\n                <form [formGroup]=\"form\" \n                      (ngSubmit)=\"signin(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                    <mat-form-field>\n                        <mat-label>Username</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['userName']\" \n                               placeholder=\"username\" >\n                      </mat-form-field><br />\n                      <mat-form-field>\n                        <mat-label>Password</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['password']\"\n                               placeholder=\"password\">\n                      </mat-form-field>\n                      <p>\n                        <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Sign-in</button>\n                      </p>\n                </form>\n            </div>\n\n            <!--Forgot-->\n            <div fxFlex>\n               <a routerLink=\"/session/forgot/\">Forgot Password?</a>\n            </div>\n            \n\n            <!--Divider-->\n            <div fxFlex>\n                <hr class=\"divider\">\n            </div>\n\n             <!--Signup Password-->\n            <div fxFlex class=\"signUpSection\">\n                    <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                routerLink=\"/session/createAccount\">Sign-Up</button>\n            </div>\n        </div>\n    </mat-card-content>\n    </mat-card>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: createOrder.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for creating new invoices/orders.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HttpClient } from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { CatalogService } from '../../administration/services/catalog.service';\nimport { Catalog } from '../../administration/interfaces/catalog.interface';\n\n@Component({\n  selector: 'app-createorder',\n  templateUrl: './createorder.component.html',\n  styleUrls: ['./createorder.component.css']\n})\nexport class CreateorderComponent implements OnInit {\n  catalogDataSource: Catalog[];\n  displayedColumns: string[] = ['title', 'price', 'select'];\n  actions: string[] = ['update', 'disable'];\n  checked: any = false;\n\n  constructor(private http: HttpClient, private catalogService: CatalogService) {\n\n    /**\n     * \n     * Find all catalog items\n     * \n     */\n    this.catalogService.findAllCatalogItems().subscribe(res => {\n      this.catalogDataSource = res['data'];\n    }, err => {\n      console.log(err);\n    })\n\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Create Order</p> \n\n<table mat-table [dataSource]=\"catalogDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef> Title </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.price | currency}} </td>\n      </ng-container>\n\n    <!-- Checkbox Column -->\n    <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef> Select </th>\n        <td mat-cell *matCellDef=\"let element\"> \n            <mat-checkbox></mat-checkbox>\n        </td>\n      </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: put-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User put dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-put-dialog',\n  templateUrl: './put-dialog.component.html',\n  styleUrls: ['./put-dialog.component.css']\n})\nexport class PutDialogComponent implements OnInit {\n  updatedUserForm: FormGroup\n  user: any\n  constructor(private cookieService: CookieService, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.updatedUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n   /* let id = this.cookieService.get('updateId')\n    this.http.get(`http://localhost:3000/api/user/${id}`).subscribe(user => {\n      this.user = user['data']\n    }) */\n  }\n  updateUser() {\n    let updatedUser = {\n      username: this.updatedUserForm.get('username').value,\n      password: this.updatedUserForm.get('password').value,\n      firstName: this.updatedUserForm.get('firstName').value,\n      lastName: this.updatedUserForm.get('lastName').value,\n      address: this.updatedUserForm.get('address').value,\n      email: this.updatedUserForm.get('email').value,\n      phoneNumber: this.updatedUserForm.get('phoneNumber').value\n    }\n    let id = this.cookieService.get('id')\n    this.http.put(`http://localhost:3000/api/users/${id}`, updatedUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"UPDATE Success\")\n    })\n    this.updatedUserForm.reset();\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"updateUser()\" [formGroup]=\"updatedUserForm\">\n        <mat-card-title>\n            <h1>Update User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-dialog-actions>\n                <button mat-button mat-dialog-close>Cancel</button>\n                <button type=\"submit\"mat-button mat-dialog-close>Update User</button>\n            </mat-dialog-actions>\n            <br>\n            <br>\n        </form>\n    </mat-card-content>\n    </mat-card>","/**\n * \n * ================================\n * ; Title: contact.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for contact page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n        <img src=\"./assets/contact2.png\" class=\"logo\">\n        <h1>Contact Us</h1><br />\n     <!--Image source for royaltyFreeImg.png\n        Black Line Background - Unlimited Download. cleanpng.com. (n.d.). Retrieved September 07, 2020, from https://www.cleanpng.com/png-computer-icons-certified-financial-planner-wrenche-2330581/\n      -->\n    </div>\n<div fxFlex>\n<mat-card>\n<mat-card-content>\n<div fxLayout=\"row\" fxLayoutGap=\"10px\">\n    <div fxFlex >\n       <mat-card>\n           <mat-card-content>\n               <h2>Options</h2>\n               <ul>\n                   <li>\n                    <span class=\"material-icons\">\n                        phone\n                        </span>\n                   </li>\n                   <li class=\"strong\">\n                       Phone:\n                   </li>\n                   <li>\n                    <a href=\"tel:402-555-3535\">402-555-4545</a>\n                   </li><br />\n\n                   <li>\n                    <span class=\"material-icons\">\n                        email\n                        </span>\n                   </li>\n                   <li class=\"strong\">\n                       Email:\n                   </li>\n                   <li>\n                    <a href = \"mailto: bob@bcrs.com\">bob@bcrs.com</a>\n                   </li>\n               </ul>\n           </mat-card-content>\n       </mat-card>\n    </div>\n    <div fxFlex>\n       <mat-card>\n           <mat-card-content>\n               <h2>Location</h2>\n               <ul>\n                   <li><span class=\"material-icons\">\n                    storefront\n                    </span></li>\n                   <li class=\"strong\">Address</li>\n                   <a href=\"https://goo.gl/maps/bN2ek2FugCCSoBAc8\">\n                   <li>123 test st</li>\n                   <li>Omaha, NE 68104</li>\n                   <li>Unidted States</li>\n                </a>\n               </ul>\n           </mat-card-content>\n       </mat-card>\n    </div>\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n</div><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","/**\n * \n * ================================\n * ; Title: security-question.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: component responsible for interfacing with our apis for the security-question\n *  component\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  /**\n   * \n   * Find All Security Questions\n   * \n   */\n    findAllSecurityQuestions(): Observable<any> {\n      return this.http.get(`/api/securityQuestions/`);\n    }\n   /**\n   * \n   * Find Security Question by ID\n   * \n   */\n\n  findSecurityQuestionById(_id: string): Observable<any> {\n    return this.http.get('/api/securityQuestions/' + _id);\n  }\n  \n\n   /**\n    * \n    * Create Security Question\n    * \n    */\n\n createSecurityQuestion(questionId: string): Observable<any> {\n  return this.http.post('/api/securityQuestions/', {\n    questionId\n  })\n}\n\n  /**\n   * \n   * Update Security Question\n   * \n   */\n\n   updateSecurityQuestion(_id: string, questionId: string, isDisabled: boolean): Observable<any> {\n   return this.http.put('/api/securityQuestions/'+ _id, {\n    questionId,\n    isDisabled\n    })\n  }\n\n\n\n\n  /**\n   * \n   * Delete Security Question\n   * \n   */\n\n   deleteSecurityQuestion(questionId: string): Observable<any> {\n     return this.http.patch('/api/securityQuestions/' + questionId, {\n       //isDisabled: true\n       questionId\n     });\n   }\n\n}\n\n\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PostDialogComponent } from '../app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component';\nimport { PutDialogComponent } from '../app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component';\nimport { PatchDialogComponent } from '../app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component';\nimport { RolemanagementComponent } from './pages/administration/rolemanagement/rolemanagement.component';\nimport { CatalogmanagementComponent } from './pages/administration/catalogmanagement/catalogmanagement.component';\nimport { PurchasegraphComponent } from './pages/administration/purchasegraph/purchasegraph.component';\nimport { SecurityquestionmanagementComponent } from './pages/administration/securityquestionmanagement/securityquestionmanagement.component';\nimport { UserManagementComponent } from '../app/pages/administration/usermanagement/usermanagement.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DeleteRecordDialogComponentComponent } from './pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from './pages/administration/dialogs/create-role-dialog/create-role-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from './pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { DeleteSecurityquestionDialogComponent } from './pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { UpdateRoleDialogComponent } from './pages/administration/dialogs/update-role-dialog/update-role-dialog.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MoreVertDialogComponent } from './pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CreateCatalogItemComponent } from './pages/administration/dialogs/create-catalog-item/create-catalog-item.component';\nimport { UpdateCatalogItemComponent } from './pages/administration/dialogs/update-catalog-item/update-catalog-item.component';\nimport { DeleteCatalogItemComponent } from './pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateSecurityquestionDialogComponent } from './pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ErrorInterceptor } from './shared/error.interceptor';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { CreateorderComponent } from './pages/home/createorder/createorder.component';\nimport { OrderhistoryComponent } from './pages/home/orderhistory/orderhistory.component';\nimport { DatePipe } from '@angular/common';\nimport { VerifyUsernameComponent } from './pages/reset-password/verify-username/verify-username.component';\nimport { VerifySecurityQuestionsComponent } from './pages/reset-password/verify-security-questions/verify-security-questions.component'; \nimport { ResetPasswordComponent } from './pages/reset-password/reset-password/reset-password.component';\nimport { ViewtransactiondialogComponent } from './pages/home/dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component';\nimport { ViewAllTransactionsDialogComponent } from './pages/home/dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component';\nimport { ResetPasswordProcessComponent } from './pages/reset-password/reset-password-process/reset-password-process.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SigninComponent,\n    AdministrationComponent,\n    ProfileComponent,\n    ContactComponent,\n    AboutComponent,\n    PostDialogComponent,\n    PutDialogComponent,\n    PatchDialogComponent,\n    RolemanagementComponent,\n    CatalogmanagementComponent,\n    PurchasegraphComponent,\n    SecurityquestionmanagementComponent,\n    UserManagementComponent,\n    DeleteRecordDialogComponentComponent,\n    CreateRoleDialogComponent,\n    CreateSecurityquestionDialogComponent,\n    DeleteSecurityquestionDialogComponent,\n    UpdateRoleDialogComponent,\n    MoreVertDialogComponent,\n    CreateCatalogItemComponent,\n    UpdateCatalogItemComponent,\n    DeleteCatalogItemComponent,\n    UpdateSecurityquestionDialogComponent,\n    CreateAccountComponent,\n    ErrorComponent,\n    NotfoundComponent,\n    CreateorderComponent,\n    OrderhistoryComponent,\n    VerifyUsernameComponent,\n    VerifySecurityQuestionsComponent,\n    ResetPasswordComponent,\n    ViewtransactiondialogComponent,\n    ViewAllTransactionsDialogComponent,\n    ResetPasswordProcessComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatTableModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatStepperModule,\n    ScrollingModule\n  ],\n  providers: [ {\n    provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true\n  },\n  CookieService,\n  DatePipe  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * \n * ================================\n * ; Title: notfound.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling 400 errors\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <div fxFlex>\n        <img src=\"./assets/404.png\" class=\"logo\" routerLink=\"/\">\n    </div><br /><br />\n    <div fxFlex>\n        <p>\n            The link you followed is probably broken or this page has been removed.\n        </p><br />\n        <p>\n            Click on the 404 to go home\n        </p>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: Error Interceptor.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file is resopnsible for intercepting 500 server errors that are \n * returned to the client.\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private router: Router){\n\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(catchError(err => {\n            if ([404].indexOf(err.status) !== -1) {\n                this.router.navigate(['/session/404']);\n            }\n\n            if ([500].indexOf(err.status) !== -1){\n                this.router.navigate(['/session/500']);\n            }\n\n            //otherwise, catch error and trhow\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","/**\n * \n * ================================\n * ; Title: purchasegraph.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for purchase graph\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-purchasegraph',\n  templateUrl: './purchasegraph.component.html',\n  styleUrls: ['./purchasegraph.component.css']\n})\nexport class PurchasegraphComponent implements OnInit {\n\n  constructor() { \n    /**\n       * Find All purchases\n       */\n  }\n\n  ngOnInit(): void {\n  }\n\n   /**\n   * \n   * SECTION FOR PURCHASES APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n  \n\n}\n","<p>Purchase Graph</p><br /><br /><br /><br />\n<h1>Coming Soon</h1>\n<br /><br /><br />","/**\n * \n * ================================\n * ; Title: post-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User post dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  createUserForm: any\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.createUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n  }\n  createUser() {\n    let newUser = {\n      username: this.createUserForm.get('username').value,\n      password: this.createUserForm.get('password').value,\n      firstName: this.createUserForm.get('firstName').value,\n      lastName: this.createUserForm.get('lastName').value,\n      address: this.createUserForm.get('address').value,\n      email: this.createUserForm.get('email').value,\n      phoneNumber: this.createUserForm.get('phoneNumber').value\n    }\n    this.http.post('http://localhost:3000/api/users', newUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"POST SUCCESS\")\n    }) \n    this.createUserForm.reset();\n  }\n  cancel() {\n\n  }\n}\n","<div fxLayout=\"column\">\n<mat-card class=\"mat-elevation-z8\">\n    <mat-card-title>Create User</mat-card-title>\n    <br />\n        <form (ngSubmit)=\"createUser()\" [formGroup]=\"createUserForm\">\n        <mat-card-content>\n            <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n               \n                <mat-form-field>\n                    <input type=\"text\" \n                           matInput\n                           placeholder=\"enter role name\"\n                           formControlName=\"text\">\n                </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. rjackson25\" formControlName=\"username\" />\n            </mat-form-field>\n     \n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n            \n                <input matInput placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n      \n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n        \n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n         \n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n        </div>\n        </mat-card-content>\n       \n            <mat-dialog-actions align=\"end\">\n                <button mat-raised-button (click)=\"cancel()\" color=\"primary\" mat-dialog-close>Cancel</button>\n                <button type=\"submit\" mat-raised-button color=\"primary\" mat-dialog-close>Create User</button>\n            </mat-dialog-actions>\n            <br />\n        </form>\n    </mat-card>\n\n</div>","/**\n * \n * ================================\n * ; Title: deleteRecordDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-record-dialog-component',\n  templateUrl: './delete-record-dialog-component.component.html',\n  styleUrls: ['./delete-record-dialog-component.component.css']\n})\nexport class DeleteRecordDialogComponentComponent implements OnInit {\n\n  recordId: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.recordId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: securityquestionmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for admin security question page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { SecurityQuestionService } from '../services/security-question.service';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\nimport { FormGroup } from '@angular/forms';\nimport { DeleteSecurityquestionDialogComponent } from '../dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from '../dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { UpdateSecurityquestionDialogComponent } from '../dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-securityquestionmanagement\",\n  templateUrl: \"./securityquestionmanagement.component.html\",\n  styleUrls: [\"./securityquestionmanagement.component.css\"],\n})\nexport class SecurityquestionmanagementComponent implements OnInit {\n  securityQuestions: SecurityQuestion[];\n  questionId: string;\n  displayedColumns: string[] = [\"question\", \"status\", \"action\"];\n\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private securityQuestionService: SecurityQuestionService\n  ) {\n    /**\n     * Find all Security Questions\n     */\n\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\n      (res) => {\n        this.securityQuestions = res[\"data\"];\n        console.log(res);\n        //console.log(this.securityQuestionService);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   *\n   * SECTION FOR SECURITY QUESTION API CALLS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n\n  //createSecurityQuestionDialog\n  createSecurityQuestion(){\n    const dialogRef = this.dialog.open(CreateSecurityquestionDialogComponent, {\n      data: {\n        \n      },\n      disableClose: true,\n      width: \"800px\"\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n\n       this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n         this.securityQuestions = res['data'];\n         console.log(this.securityQuestions);\n       }, err => {\n         console.log(err);\n       })\n      }\n    })\n  }\n\n\n\n  //updateSecurityQuestionDialog\n\n updateSecurityQuestion(data){\n  console.log(data);\n  const dialogRef = this.dialog.open(UpdateSecurityquestionDialogComponent, {\n    data: {\n      data,\n      dialogHeader: 'Update Security Question'\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if(result === 'update'){\n      \n      this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n        this.securityQuestions = res['data'];\n        console.log(this.securityQuestions);\n      }, err => {\n        console.log(err);\n      })\n    }\n  })\n}\n\n\n\n  //deleteSecurityQuestionDialog\n\n  deleteSecurityQuestion(questionId){\n  const dialogRef = this.dialog.open(DeleteSecurityquestionDialogComponent, {\n    data: {\n      questionId,\n      dialogHeader: 'Disabling Question',\n      dialogBody: `Are you sure you want to disable security question ${questionId}?`\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if (result == 'confirm') {\n      console.log(questionId)\n      this.securityQuestionService.deleteSecurityQuestion(questionId).subscribe(res => {\n        console.log('Security question successfully disabled')\n        this.securityQuestionService.findAllSecurityQuestions().subscribe(res=> {\n          this.securityQuestions = res['data'];\n          console.log(this.securityQuestions);\n        }, err => {\n          console.log(err);\n        })\n      })\n    }\n  })\n\n}\n  \n}\n","<!--JB moved this p tag and button in here for grouping purposes-->\n<p>Security Questions<button mat-button class=\"crudButton\" (click)=\"createSecurityQuestion()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n\n<table mat-table [dataSource]=\"securityQuestions\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"question\">\n    <th mat-header-cell *matHeaderCellDef> Question </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.questionId}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"action\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"updateSecurityQuestion(element)\">\n          <mat-icon>edit</mat-icon>\n          <span>Edit</span>\n        </button>\n        <button mat-menu-item (click)=\"deleteSecurityQuestion(element._id)\">\n          <mat-icon>delete</mat-icon>\n          <span>Disable</span>\n        </button>\n      </mat-menu>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","/**\n * \n * ================================\n * ; Title: patch-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User patch dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-patch-dialog',\n  templateUrl: './patch-dialog.component.html',\n  styleUrls: ['./patch-dialog.component.css']\n})\nexport class PatchDialogComponent implements OnInit {\n\n  constructor(private cookieService: CookieService, private http: HttpClient) { }\n\n  ngOnInit() { }\n  cancel() {\n\n  }\n  delete() {\n    let id = this.cookieService.get('id')\n    this.http.patch(`http://localhost:3000/api/users/${id}`, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n     else console.log(\"DELETE Success\")\n   }) \n  }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title class=\"text-center\">\n            <h1>Delete User</h1>\n        </mat-card-title>\n        <mat-card-actions>\n            <button mat-button (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"delete()\" mat-dialog-close>Delete User</button>\n        </mat-card-actions>\n    </mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: usermanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User mgmt component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PostDialogComponent } from '../dialogs/user-admin-post-dialog/post-dialog.component'\nimport { PutDialogComponent } from '../dialogs/user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../dialogs/user-admin-patch-dialog/patch-dialog.component'\nimport { RoleService } from '../services/role.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MoreVertDialogComponent } from '../dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n@Component({\n  selector: 'app-usermanagement',\n  templateUrl: './usermanagement.component.html',\n  styleUrls: ['./usermanagement.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n  displayedColumns: any = [ 'username', 'fistName', 'lastName', 'phoneNumber', 'address','isDisabled', 'actions']\n\n  constructor(public dialog: MatDialog, private http: HttpClient, private roleService: RoleService, private cookieService: CookieService) { }\n\n\n  ngOnInit() {\n    //Begin Brendans code\n    this.http.get('http://localhost:3000/api/users', httpOptions).subscribe(data => {\n      this.users = data['data'];\n      console.log(this.users)\n    })\n    //end Brendans code\n   }\n\n   /**Begin Brendans code */\n   post() {\n     const dialogRef = this.dialog.open(PostDialogComponent, {\n      disableClose: true,\n      width:'800px'});\n      //added by JB 10/28. After user is submitted, refresh the user list.\n      dialogRef.afterClosed().subscribe(result => {\n        this.http.get('http://localhost:3000/api/users', httpOptions).subscribe(data => {\n      this.users = data['data'];\n      console.log(this.users)\n    })\n      })\n   }\n  options(user) {\n    this.cookieService.set('id', user._id)\n    this.dialog.open(MoreVertDialogComponent)\n  }\n  }","<p>User Management\n        <button mat-button id=\"post\" (click)=\"post()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p>\n    <!--- Username Column -->\n    <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\" >\n        <ng-container matColumnDef=\"username\">\n            <th mat-header-cell *matHeaderCellDef>Username</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.username }}\n            </td>\n        </ng-container>\n        <!--- First Name Column -->\n        <ng-container matColumnDef=\"fistName\">\n            <th mat-header-cell *matHeaderCellDef>First Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.firstName }}\n            </td>\n        </ng-container>\n        <!--- Last Name Column -->\n        <ng-container matColumnDef=\"lastName\">\n            <th mat-header-cell *matHeaderCellDef>Last Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.lastName }}\n            </td>\n        </ng-container>\n        <!--- Phone Number Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th mat-header-cell *matHeaderCellDef>Phone Number</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.phoneNumber }}\n            </td>\n        </ng-container>\n        <!--- Address Column -->\n        <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef>Address</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.address }}\n            </td>\n        </ng-container>\n        <!--- isDisabled Column -->\n        <ng-container matColumnDef=\"isDisabled\">\n            <th mat-header-cell *matHeaderCellDef>isDisabled?</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.isDisabled }}\n            </td>\n        </ng-container>\n        <!--- Actions Column -->\n        <ng-contaoner matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n                <td mat-cell *matCellDef=\"let user\">\n                    <button mat-button (click)=\"options(user)\"><mat-icon>more_vert</mat-icon></button>\n                </td>\n        </ng-contaoner>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>","/**\n * \n * ================================\n * ; Title: verify-username.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing the verify username\n * ================================\n * \n */\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { VerifySecurityQuestionsComponent } from '../verify-security-questions/verify-security-questions.component';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\nimport { ViewChild } from '@angular/core';  //add\n\n\n@Component({\n  selector: 'app-verify-username',\n  templateUrl: './verify-username.component.html',\n  styleUrls: ['./verify-username.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class VerifyUsernameComponent implements OnInit {\n  form1: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n /*\n//begin add\n  @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n  @ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n  @ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n\n  get frmStepOne() {\n     return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n  }\n\n  get frmStepTwo() {\n     return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n  }\n\n  get frmStepThree() {\n     return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n  }\n//end add\n*/\n\n\n  constructor(private http: HttpClient, private fb: FormBuilder, private router: Router, private _snackBar: MatSnackBar) { \n  }\n  \n  ngOnInit() {\n\n    this.form1=this.fb.group({\n      username: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n\n\n  validateUsername() {\n    const username = this.form1.controls['username'].value;\n    console.log(username);\n\n    this.http.get('/api/session/verify/users/' + username).subscribe (res => {\n      //console.log(res['data'].username);\n      console.log(res);\n      //if we get data back, route to the next step\n      if (res['data']) {\n        this.router.navigate(['/session/verify-security-questions'], {queryParams: {username: username}, skipLocationChange: true});\n        //else if there is not res data or its null, we'll handle it here and in the err\n      } else if(!res['data']){\n        this.errorMessage = 'Invalid username or password. Try again.';\n      this.openSnackBar(this.errorMessage);\n      console.log('first error fired');\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n      this.openSnackBar(this.errorMessage);\n      console.log(err);\n    });\n  }\n\n  \n    openSnackBar(errorMessage: string) {\n      this._snackBar.open(errorMessage, 'Close', {\n        duration: 7000,\n        verticalPosition: 'top',\n        panelClass: 'error'\n      });\n    \n    }\n\n}\n","<!--Outer container-->\n\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <h1>Reset Password</h1>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n                <!--inner container-->\n                <div fxLayout=\"column\" class=\"singinInnerContainer\">\n                    <!--LOGO-->\n            <!--        <div fxFlex>\n                        <img src=\"./assets/logo.png\" class=\"logo\">\n                    </div>-->\n\n                    <!--Stepper\n                    <mat-horizontal-stepper #stepper>\n                        <mat-step [stepControl]=\"form1\">-->\n\n                    <!--form-->    \n                    <form [formGroup]=\"form1\" (ngSubmit)=\"validateUsername()\" #validateUsernameForm>\n                      <!--  <ng-template matStepLabel>Verify Username</ng-template>-->\n\n                        <mat-card-content fxLayout=\"column\">\n                            <mat-form-field fxFlex>\n                                <input matInput type=\"text\" [formControl]=\"form1.controls['username']\"\n                                    placeholder=\"username\">\n                            </mat-form-field>\n                            <br><br>\n                            <div fxLayoutAlign=\"end\">\n                                <button mat-raised-button color=\"primary\" button routerLink=\"/session/signin\">Cancel</button>\n                                <button mat-raised-button color=\"accent\">Next</button>\n                            </div>\n                        </mat-card-content>\n                    </form>\n\n              <!--  </mat-step>\n            </mat-horizontal-stepper>-->\n\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n\n\n","/**\n * \n * ================================\n * ; Title: about.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for about page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"outerContainer\">\n        <div fxFlex>\n            <img src=\"./assets/about2.png\" class=\"logo\">\n            <h1>About Us</h1><br />\n            <!--Original royalty free image provided from https://www.pinclipart.com/picdir/middle/2-24114_wheel-clip-art-download-gear-icon-royalty-free.png-->\n        </div>\n    <div fxFlex>\n<mat-card>\n<mat-card-content>\n    <div fxLayout=\"column\">\n        <div fxFlex>\n            <img src=\"./assets/bob.jpg\" style=\"float: left; width: 200px; padding-right: 10px;\">\n            <img src=\"./assets/index.jpg\"style=\"float: right; width: 200px;  padding-left: 10px;\">\n            <!--Royalty Free Images From https://www.dreamstime.com-->\n            <br />\n            <p><strong>Bob's Computer Repair Shop has been in existence since 2020.</strong> It was founded primary for the reason being that people needed their computers fixed. Bob has the technical training requisite to be able to deliver a quality computer fix. Services offered include the fixing of broken computers; fixing of broken routers and phones. Bob really has a great skill of fixing things and is able to help you today! If you ever are in need of a computer fix or find yourself in a computer bind Bob will be there to save you time and money! Bob has the requisite skills in order to fix your computer!</p>\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <p>How did Bob get into this business? It all started when Bob set out to build his own computer for online gaming. During this process, he sourced parts online and compiled the computer, piece by piece. It was during this project that Bob realized that he really enjoyed creating and repairing hardware. Since Bob enjoyed this activity so much, he began to repair all his friends devices. It got to the point where Bob was repairing devices almost 7 days a week. At this point, Bob came to the realization that he needed to make this business legitimate.  Fast forward a few years later, Bob now has his own company, Bob's Computer Repair Shop. </p>\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <p>Bob has been in the Technology Business for 10 Years and has seen the times evolve as technology has changed. Not many people have the skills Bob has in order to fix computers. Bob has a degree in Computer Fixing from a renowned university. <strong>Bob has fixed over 1000 computers in his time as a Computer Technician.</strong></p>\n        </div>\n    </div>\n</mat-card-content>\n</mat-card>\n</div>\n</div><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","/**\n * \n * ================================\n * ; Title: create-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Create Security Question Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-create-securityquestion-dialog',\n  templateUrl: './create-securityquestion-dialog.component.html',\n  styleUrls: ['./create-securityquestion-dialog.component.css']\n})\nexport class CreateSecurityquestionDialogComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private dialogRef: MatDialogRef<CreateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) { }\n\n    questionId: string;\n    createSecurityQuestionForm: FormGroup;\n    enteredQuestionId: any [];\n\n\n  ngOnInit(): void {\n    this.createSecurityQuestionForm = this.fb.group({\n      questionId: ['', Validators.required]\n    })\n  }\n\n createSecurityQuestion(){\n  \n  const questionId = this.createSecurityQuestionForm.controls.questionId.value;\n\n  console.log(questionId);\n  this.SecurityQuestionService.createSecurityQuestion(questionId).subscribe( res => {\n    questionId\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the security question. Please ensure the question doesn't already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"createSecurityQuestionForm\" (ngSubmit)=\"createSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Example: What was your first pet?\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createSecurityQuestionForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: catalog.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: service for catalog api requests\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Catalog } from '../interfaces/catalog.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n     * \n     * Find All Items\n     * \n     */\n    findAllCatalogItems(): Observable<any>{\n      return this.http.get('/api/catalog/');\n    }\n\n    /**\n     * \n     * Find Item By Id\n     * \n     */\n    findCatalogItemById(catalogId: string): Observable<any>{\n      return this.http.get(`/api/catalog/${catalogId}`)\n    }\n\n    /**\n     * \n     * Create Item\n     * \n     */\n    createCatalogItem(title: string, price: number): Observable<any>{\n      return this.http.post('/api/catalog/',{\n        title,\n        price\n      })\n    }\n\n    /**\n     * \n     * Update Item\n     * \n     */\n    updateCatalogItem(catalogItemId: string, title: string, price:number, isDisabled: boolean): Observable<any>{\n      return this.http.put(`/api/catalog/${catalogItemId}/update`,{\n        title,\n        price,\n        isDisabled\n      })\n    }\n\n    /**\n     * \n     * Delete Item\n     * \n     */\n    deleteCatalogItem(catalogId: string): Observable<any>{\n      return this.http.patch(`/api/catalog/${catalogId}`,{\n        //nothing needs to be passed since we have the disable written at the api level\n      })\n    }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();\n  \n  constructor(private cookieService: CookieService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  singOut(){\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/signin']);\n  }\n\n}\n","<div fxLayout=\"column\" class=\"pageContainer\">\n\n  <!-- navigation -->\n  <nav fxFlex> \n    <mat-toolbar fxFlex>\n      <img src=\"./assets/logo2.png\" class=\"brandLogo\" routerLink=\"/\">\n      <a class=\"navbar-link\" routerLink=\"/\">Home</a>\n      <a class=\"navbar-link\" routerLink=\"/about\">About</a>\n      <a class=\"navbar-link\" routerLink=\"/contact\">Contact Us</a>\n      <a class=\"navbar-link\" routerLink=\"/profile\">Profile</a>\n      <a class=\"navbar-link\" routerLink=\"/admin\">Administration</a>\n      <span></span>\n      <span class=\"example-spacer\"></span>\n      <a class=\"navbar-link\" routerLink=\"/\" (click)=\"singOut()\">Sign Out</a>\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <br /><br />\n      <router-outlet></router-outlet>\n      <br /><br /><br />\n    </main>\n  </div>\n  <!-- footer -->\n  <div fxFlex >\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content footerStyle\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: reset-password-process.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing mat stepper\n * ================================\n * \n */\n\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n//import { StepOneComponent } from './step-one.component';\nimport { VerifyUsernameComponent } from '../verify-username/verify-username.component';\n\n//import { StepTwoComponent } from './step-two.component';\nimport { VerifySecurityQuestionsComponent } from '../verify-security-questions/verify-security-questions.component';\n\n//import { StepThreeComponent } from './step-three.component';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\n\n\n@Component({\n  selector: 'app-reset-password-process',\n  templateUrl: './reset-password-process.component.html',\n  styleUrls: ['./reset-password-process.component.css']\n})\nexport class ResetPasswordProcessComponent {\n\n  @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n  @ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n  @ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n\n  get form1() {\n     return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n  }\n\n  get form2() {\n     return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n  }\n\n  get form3() {\n     return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n  }\n\n  constructor(private fb: FormBuilder) { }\n\n\n}\n\n\n\n\n\n","<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <h1>Reset Password</h1>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n                <!--inner container-->\n                <div fxLayout=\"column\" class=\"singinInnerContainer\">\n                    <!--LOGO-->\n                    <div fxFlex>\n                        <img src=\"./assets/logo.png\" class=\"logo\">\n                    </div>\n\n<mat-horizontal-stepper linear #stepper>\n\t<mat-step [stepControl]=\"form1\">\n\t\t<ng-template matStepLabel>Verify Username</ng-template>\n\t\t<app-verify-username></app-verify-username>\n\t</mat-step>\n\t<mat-step [stepControl]=\"form2\">\n\t\t<ng-template matStepLabel>Verify Security Questions</ng-template>\n\t\t<app-verify-security-questions></app-verify-security-questions>\n\t</mat-step>\n\t<mat-step [stepControl]=\"form3\">\n\t\t<ng-template matStepLabel>Create New Password</ng-template>\n\t\t<app-reset-password></app-reset-password>\n\t</mat-step>\n</mat-horizontal-stepper>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { VerifyUsernameComponent } from './pages/reset-password/verify-username/verify-username.component';\nimport { VerifySecurityQuestionsComponent } from './pages/reset-password/verify-security-questions/verify-security-questions.component';\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password/reset-password.component';\nimport { ResetPasswordProcessComponent } from './pages/reset-password/reset-password-process/reset-password-process.component';\n\nconst routes: Routes = [\n  {//path for logged in users\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'admin',\n        component: AdministrationComponent\n      },\n      {\n        path: 'not-found',\n        component: NotfoundComponent\n      }\n    ],\n        canActivate: [AuthGuard]\n  },\n  {//path for not logged in users\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent\n      },\n      {\n        path:'createAccount',\n        component: CreateAccountComponent\n      },\n      {\n        path: 'resetProcess',\n        component: ResetPasswordProcessComponent\n      },\n      {\n        path: 'forgot',\n        component: VerifyUsernameComponent\n      }, \n      {\n        path: 'verify-security-questions',\n        component: VerifySecurityQuestionsComponent\n      },\n      {\n        path: 'reset-password',\n        component: ResetPasswordComponent\n      },\n      {\n        path: '404',\n        component: NotfoundComponent\n      },\n      {\n        path: '500',\n        component: ErrorComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'session/404'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * \n * ================================\n * ; Title: error.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling 500 server errors\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <div fxFlex>\n        <img src=\"./assets/500.png\" class=\"logo\" routerLink=\"/\">\n    </div><br /><br />\n    <div fxFlex>\n        <p>\n            Screeeeech!  The server has crashed.  \n        </p><br />\n        <p>\n            Click on the 500 to go home\n        </p>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: verify-security-questions.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing security question verification\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { ViewChild } from '@angular/core';\nimport { VerifyUsernameComponent } from '../verify-username/verify-username.component';  //add\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component'; //add\n\n//import { SecurityQuestion } from '../../administration/interfaces/security-question.interface';\n//import { SelectedSecurityQuestionSchema } from '../../../../../server/schemas/SelectedSecurityQuestionSchema';\n\nimport { Securityquestionpwdreset } from '../../../shared/securityquestionpwdreset.interface';\n\n@Component({\n  selector: 'app-verify-security-questions',\n  templateUrl: './verify-security-questions.component.html',\n  styleUrls: ['./verify-security-questions.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class VerifySecurityQuestionsComponent implements OnInit {\n\n  securityQuestions: Securityquestionpwdreset[];\n  question1: string;\n  question2: string;\n  question3: string;\n  username: string;\n  form2: FormGroup;\nquestions;\n\n  //begin add\n // @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n  //@ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n  //@ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n\n  //get frmStepOne() {\n  //   return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n // }\n\n  //get frmStepTwo() {\n  //   return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n  //}\n\n  //get frmStepThree() {\n //    return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n // }\n//end add\n\n  constructor(private route: ActivatedRoute, private router: Router, private http: HttpClient, private fb: FormBuilder) {\n    this.username=this.route.snapshot.queryParamMap.get('username');\n    console.log(this.username);\n\n    this.http.get('api/users/' + this.username + '/security-questions').subscribe(res => {\n      this.questions = res['data'];\n      //console.log(this.securityQuestions);\n      console.log(res);\n    }, err => {\n      console.log(err);\n    }, () => {\n      //console.log('i fired')\n      //console.log(this.questions.securityQuestions[0].questionText);\n      this.question1 = this.questions.securityQuestions[0].questionText;  \n      this.question2 = this.questions.securityQuestions[1].questionText;\n      this.question3 = this.questions.securityQuestions[2].questionText;\n\n/*\n      console.log(this.question1);\n      console.log(this.question2);\n      console.log(this.question3);*/\n    });\n   }\n\n  ngOnInit(): void {\n    this.form2 = this.fb.group({\n      answerToSecurityQuestion1: [null, Validators.compose([Validators.required])],\n      answerToSecurityQuestion2: [null, Validators.compose([Validators.required])],\n      answerToSecurityQuestion3: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n   verifySecurityQuestions() {\n    const answerToSecurityQuestion1 = this.form2.controls['answerToSecurityQuestion1'].value;\n    const answerToSecurityQuestion2 = this.form2.controls['answerToSecurityQuestion2'].value;\n    const answerToSecurityQuestion3 = this.form2.controls['answerToSecurityQuestion3'].value;\n\n    console.log(answerToSecurityQuestion1 + answerToSecurityQuestion2 + answerToSecurityQuestion3);\n\n    this.http.post('/api/session/verify/users/' + this.username + '/security-questions', {\n      questionText1: this.question1,\n      questionText2: this.question2,\n      questionText3: this.question3,\n      answerText1: answerToSecurityQuestion1,\n      answerText2: answerToSecurityQuestion2,\n      answerText3: answerToSecurityQuestion3\n    }).subscribe( res => {\n      console.log(res);\n      if(res['message'] === 'Success!') {\n        this.router.navigate(['/session/reset-password'], {queryParams: {isAuthenticated: 'true', username: this.username}, skipLocationChange: true})\n      } else {\n        console.log('Unable to verify security question responses.')\n      }\n    })\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n  <div fxFlex>\n      <h1>Reset Password</h1>\n      <mat-card class=\"mat-elevation-z8\">\n          <mat-card-content>\n              <!--inner container-->\n              <div fxLayout=\"column\" class=\"singinInnerContainer\">\n                  <!--LOGO-->\n            <!--      <div fxFlex>\n                      <img src=\"./assets/logo.png\" class=\"logo\">\n                  </div>-->\n  <!--\n                  <mat-horizontal-stepper #stepper>\n                    <mat-step [stepControl]=\"form2\">-->\n  \n        <form *ngIf=\"questions\" [formGroup]=\"form2\" (ngSubmit)=\"verifySecurityQuestions()\" #usernameForm>\n\n       <!--   <ng-template matStepLabel>Verify Security Questions</ng-template>-->\n\n          <mat-card-content fxFlex fxLayout=\"column\">\n            <mat-list>\n              <mat-list-item>\n                {{ question1 }} &nbsp; &nbsp; &nbsp; &nbsp;\n                <mat-form-field fxFlex>\n                  <input matInput [formControl]=\"form2.controls['answerToSecurityQuestion1']\" placeholder=\"Answer 1\" />\n                </mat-form-field>\n              </mat-list-item>\n  \n              <mat-list-item>\n                {{ question2 }} &nbsp; &nbsp; &nbsp; &nbsp;\n                <mat-form-field fxFlex>\n                  <input matInput [formControl]=\"form2.controls['answerToSecurityQuestion2']\" placeholder=\"Answer 2\" />\n                </mat-form-field>\n              </mat-list-item>\n  \n              <mat-list-item>\n                {{ question3 }} &nbsp; &nbsp; &nbsp; &nbsp;\n                <mat-form-field fxFlex>\n                  <input matInput [formControl]=\"form2.controls['answerToSecurityQuestion3']\" placeholder=\"Answer 3\" />\n                </mat-form-field>\n              </mat-list-item>\n            </mat-list>\n            <br/><br/>\n  \n            <div fxFlex fxLayoutAlign=\"end\">\n              <a fxFlex fxLayoutAlign=\"start\" routerLink=\"/session/forgot\">\n                <mat-icon>west</mat-icon>\n                </a>\n              <button mat-raised-button color=\"primary\" button routerLink=\"/session/signin\">Cancel</button>\n              <button mat-raised-button color=\"accent\">Next</button>\n            </div>\n            \n          </mat-card-content>\n        </form>\n<!--\n      </mat-step>\n    </mat-horizontal-stepper>-->\n\n    </div>\n\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}