{"version":3,"sources":["webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.ts","webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.html","webpack:///src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.ts","webpack:///src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/administration/administration.component.ts","webpack:///src/app/pages/administration/administration.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/app/pages/create-account/create-account.component.ts","webpack:///src/app/pages/create-account/create-account.component.html","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.html","webpack:///src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.html","webpack:///src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.ts","webpack:///src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.html","webpack:///src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.ts","webpack:///src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.html","webpack:///src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.html","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.ts","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.html","webpack:///src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.html","webpack:///src/app/pages/administration/services/role.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/pages/pricing/pricing.component.ts","webpack:///src/app/pages/pricing/pricing.component.html","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/pages/administration/services/security-question.service.ts","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.html","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.ts","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.html","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.ts","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.html","webpack:///src/app/pages/administration/usermanagement/usermanagement.component.ts","webpack:///src/app/pages/administration/usermanagement/usermanagement.component.html","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.html","webpack:///src/app/pages/administration/services/catalog.service.ts","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CatalogmanagementComponent","http","dialog","catalogServce","displayedColumns","actions","findAllCatalogItems","subscribe","res","catalogDataSource","err","console","log","dialogRef","open","data","disableClose","width","afterClosed","result","dialogHeader","catalogItem","dialogBody","title","_id","deleteCatalogItem","createCatalogItem","selector","templateUrl","styleUrls","CreateCatalogItemComponent","catalogService","fb","createCatalogItemForm","group","required","price","controls","value","HomeComponent","AdministrationComponent","AuthLayoutComponent","CreateAccountComponent","cookieService","router","firstFormGroup","username","password","firstName","lastName","phoneNumber","address","secondFormGroup","securityQuestion1","securityQuestion1Answer","securityQuestion2","securityQuestion2Answer","securityQuestion3","securityQuestion3Answer","thirdFormGroup","get","questions","newUser","post","reset","newSecurityQuestions","secuirtyQuestion1Answer","secuirtyQuestion3Answer","signInUser","set","navigate","provide","useValue","displayDefaultIndicatorType","registerAccount","setSecurityQuestions","signIn","providers","CreateRoleDialogComponent","roleServce","createRoleForm","text","createRole","alert","environment","production","AuthGuard","route","state","isAuthenticated","providedIn","DeleteSecurityquestionDialogComponent","questionId","MoreVertDialogComponent","update","DeleteCatalogItemComponent","catalogItemId","UpdateCatalogItemComponent","options","isDisabled","updateCatalogItemForm","selected","updateCatalogItem","UpdateRoleDialogComponent","roleId","updateRoleForm","updateRole","RolemanagementComponent","findAllRoles","roleDataSource","deleteRole","UpdateSecurityquestionDialogComponent","SecurityQuestionService","securityQuestionId","updateSecurityQuestionForm","updateSecurityQuestion","RoleService","put","patch","AppComponent","template","styles","PricingComponent","httpOptions","headers","SigninComponent","_snackBar","verticalPosition","form","userName","compose","errorMessage","openSnackBar","duration","panelClass","signin","PutDialogComponent","updatedUserForm","email","updatedUser","id","updateUser","ContactComponent","ProfileComponent","AppModule","declarations","imports","bootstrap","PurchasegraphComponent","PostDialogComponent","createUserForm","createUser","cancel","DeleteRecordDialogComponentComponent","recordId","SecurityquestionmanagementComponent","securityQuestionService","findAllSecurityQuestions","securityQuestions","deleteSecurityQuestion","createSecurityQuestion","PatchDialogComponent","UserManagementComponent","roleService","users","user","AboutComponent","CreateSecurityquestionDialogComponent","createSecurityQuestionForm","CatalogService","catalogId","BaseLayoutComponent","year","Date","now","deleteAll","singOut","NotFoundComponent","routes","path","component","children","canActivate","redirectTo","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","exports","bootstrapModule","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["/**\n * \n * ================================\n * ; Title: catalogmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component responsible for catalog page\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateCatalogItemComponent } from '../dialogs/create-catalog-item/create-catalog-item.component';\nimport { DeleteCatalogItemComponent } from '../dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateCatalogItemComponent } from '../dialogs/update-catalog-item/update-catalog-item.component';\nimport { Catalog } from '../interfaces/catalog.interface';\nimport { CatalogService } from '../services/catalog.service';\n\n@Component({\n  selector: 'app-catalogmanagement',\n  templateUrl: './catalogmanagement.component.html',\n  styleUrls: ['./catalogmanagement.component.css']\n})\nexport class CatalogmanagementComponent implements OnInit {\n\n  catalogDataSource: Catalog[];\n  displayedColumns: string[] = ['title', 'price', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private catalogServce: CatalogService) { \n    /**\n       * \n       * Find all Catalog Items\n       */\n      this.catalogServce.findAllCatalogItems().subscribe(res => {\n        this.catalogDataSource = res['data'];\n        //console.log(this.catalogDataSource);\n      }, err => {\n        console.log(err);\n      })\n  }\n\n  ngOnInit(): void {\n  }\n\n    /**\n   * \n   * SECTION FOR CATALOG APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   * \n   */\n\n  //createItem\n  createCatalogItem(){\n    const dialogRef = this.dialog.open(CreateCatalogItemComponent, {\n      data: {\n\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n        //refresh the list\n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //updateItem\n  updateCatalogItem(data){\n    console.log(data);\n    const dialogRef = this.dialog.open(UpdateCatalogItemComponent, {\n      data: {\n        data,\n        dialogHeader: 'Update Catalog Item'\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'update'){\n        //refresh the list\n        \n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //deleteItem\n  deleteCatalogItem(catalogItem){\n    const dialogRef = this.dialog.open(DeleteCatalogItemComponent, {\n      data: {\n        catalogItem,\n        dialogHeader: 'Disabling Item',\n        dialogBody: `Are you sure you want to disable ${catalogItem.title}`\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'confirm'){\n        console.log(catalogItem._id);\n       this.catalogServce.deleteCatalogItem(catalogItem._id).subscribe( res => {\n         //make another call to update the list\n         this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }, err => {\n         console.log(err)\n       })\n        \n      }\n    })\n  }\n}\n","<p>Items<button mat-button class=\"crudButton\" (click)=\"createCatalogItem()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"catalogDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef> Title </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.price | currency}} </td>\n      </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateCatalogItem(element)\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteCatalogItem(element)\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: createCatalogItemdialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-create-catalog-item',\n  templateUrl: './create-catalog-item.component.html',\n  styleUrls: ['./create-catalog-item.component.css']\n})\nexport class CreateCatalogItemComponent implements OnInit {\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient, \n    private fb: FormBuilder, \n    private dialogRef: MatDialogRef<CreateCatalogItemComponent>, \n    @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateCatalogItemForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createCatalogItemForm = this.fb.group({\n      title: ['', Validators.required],\n      price: ['', Validators.required]\n    })\n  }\n\n  createCatalogItem(){\n    const title = this.createCatalogItemForm.controls.title.value;\n    const price = this.createCatalogItemForm.controls.price.value;\n\n    this.catalogService.createCatalogItem(title, price).subscribe( res => {\n      title\n      price\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Catalog Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"createCatalogItemForm\" (ngSubmit)=\"createCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createCatalogItemForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"main-welcome\">\n  <h1 class=\"title\">\n    Welcome to WEB 450's - Bob's Computer Repair Shop <br />\n    <span class=\"subtitle\">\n      Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait unitl the last minute to begin working on each item.\n    </span>\n  </h1>\n</div>\n","/**\n * \n * ================================\n * ; Title: administration.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for administration page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.css']\n})\n\n\nexport class AdministrationComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n\n\n  constructor() { }\n  ngOnInit() { }   \n  \n}\n\n","<h1>Administration Dashboard</h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-content>\n            <div fxLayout=\"column\">\n\n\n\n<!--USER management column-->\n    <div fxFlex class=\"childColumnContainers\">\n        <div fxFlex><mat-card>\n            <mat-card-content>\n     <app-usermanagement></app-usermanagement>\n    </mat-card-content>\n    </mat-card>\n        </div>\n    </div>\n    \n\n\n\n<!--Security questions and Role Management Column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Security questions go here-->\n<mat-card>\n    <mat-card-content>\n               <app-securityquestionmanagement></app-securityquestionmanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Role Management Goes here-->\n<mat-card>\n    <mat-card-content>   \n               <app-rolemanagement></app-rolemanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n<!--Catalog and purchases graph column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Catalog Goes here-->\n               <mat-card>\n                   <mat-card-content>\n                        <app-catalogmanagement></app-catalogmanagement>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Purchases Graph goes here-->\n            <mat-card>\n                <mat-card-content>\n                    <app-purchasegraph></app-purchasegraph>\n                </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n<br />\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ; Reference: Google Material Docs: https://material.angular.io/components/stepper/overview\n * ================================\n * \n */\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { CookieService } from 'ngx-cookie-service'\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class CreateAccountComponent implements OnInit {\n  firstFormGroup: FormGroup\n  secondFormGroup: FormGroup\n  thirdFormGroup: FormGroup\n  newUser: any\n  questions: any\n  constructor(private cookieService: CookieService, private router: Router, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.firstFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      firstName: new FormControl(null, Validators.required),\n      lastName: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, Validators.required),\n      address: new FormControl(null, Validators.required)\n    })\n    this.secondFormGroup = this.fb.group({\n      securityQuestion1: new FormControl(null, Validators.required),\n      securityQuestion1Answer: new FormControl(null, Validators.required),\n      securityQuestion2: new FormControl(null, Validators.required),\n      securityQuestion2Answer: new FormControl(null, Validators.required),\n      securityQuestion3: new FormControl(null, Validators.required),\n      securityQuestion3Answer: new FormControl(null, Validators.required),\n    })\n    this.thirdFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    })\n    this.http.get('/api/securityQuestions').subscribe(res => {\n      this.questions = res['data']\n    })\n  }\n  registerAccount() {\n    this.newUser = {\n      username: this.firstFormGroup.get('username').value,\n      password: this.firstFormGroup.get('password').value,\n      firstName: this.firstFormGroup.get('firstName').value,\n      lastName: this.firstFormGroup.get('lastName').value,\n      phoneNumber: this.firstFormGroup.get('phoneNumber').value,\n      address: this.firstFormGroup.get('address').value\n    }\n    this.http.post('/api/users', this.newUser).subscribe(err => {\n      if (err) {\n        console.log(err)\n      } else {\n        console.log(this.newUser)\n      }\n    })\n    this.firstFormGroup.reset()\n  }\n  setSecurityQuestions() {\n   let newSecurityQuestions = {\n     securityQuestion1: this.secondFormGroup.get('securityQuestion1').value,\n     secuirtyQuestion1Answer: this.secondFormGroup.get('securityQuestion1Answer').value,\n     securityQuestion2: this.secondFormGroup.get('securityQuestion2').value,\n     securityQuestion2Answer: this.secondFormGroup.get('securiyQuestion2Answer').value,\n     securityQuestion3: this.secondFormGroup.get('securityQuestion2').value,\n     secuirtyQuestion3Answer: this.secondFormGroup.get('secuirtyQuestionAnswer3').value\n   }\n   console.log(newSecurityQuestions)\n  }\n  signIn() {\n   let signInUser = {\n     username: this.thirdFormGroup.get('username').value,\n     password: this.thirdFormGroup.get('password').value\n   }\n   this.http.post('/api/session/signin', signInUser).subscribe(res => {\n    if (res['data'].username) {\n      this.cookieService.set('sessionuser', res['data'].username, 1)\n      this.router.navigate(['/'])\n    }\n   })\n   this.secondFormGroup.reset()\n  }\n}","<mat-card>\n    <mat-card-title>\n        <p color=\"primary\" style=\"text-align: center\">Register For An Account</p>\n    </mat-card-title>\n</mat-card>\n<mat-horizontal-stepper #stepper>\n    <mat-step [stepControl]=\"firstFormGroup\">\n       <h1 style=\"text-align: center;\">Sign Up</h1>\n        <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Register Account</ng-template>\n            <mat-form-field>\n                <mat-label>Username</mat-label>\n                <input matInput placeholder=\"Ex. thespidermonkey25\" formControlName=\"username\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Password</mat-label>\n                <input matInput placeholder=\"Ex. root\" formControlName=\"password\" required> \n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"Ex. Peter\" formControlName=\"firstName\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Last Name</mat-label>\n                <input matInput placeholder=\"Ex. Parker\" formControlName=\"lastName\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Phone Number</mat-label>\n                <input matInput placeholder=\"Ex. 867 5309\" formControlName=\"phoneNumber\" required>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Address</mat-label>\n                <input matInput placehodler=\"Ex. 12 Brooklyn Street\" formControlName=\"address\" required>\n            </mat-form-field>\n            <div>\n                <a routerLink=\"/session/signin\">Sign In</a>\n                <button mat-button (click)=\"registerAccount()\" matStepperNext>Create Account</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Security Questions\">\n        <form [formGroup]=\"secondFormGroup\">\n        <h1 style=\"text-align: center;\">Security Questions</h1>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Please Choose A Question:</mat-label>\n            <mat-select [(value)]=\"securityQuestion1\" *ngFor=\"let question of questions\">\n                <mat-option>{{ question.questionId }}</mat-option>\n            </mat-select>\n            <input matInput placeholder=\"Answer\" formControlName=\"securityQuestion1Answer\" required>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Please Choose A Question:</mat-label>\n            <mat-select [(value)]=\"securityQuestion2\" *ngFor=\"let question of questions\">\n                <mat-option>{{ question.questionId }}</mat-option>\n            </mat-select>\n            <input matInput placeholder=\"Answer\" formControlName=\"securityQuestion2Answer\" required>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Please Choose A Question:</mat-label>\n            <mat-select [(value)]=\"securityQuestion3\" *ngFor=\"let question of questions\">\n                <mat-option>{{ question.questionId }}</mat-option>\n            </mat-select>\n            <input matInput placeholder=\"Answer\" formControlName=\"securityQuestion3Answer\" required>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button (click)=\"setSecurityQuestions()\" matStepperNext>Set</button>\n        </div>\n    </form>\n    </mat-step>\n    <mat-step [stepControl]=\"thirdFormGroup\" label=\"Sign In\">\n        <h1 style=\"text-align: center;\">Sign In</h1>\n        <form [formGroup]=\"thirdFormGroup\">\n        <mat-form-field>\n            <mat-label>Username</mat-label>\n            <input matInput formControlName=\"username\" placeholder=\"Ex. spidermonkey25\" required>\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label>Password</mat-label>\n            <input matInput formControlName=\"password\" placeholder=\"Ex. Password\" required>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperPrevious>Create Account</button>\n            <button mat-button (click)=\"signIn()\" matStepperNext>Sign In</button>\n        </div>\n    </form>\n</mat-step>\n</mat-horizontal-stepper>","/**\n * \n * ================================\n * ; Title: createRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Role } from '../../interfaces/role.interface';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\n\n\n@Component({\n  selector: 'app-create-role-dialog',\n  templateUrl: './create-role-dialog.component.html',\n  styleUrls: ['./create-role-dialog.component.css']\n})\nexport class CreateRoleDialogComponent implements OnInit {\n\nconstructor(\n  private roleServce: RoleService, \n  private http: HttpClient, \n  private fb: FormBuilder, \n  private dialogRef: MatDialogRef<CreateRoleDialogComponent>, \n  @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateRoleForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createRoleForm = this.fb.group({\n      text: ['', Validators.required]\n    })\n  }\n\n  //create the role and insert it into the db\n createRole(){\n  \n  const text = this.createRoleForm.controls.text.value;\n  console.log(text);\n  this.roleServce.createRole(text).subscribe( res => {\n    text\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the role. Please ensure the role doesnt already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"createRoleForm\" (ngSubmit)=\"createRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createRoleForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * \n * ================================\n * ; Title: auth.guard.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file used for checking if a cookie was set/\n *                user has authorization to access a given page. \n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  //import our cookie service and router so we can use them with this guard\n  constructor(private router: Router, private cookieService: CookieService){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isAuthenticated = this.cookieService.get('sessionuser');\n    if(isAuthenticated){\n      return true;\n    } else {\n    //if no sessionUser is present, then redirect them to the signin page.\n    this.router.navigate(['/session/signin']);\n    return false;\n   }\n  }\n}\n","/**\n * \n * ================================\n * ; Title: delete-security-question-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Security Question Soft Delete Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-delete-securityquestion-dialog',\n  templateUrl: './delete-securityquestion-dialog.component.html',\n  styleUrls: ['./delete-securityquestion-dialog.component.css']\n})\nexport class DeleteSecurityquestionDialogComponent implements OnInit {\n\n  questionId: string;\n  //_id: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n\n  constructor(private dialogRef: MatDialogRef<DeleteSecurityquestionDialogComponent>,   \n    @Inject(MAT_DIALOG_DATA) data) { \n\n    //this._id = data._id;\n    this.questionId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n\n<div mat-dialog-content>\n  <p> {{ dialogBody }} </p>\n</div>\n\n<hr />\n\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\" cdkFocusInitial>Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: more-vert-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User more-vert-dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PutDialogComponent } from '../../../user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../../../user-admin-patch-dialog/patch-dialog.component'\n\n@Component({\n  selector: 'app-more-vert-dialog',\n  templateUrl: './more-vert-dialog.component.html',\n  styleUrls: ['./more-vert-dialog.component.css']\n})\nexport class MoreVertDialogComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, private cookieService: CookieService) { }\n\n  ngOnInit(): void {\n  }\n  update() {\n    this.dialog.open(PutDialogComponent)\n   }\n   delete() {\n    this.dialog.open(PatchDialogComponent)\n  } \n}\n","<mat-card>\n    <mat-card-title>\n        <p>User Actions</p>\n    </mat-card-title>\n    <mat-card-actions style=\"align-items: center\">\n        <button mat-button mat-dialog-close (click)=\"update()\"><mat-icon class=\"material-icons\">update</mat-icon></button>\n        <button mat-button mat-dialog-close (click)=\"delete()\"><mat-icon class=\"material-icons\">delete</mat-icon></button>\n    </mat-card-actions>","/**\n * \n * ================================\n * ; Title: deleteCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for deleting item\n * ================================\n * \n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n\n@Component({\n  selector: 'app-delete-catalog-item',\n  templateUrl: './delete-catalog-item.component.html',\n  styleUrls: ['./delete-catalog-item.component.css']\n})\nexport class DeleteCatalogItemComponent implements OnInit {\n\n  catalogItemId: string;\n  dialogHeader: string;\n  dialogBody: string;\n  constructor(private dialogRef: MatDialogRef<DeleteCatalogItemComponent>,\n    private catalogService: CatalogService,\n    @Inject(MAT_DIALOG_DATA) data) {\n      console.log(data.catalogItem._id);\n      this.catalogItemId = data.catalogItem._id;\n      this.dialogHeader = data.dialogHeader;\n      this.dialogBody = data.dialogBody;\n     }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: updateCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating item\n * ================================\n * \n */\n\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-update-catalog-item',\n  templateUrl: './update-catalog-item.component.html',\n  styleUrls: ['./update-catalog-item.component.css']\n})\nexport class UpdateCatalogItemComponent implements OnInit {\n  title;\n  price;\n  catalogItemId;\n  isDisabled;\n  updateCatalogItemForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient,\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<UpdateCatalogItemComponent>,\n    @Inject(MAT_DIALOG_DATA) data){ \n\n      //set the values passed from the parent component\n      this.title = data.data.title;\n      this.price = data.data.price;\n      this.catalogItemId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n\n      this.updateCatalogItemForm = this.fb.group({\n      //pass the values into the form\n        title: [this.title, Validators.required],\n        price: [this.price, Validators.required],\n        catalogItemId: [this.catalogItemId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n    }\n\n  ngOnInit(): void {\n  }\n\n  updateCatalogItem(){\n    //get the current values from the form\n    const title = this.updateCatalogItemForm.controls.title.value;\n    const price = this.updateCatalogItemForm.controls.price.value;\n    const catalogItemId = this.updateCatalogItemForm.controls.catalogItemId.value;\n    const isDisabled = this.selected;\n\n    //call the service and pass updated form values into the service\n    this.catalogService.updateCatalogItem(catalogItemId, title, price, isDisabled).subscribe( res =>{\n      catalogItemId\n      title\n      price\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateCatalogItemForm\" (ngSubmit)=\"updateCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateCatalogItemForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: updateRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RoleService } from '../../services/role.service';\nimport { MatSelectModule } from '@angular/material/select'\n\n@Component({\n  selector: 'app-update-role-dialog',\n  templateUrl: './update-role-dialog.component.html',\n  styleUrls: ['./update-role-dialog.component.css']\n})\nexport class UpdateRoleDialogComponent implements OnInit {\n  text;\n  roleId;\n  isDisabled;\n  updateRoleForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n  constructor(private roleServce: RoleService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateRoleDialogComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.text = data.data.text;\n    this.roleId = data.data._id;\n    this.isDisabled = data.data.isDisabled;\n    \n    this.updateRoleForm = this.fb.group({\n      text: [this.text, Validators.required],\n      roleId: [this.roleId],\n      isDisabled: [this.isDisabled, Validators.required]\n    });\n  }\n  \n\n  ngOnInit(): void {\n  }\n\nupdateRole(){\n  const text = this.updateRoleForm.controls.text.value;\n  const roleId = this.updateRoleForm.controls.roleId.value;\n  const isDisabled = this.selected;\n\n  this.roleServce.updateRole(roleId, text, isDisabled).subscribe( res => {\n    text\n    roleId\n    isDisabled\n  }, err => {\n    console.log(err);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateRoleForm\" (ngSubmit)=\"updateRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateRoleForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: rolemanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for managing the role management table\n * ================================\n * \n */\n\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\nimport { Role } from '../interfaces/role.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HttpClient } from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { DeleteRecordDialogComponentComponent } from './delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from '../dialogs/create-role-dialog/create-role-dialog.component';\nimport { UpdateRoleDialogComponent } from '../dialogs/update-role-dialog/update-role-dialog.component';\n\n//todo create a taskDialogComponent\n\n\n@Component({\n  selector: 'app-rolemanagement',\n  templateUrl: './rolemanagement.component.html',\n  styleUrls: ['./rolemanagement.component.css']\n})\n\n\n\nexport class RolemanagementComponent implements OnInit {\n  roleDataSource: Role[];\n  displayedColumns: string[] = ['role', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private roleServce: RoleService) { \n    \n    /**\n      * Find All Roles\n      */\n     this.roleServce.findAllRoles().subscribe(res => {\n       this.roleDataSource = res['data'];\n       //console.log(this.roleDataSource);\n     }, err => {\n       console.log(err);\n     })\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * \n   * \n   * SECTION FOR ROLE API (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n \n   //createRoleDialog\n   createRole(){\n     const dialogRef = this.dialog.open(CreateRoleDialogComponent, {\n       data: {\n         \n       },\n       disableClose: true,\n       width: \"800px\"\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'create'){\n        //update the list\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   \n   //updateRoleDialog\n   updateRole(data){\n     console.log(data);\n     const dialogRef = this.dialog.open(UpdateRoleDialogComponent, {\n       data: {\n         data,\n         dialogHeader: 'Updating Role'\n       },\n       disableClose: true,\n       width:'800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if(result === 'update') {\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   //deleteRoleDialog\n  deleteRole(roleId){\n     const dialogRef = this.dialog.open(DeleteRecordDialogComponentComponent, {\n       data: {\n         roleId,\n         dialogHeader: 'Disabling Role',\n         dialogBody: `Are you sure you want to disable role ${roleId}?`\n       },\n       disableClose: true,\n       width: '800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'confirm') {\n         this.roleServce.deleteRole(roleId).subscribe(res => {\n           //console.log('Role successfully deleted')\n           //make another call to update the list\n           this.roleServce.findAllRoles().subscribe(res => {\n            this.roleDataSource = res['data'];\n            console.log(this.roleDataSource);\n          }, err => {\n            console.log(err);\n          })\n         })\n       }\n     })\n  }\n\n\n   \n}\n","\n<p>Roles <button mat-button class=\"crudButton\"(click)=\"createRole()\"><mat-icon class=\"matieral-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"roleDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.text}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateRole(element)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteRole(element._id)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: update-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: Security Question Update Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-update-securityquestion-dialog',\n  templateUrl: './update-securityquestion-dialog.component.html',\n  styleUrls: ['./update-securityquestion-dialog.component.css']\n})\nexport class UpdateSecurityquestionDialogComponent implements OnInit {\n\n  questionId;\n  securityQuestionId;\n  isDisabled;\n  updateSecurityQuestionForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) {\n\n      this.questionId = data.data.questionId;\n      this.securityQuestionId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n      this.updateSecurityQuestionForm = this.fb.group({\n        questionId: [this.questionId, Validators.required],\n        securityQuestionId: [this.securityQuestionId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n     }\n\n  ngOnInit(): void {\n  }\n\n  updateSecurityQuestion() {\n    const questionId = this.updateSecurityQuestionForm.controls.questionId.value;\n    const securityQuestionId = this.updateSecurityQuestionForm.controls.securityQuestionId.value;\n    const isDisabled = this.selected;\n\n    this.SecurityQuestionService.updateSecurityQuestion(securityQuestionId, questionId, isDisabled).subscribe( res => {\n      securityQuestionId\n      questionId\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n\n\n\n\n\n\n\n \n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateSecurityQuestionForm\" (ngSubmit)=\"updateSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Enter security question\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateSecurityQuestionForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: role.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for interfacing with our apis for the role-management\n *  component\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Role } from '../interfaces/role.interface'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  //import http client\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find All Roles\n   * \n   */\n   findAllRoles(): Observable<any>{\n     return this.http.get(`/api/roles/`);\n   }\n\n   /**\n   * \n   * Find Role By ID\n   * \n   */\n  findRoleById(roleId: string): Observable<any>{\n    return this.http.get(`/api/roles/${roleId}`)\n  }\n\n\n   /**\n    * \n    * Create Role\n    * \n    */\ncreateRole(text: Role): Observable<any>{\n  return this.http.post(`/api/roles/`, {\n    text: text \n  })\n}\n\n\n  /**\n   * \n   * Update Role\n   * \n   */\nupdateRole(roleId: String, text: Role, isDisabled: Boolean): Observable<any>{\n  return this.http.put(`/api/roles/${roleId}/update`, {\n    text,\n    isDisabled\n  })\n}\n\n  /**\n   * \n   * Delete Role\n   * \n   */\n  deleteRole(roleId: String): Observable<any>{\n    return this.http.patch(`/api/roles/${roleId}`,{\n      roleId\n    })\n  }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/**\n * \n * ================================\n * ; Title: pricing.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for pricing page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pricing',\n  templateUrl: './pricing.component.html',\n  styleUrls: ['./pricing.component.css']\n})\nexport class PricingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pricing works!</p>\n","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(private router: Router, \n    private cookieService: CookieService, \n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar) { \n\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  signin(){\n    const username = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    console.log(username);\n    console.log(password);\n    \n\n    this.http.post('/api/session/signin', {\n      username,\n      password\n    }).subscribe(res => {\n      console.log(res['data'].username);\n      if (res['data'].username){\n        //user authenticated\n        this.cookieService.set('sessionuser', res['data'].username, 1);\n        this.router.navigate(['/']);\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n        this.openSnackBar(this.errorMessage);\n    });\n  }\n\n\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n  }\n}\n","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n            <!--LOGO-->\n            <div fxFlex>\n                <img src=\"./assets/logo.png\" class=\"logo\">\n            </div>\n\n            <!--SigninForm-->\n            <div fxFlex class=\"signInFormStuff\">\n                <form [formGroup]=\"form\" \n                      (ngSubmit)=\"signin(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                    <mat-form-field>\n                        <mat-label>Username</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['userName']\" \n                               placeholder=\"username\" >\n                      </mat-form-field><br />\n                      <mat-form-field>\n                        <mat-label>Password</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['password']\"\n                               placeholder=\"password\">\n                      </mat-form-field>\n                      <p>\n                        <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Sign-in</button>\n                      </p>\n                </form>\n            </div>\n\n            <!--Forgot-->\n            <div fxFlex>\n               <a routerLink=\"/\">Forgot Password?</a>\n            </div>\n            \n\n            <!--Divider-->\n            <div fxFlex>\n                <hr class=\"divider\">\n            </div>\n\n             <!--Signup Password-->\n            <div fxFlex class=\"signUpSection\">\n                    <a routerLink=\"/session/createAccount\">Sign Up</a>\n            </div>\n        </div>\n    </mat-card-content>\n    </mat-card>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: put-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User put dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-put-dialog',\n  templateUrl: './put-dialog.component.html',\n  styleUrls: ['./put-dialog.component.css']\n})\nexport class PutDialogComponent implements OnInit {\n  updatedUserForm: FormGroup\n  user: any\n  constructor(private cookieService: CookieService, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.updatedUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n   /* let id = this.cookieService.get('updateId')\n    this.http.get(`http://localhost:3000/api/user/${id}`).subscribe(user => {\n      this.user = user['data']\n    }) */\n  }\n  updateUser() {\n    let updatedUser = {\n      username: this.updatedUserForm.get('username').value,\n      password: this.updatedUserForm.get('password').value,\n      firstName: this.updatedUserForm.get('firstName').value,\n      lastName: this.updatedUserForm.get('lastName').value,\n      address: this.updatedUserForm.get('address').value,\n      email: this.updatedUserForm.get('email').value,\n      phoneNumber: this.updatedUserForm.get('phoneNumber').value\n    }\n    let id = this.cookieService.get('id')\n    this.http.put(`http://localhost:3000/api/users/${id}`, updatedUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"UPDATE Success\")\n    })\n    this.updatedUserForm.reset();\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"updateUser()\" [formGroup]=\"updatedUserForm\">\n        <mat-card-title>\n            <h1>Update User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-dialog-actions>\n                <button mat-button mat-dialog-close>Cancel</button>\n                <button type=\"submit\"mat-button mat-dialog-close>Update User</button>\n            </mat-dialog-actions>\n            <br>\n            <br>\n        </form>\n    </mat-card-content>\n    </mat-card>","/**\n * \n * ================================\n * ; Title: contact.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for contact page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","/**\n * \n * ================================\n * ; Title: security-question.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: component responsible for interfacing with our apis for the security-question\n *  component\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  /**\n   * \n   * Find All Security Questions\n   * \n   */\n    findAllSecurityQuestions(): Observable<any> {\n      return this.http.get(`/api/securityQuestions/`);\n    }\n   /**\n   * \n   * Find Security Question by ID\n   * \n   */\n\n  findSecurityQuestionById(_id: string): Observable<any> {\n    return this.http.get('/api/securityQuestions/' + _id);\n  }\n  \n\n   /**\n    * \n    * Create Security Question\n    * \n    */\n\n createSecurityQuestion(questionId: string): Observable<any> {\n  return this.http.post('/api/securityQuestions/', {\n    questionId\n  })\n}\n\n  /**\n   * \n   * Update Security Question\n   * \n   */\n\n   updateSecurityQuestion(_id: string, questionId: string, isDisabled: boolean): Observable<any> {\n   return this.http.put('/api/securityQuestions/'+ _id, {\n    questionId,\n    isDisabled\n    })\n  }\n\n\n\n\n  /**\n   * \n   * Delete Security Question\n   * \n   */\n\n   deleteSecurityQuestion(questionId: string): Observable<any> {\n     return this.http.patch('/api/securityQuestions/' + questionId, {\n       //isDisabled: true\n       questionId\n     });\n   }\n\n}\n\n\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PostDialogComponent } from '../app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component';\nimport { PutDialogComponent } from '../app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component';\nimport { PatchDialogComponent } from '../app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component';\nimport { RolemanagementComponent } from './pages/administration/rolemanagement/rolemanagement.component';\nimport { CatalogmanagementComponent } from './pages/administration/catalogmanagement/catalogmanagement.component';\nimport { PurchasegraphComponent } from './pages/administration/purchasegraph/purchasegraph.component';\nimport { SecurityquestionmanagementComponent } from './pages/administration/securityquestionmanagement/securityquestionmanagement.component';\nimport { UserManagementComponent } from '../app/pages/administration/usermanagement/usermanagement.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DeleteRecordDialogComponentComponent } from './pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from './pages/administration/dialogs/create-role-dialog/create-role-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from './pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { DeleteSecurityquestionDialogComponent } from './pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { UpdateRoleDialogComponent } from './pages/administration/dialogs/update-role-dialog/update-role-dialog.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MoreVertDialogComponent } from './pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CreateCatalogItemComponent } from './pages/administration/dialogs/create-catalog-item/create-catalog-item.component';\nimport { UpdateCatalogItemComponent } from './pages/administration/dialogs/update-catalog-item/update-catalog-item.component';\nimport { DeleteCatalogItemComponent } from './pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateSecurityquestionDialogComponent } from './pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component'\nimport { MatStepperModule } from '@angular/material/stepper'\nimport { ScrollingModule } from '@angular/cdk/scrolling'\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SigninComponent,\n    AdministrationComponent,\n    NotFoundComponent,\n    ProfileComponent,\n    ContactComponent,\n    PricingComponent,\n    AboutComponent,\n    PostDialogComponent,\n    PutDialogComponent,\n    PatchDialogComponent,\n    RolemanagementComponent,\n    CatalogmanagementComponent,\n    PurchasegraphComponent,\n    SecurityquestionmanagementComponent,\n    UserManagementComponent,\n    DeleteRecordDialogComponentComponent,\n    CreateRoleDialogComponent,\n    CreateSecurityquestionDialogComponent,\n    DeleteSecurityquestionDialogComponent,\n    UpdateRoleDialogComponent,\n    MoreVertDialogComponent,\n    CreateCatalogItemComponent,\n    UpdateCatalogItemComponent,\n    DeleteCatalogItemComponent,\n    UpdateSecurityquestionDialogComponent,\n    CreateAccountComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatTableModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatStepperModule,\n    ScrollingModule\n  ],\n  providers: [ CookieService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * \n * ================================\n * ; Title: purchasegraph.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for purchase graph\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-purchasegraph',\n  templateUrl: './purchasegraph.component.html',\n  styleUrls: ['./purchasegraph.component.css']\n})\nexport class PurchasegraphComponent implements OnInit {\n\n  constructor() { \n    /**\n       * Find All purchases\n       */\n  }\n\n  ngOnInit(): void {\n  }\n\n   /**\n   * \n   * SECTION FOR PURCHASES APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n  \n\n}\n","<p>Purchase Graph</p><br /><br /><br /><br />\n<h1>Coming Soon</h1>\n<br /><br /><br />","/**\n * \n * ================================\n * ; Title: post-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User post dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  createUserForm: any\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.createUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n  }\n  createUser() {\n    let newUser = {\n      username: this.createUserForm.get('username').value,\n      password: this.createUserForm.get('password').value,\n      firstName: this.createUserForm.get('firstName').value,\n      lastName: this.createUserForm.get('lastName').value,\n      address: this.createUserForm.get('address').value,\n      email: this.createUserForm.get('email').value,\n      phoneNumber: this.createUserForm.get('phoneNumber').value\n    }\n    this.http.post('http://localhost:3000/api/users', newUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"POST SUCCESS\")\n    }) \n    this.createUserForm.reset();\n  }\n  cancel() {\n\n  }\n}\n","<div fxLayout=\"column\">\n<mat-card class=\"mat-elevation-z8\">\n    <mat-card-title>Create User</mat-card-title>\n    <br />\n        <form (ngSubmit)=\"createUser()\" [formGroup]=\"createUserForm\">\n        <mat-card-content>\n            <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n               \n                <mat-form-field>\n                    <input type=\"text\" \n                           matInput\n                           placeholder=\"enter role name\"\n                           formControlName=\"text\">\n                </mat-form-field>\n\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. rjackson25\" formControlName=\"username\" />\n            </mat-form-field>\n     \n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n            \n                <input matInput placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n      \n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n        \n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n         \n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n        </div>\n        </mat-card-content>\n       \n            <mat-dialog-actions align=\"end\">\n                <button mat-raised-button (click)=\"cancel()\" color=\"primary\" mat-dialog-close>Cancel</button>\n                <button type=\"submit\" mat-raised-button color=\"primary\" mat-dialog-close>Create User</button>\n            </mat-dialog-actions>\n            <br />\n        </form>\n    </mat-card>\n\n</div>","/**\n * \n * ================================\n * ; Title: deleteRecordDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-record-dialog-component',\n  templateUrl: './delete-record-dialog-component.component.html',\n  styleUrls: ['./delete-record-dialog-component.component.css']\n})\nexport class DeleteRecordDialogComponentComponent implements OnInit {\n\n  recordId: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.recordId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: securityquestionmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for admin security question page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { SecurityQuestionService } from '../services/security-question.service';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\nimport { FormGroup } from '@angular/forms';\nimport { DeleteSecurityquestionDialogComponent } from '../dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from '../dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { UpdateSecurityquestionDialogComponent } from '../dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-securityquestionmanagement\",\n  templateUrl: \"./securityquestionmanagement.component.html\",\n  styleUrls: [\"./securityquestionmanagement.component.css\"],\n})\nexport class SecurityquestionmanagementComponent implements OnInit {\n  securityQuestions: SecurityQuestion[];\n  questionId: string;\n  displayedColumns: string[] = [\"question\", \"status\", \"action\"];\n\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private securityQuestionService: SecurityQuestionService\n  ) {\n    /**\n     * Find all Security Questions\n     */\n\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\n      (res) => {\n        this.securityQuestions = res[\"data\"];\n        console.log(res);\n        //console.log(this.securityQuestionService);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   *\n   * SECTION FOR SECURITY QUESTION API CALLS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n\n  //createSecurityQuestionDialog\n  createSecurityQuestion(){\n    const dialogRef = this.dialog.open(CreateSecurityquestionDialogComponent, {\n      data: {\n        \n      },\n      disableClose: true,\n      width: \"800px\"\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n\n       this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n         this.securityQuestions = res['data'];\n         console.log(this.securityQuestions);\n       }, err => {\n         console.log(err);\n       })\n      }\n    })\n  }\n\n\n\n  //updateSecurityQuestionDialog\n\n updateSecurityQuestion(data){\n  console.log(data);\n  const dialogRef = this.dialog.open(UpdateSecurityquestionDialogComponent, {\n    data: {\n      data,\n      dialogHeader: 'Update Security Question'\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if(result === 'update'){\n      \n      this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n        this.securityQuestions = res['data'];\n        console.log(this.securityQuestions);\n      }, err => {\n        console.log(err);\n      })\n    }\n  })\n}\n\n\n\n  //deleteSecurityQuestionDialog\n\n  deleteSecurityQuestion(questionId){\n  const dialogRef = this.dialog.open(DeleteSecurityquestionDialogComponent, {\n    data: {\n      questionId,\n      dialogHeader: 'Disabling Question',\n      dialogBody: `Are you sure you want to disable security question ${questionId}?`\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if (result == 'confirm') {\n      console.log(questionId)\n      this.securityQuestionService.deleteSecurityQuestion(questionId).subscribe(res => {\n        console.log('Security question successfully disabled')\n        this.securityQuestionService.findAllSecurityQuestions().subscribe(res=> {\n          this.securityQuestions = res['data'];\n          console.log(this.securityQuestions);\n        }, err => {\n          console.log(err);\n        })\n      })\n    }\n  })\n\n}\n  \n}\n","<!--JB moved this p tag and button in here for grouping purposes-->\n<p>Security Questions<button mat-button class=\"crudButton\" (click)=\"createSecurityQuestion()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n\n<table mat-table [dataSource]=\"securityQuestions\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"question\">\n    <th mat-header-cell *matHeaderCellDef> Question </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.questionId}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"action\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"updateSecurityQuestion(element)\">\n          <mat-icon>edit</mat-icon>\n          <span>Edit</span>\n        </button>\n        <button mat-menu-item (click)=\"deleteSecurityQuestion(element._id)\">\n          <mat-icon>delete</mat-icon>\n          <span>Disable</span>\n        </button>\n      </mat-menu>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","/**\n * \n * ================================\n * ; Title: patch-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User patch dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-patch-dialog',\n  templateUrl: './patch-dialog.component.html',\n  styleUrls: ['./patch-dialog.component.css']\n})\nexport class PatchDialogComponent implements OnInit {\n\n  constructor(private cookieService: CookieService, private http: HttpClient) { }\n\n  ngOnInit() { }\n  cancel() {\n\n  }\n  delete() {\n    let id = this.cookieService.get('id')\n    this.http.patch(`http://localhost:3000/api/users/${id}`, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n     else console.log(\"DELETE Success\")\n   }) \n  }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title class=\"text-center\">\n            <h1>Delete User</h1>\n        </mat-card-title>\n        <mat-card-actions>\n            <button mat-button (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"delete()\" mat-dialog-close>Delete User</button>\n        </mat-card-actions>\n    </mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: usermanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User mgmt component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PostDialogComponent } from '../dialogs/user-admin-post-dialog/post-dialog.component'\nimport { PutDialogComponent } from '../dialogs/user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../dialogs/user-admin-patch-dialog/patch-dialog.component'\nimport { RoleService } from '../services/role.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MoreVertDialogComponent } from '../dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n@Component({\n  selector: 'app-usermanagement',\n  templateUrl: './usermanagement.component.html',\n  styleUrls: ['./usermanagement.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n  displayedColumns: any = [ 'username', 'fistName', 'lastName', 'phoneNumber', 'address','isDisabled', 'actions']\n\n  constructor(public dialog: MatDialog, private http: HttpClient, private roleService: RoleService, private cookieService: CookieService) { }\n\n\n  ngOnInit() {\n    //Begin Brendans code\n    this.http.get('http://localhost:3000/api/users', httpOptions).subscribe(data => {\n      this.users = data['data'];\n      console.log(this.users)\n    })\n    //end Brendans code\n   }\n\n   /**Begin Brendans code */\n   post() {\n     const dialogRef = this.dialog.open(PostDialogComponent, {\n      disableClose: true,\n      width:'800px'});\n      //added by JB 10/28. After user is submitted, refresh the user list.\n      dialogRef.afterClosed().subscribe(result => {\n        this.http.get('http://localhost:3000/api/users', httpOptions).subscribe(data => {\n      this.users = data['data'];\n      console.log(this.users)\n    })\n      })\n   }\n  options(user) {\n    this.cookieService.set('id', user._id)\n    this.dialog.open(MoreVertDialogComponent)\n  }\n  }","<p>User Management\n        <button mat-button id=\"post\" (click)=\"post()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p>\n    <!--- Username Column -->\n    <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\" >\n        <ng-container matColumnDef=\"username\">\n            <th mat-header-cell *matHeaderCellDef>Username</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.username }}\n            </td>\n        </ng-container>\n        <!--- First Name Column -->\n        <ng-container matColumnDef=\"fistName\">\n            <th mat-header-cell *matHeaderCellDef>First Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.firstName }}\n            </td>\n        </ng-container>\n        <!--- Last Name Column -->\n        <ng-container matColumnDef=\"lastName\">\n            <th mat-header-cell *matHeaderCellDef>Last Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.lastName }}\n            </td>\n        </ng-container>\n        <!--- Phone Number Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th mat-header-cell *matHeaderCellDef>Phone Number</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.phoneNumber }}\n            </td>\n        </ng-container>\n        <!--- Address Column -->\n        <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef>Address</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.address }}\n            </td>\n        </ng-container>\n        <!--- isDisabled Column -->\n        <ng-container matColumnDef=\"isDisabled\">\n            <th mat-header-cell *matHeaderCellDef>isDisabled?</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.isDisabled }}\n            </td>\n        </ng-container>\n        <!--- Actions Column -->\n        <ng-contaoner matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n                <td mat-cell *matCellDef=\"let user\">\n                    <button mat-button (click)=\"options(user)\"><mat-icon>more_vert</mat-icon></button>\n                </td>\n        </ng-contaoner>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>","/**\n * \n * ================================\n * ; Title: about.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for about page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","/**\n * \n * ================================\n * ; Title: create-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Create Security Question Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-create-securityquestion-dialog',\n  templateUrl: './create-securityquestion-dialog.component.html',\n  styleUrls: ['./create-securityquestion-dialog.component.css']\n})\nexport class CreateSecurityquestionDialogComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private dialogRef: MatDialogRef<CreateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) { }\n\n    questionId: string;\n    createSecurityQuestionForm: FormGroup;\n    enteredQuestionId: any [];\n\n\n  ngOnInit(): void {\n    this.createSecurityQuestionForm = this.fb.group({\n      questionId: ['', Validators.required]\n    })\n  }\n\n createSecurityQuestion(){\n  \n  const questionId = this.createSecurityQuestionForm.controls.questionId.value;\n\n  console.log(questionId);\n  this.SecurityQuestionService.createSecurityQuestion(questionId).subscribe( res => {\n    questionId\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the security question. Please ensure the question doesn't already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"createSecurityQuestionForm\" (ngSubmit)=\"createSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Example: What was your first pet?\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createSecurityQuestionForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: catalog.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: service for catalog api requests\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Catalog } from '../interfaces/catalog.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n     * \n     * Find All Items\n     * \n     */\n    findAllCatalogItems(): Observable<any>{\n      return this.http.get('/api/catalog/');\n    }\n\n    /**\n     * \n     * Find Item By Id\n     * \n     */\n    findCatalogItemById(catalogId: string): Observable<any>{\n      return this.http.get(`/api/catalog/${catalogId}`)\n    }\n\n    /**\n     * \n     * Create Item\n     * \n     */\n    createCatalogItem(title: string, price: number): Observable<any>{\n      return this.http.post('/api/catalog/',{\n        title,\n        price\n      })\n    }\n\n    /**\n     * \n     * Update Item\n     * \n     */\n    updateCatalogItem(catalogItemId: string, title: string, price:number, isDisabled: boolean): Observable<any>{\n      return this.http.put(`/api/catalog/${catalogItemId}/update`,{\n        title,\n        price,\n        isDisabled\n      })\n    }\n\n    /**\n     * \n     * Delete Item\n     * \n     */\n    deleteCatalogItem(catalogId: string): Observable<any>{\n      return this.http.patch(`/api/catalog/${catalogId}`,{\n        //nothing needs to be passed since we have the disable written at the api level\n      })\n    }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();\n  \n  constructor(private cookieService: CookieService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  singOut(){\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/signin']);\n  }\n\n}\n","<div fxLayout=\"column\" class=\"pageContainer\">\n\n  <!-- navigation -->\n  <nav fxFlex> \n    <mat-toolbar fxFlex>\n      <img src=\"./assets/logo2.png\" class=\"brandLogo\" routerLink=\"/\">\n      <a class=\"navbar-link\" routerLink=\"/about\">About</a>\n      <a class=\"navbar-link\" routerLink=\"/pricing\">Pricing</a>\n      <a class=\"navbar-link\" routerLink=\"/contact\">Contact Us</a>\n      <a class=\"navbar-link\" routerLink=\"/profile\">Profile</a>\n      <a class=\"navbar-link\" routerLink=\"/admin\">Administration</a>\n      <span></span>\n      <span class=\"example-spacer\"></span>\n      <a class=\"navbar-link\" routerLink=\"/\" (click)=\"singOut()\">Sign Out</a>\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <br /><br /><br />\n      <router-outlet></router-outlet>\n      <br /><br /><br />\n    </main>\n  </div>\n  <!-- footer -->\n  <div fxFlex >\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content footerStyle\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'pricing',\n        component: PricingComponent\n      },\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'admin',\n        component: AdministrationComponent\n      },\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      }\n    ],\n        canActivate: [AuthGuard]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent\n      },\n      {\n        path:'createAccount',\n        component: CreateAccountComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: '/not-found'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}