{"version":3,"sources":["webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/administration/administration.component.ts","webpack:///src/app/pages/administration/administration.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/pages/administration/services/role.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/pages/pricing/pricing.component.ts","webpack:///src/app/pages/pricing/pricing.component.html","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/post-dialog/post-dialog.component.ts","webpack:///src/app/pages/post-dialog/post-dialog.component.html","webpack:///src/app/pages/patch-dialog/patch-dialog.component.ts","webpack:///src/app/pages/patch-dialog/patch-dialog.component.html","webpack:///src/app/pages/put-dialog/put-dialog.component.ts","webpack:///src/app/pages/put-dialog/put-dialog.component.html","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","selector","templateUrl","styleUrls","httpOptions","headers","AdministrationComponent","dialog","http","roleService","cookieService","get","subscribe","users","data","postRef","open","putRef","patchRef","post","AuthLayoutComponent","environment","production","AuthGuard","router","route","state","isAuthenticated","navigate","providedIn","RoleService","AppComponent","template","styles","PricingComponent","SigninComponent","fb","form","group","userName","compose","required","password","username","controls","value","console","log","res","set","err","errorMessage","error","message","signin","ContactComponent","ProfileComponent","AppModule","declarations","imports","providers","bootstrap","PostDialogComponent","createUserForm","firstName","lastName","address","email","phoneNumber","newUser","reset","createUser","cancel","PatchDialogComponent","PutDialogComponent","AboutComponent","BaseLayoutComponent","year","Date","now","deleteAll","singOut","NotFoundComponent","routes","path","component","children","canActivate","redirectTo","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","exports","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"main-welcome\">\n  <h1 class=\"title\">\n    Welcome to WEB 450's - Bob's Computer Repair Shop <br />\n    <span class=\"subtitle\">\n      Pay close attention to the requirements, double and triple check the files for code attribution, and do not wait unitl the last minute to begin working on each item.\n    </span>\n  </h1>\n</div>\n","/**\n * \n * ================================\n * ; Title: administration.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for administration page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PostDialogComponent } from '../post-dialog/post-dialog.component'\nimport { PutDialogComponent } from '../put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../patch-dialog/patch-dialog.component'\nimport { Observable } from 'rxjs'\nimport { RoleService } from './services/role.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nconst httpOptions ={\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.css']\n})\n\n\nexport class AdministrationComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n  userId: string;\n\n\n  constructor(public dialog: MatDialog, private http: HttpClient, private roleService: RoleService, private cookieService: CookieService) { \n\n    /**All find all operations need to go here since \n       we are loading them each time the user visits the admin page.\n    */\n\n    /**\n     * Find all Users\n     */\n\n\n     /**\n     * Find all Security Questions\n     */\n\n     /**\n      * Find All Roles\n      */\n\n      /**\n       * \n       * Find all Catalog Items\n       */\n\n      /**\n       * Find All purchases\n       */\n  }\n\n\n  ngOnInit() {\n    //Begin Brendans code\n    this.http.get<any>('http://localhost:3000/api/users', httpOptions).subscribe(users => {\n      this.users = users.data;\n    })\n    //end Brendans code\n   }\n\n   /**Begin Brendans code */\n   post() {\n     let postRef = this.dialog.open(PostDialogComponent)\n   }\n   update() {\n    let putRef = this.dialog.open(PutDialogComponent)\n   }\n   delete() {\n    let patchRef = this.dialog.open(PatchDialogComponent)\n   }\n   ///**End Brendans code */\n\n\n\n   /**\n    * \n    * SECITION FOR USER MANAGEMENT API CALLS (create, update, delete)\n    * \n    */\n\n\n    /**\n    * \n    * SECITION FOR SECURITY QUESTION API CALLS (create, update, delete)\n    * \n    */\n\n  /**\n   * \n   * \n   * SECTION FOR ROLE API (create, update, delete)\n   * \n   */\n\n\n  /**\n   * \n   * SECTION FOR CATALOG APIS (create, update, delete)\n   * \n   * \n   */\n\n\n  /**\n   * \n   * SECTION FOR PURCHASES APIS (create, update, delete)\n   * \n   */\n  \n}\n","<h1>Account Administration</h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-content>\n            <div fxLayout=\"column\">\n\n\n\n<!--USER management column-->\n    <div fxFlex class=\"childColumnContainers\">\n        <p>User Management</p><button mat-button id=\"post\" (click)=\"post()\"><mat-icon>open_in_new</mat-icon></button>\n      <table class=\"table\" style=\"text-align: center\">\n            <thead>\n            <tr>\n                    <th scope=\"col\">Username</th>\n                    <th scope=\"col\">First Name</th>  \n                    <th scope=\"col\">Last Name</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Address</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let user of users\">\n                    <td scope=\"row\">{{ user.username }}</td>\n                    <td scope=\"row\">{{ user.firstName }}</td>\n                    <td scope=\"row\">{{ user.lastName }}</td>\n                    <td scope=\"row\">{{ user.phoneNumber }}</td>\n                    <td scope=\"row\">{{ user.address }}</td>\n                    <td scope=\"row\">{{ user.email }}</td>\n                    <td scope=\"row\"><button mat-button (click)=\"update()\"><mat-icon class=\"material-icons\">update</mat-icon></button><button mat-button (click)=\"delete()\"><mat-icon class=\"material-icons\">delete</mat-icon></button></td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n\n\n\n<!--Security questions and Role Management Column-->\n    <div fxFlex class=\"childColumnContainers\">\n        <div fxLayout=\"row\">\n            <div fxFlex class=\"childRowContainers\">\n<!--Security questions go here-->\n               <p>Security Questions</p>\n            </div>\n\n            <div fxFlex class=\"childRowContainers\">\n<!--Role Management Goes here-->\n                <p>Role Management</p>\n            </div>\n        </div>\n    </div>\n\n\n\n\n\n<!--Catalog and purchases graph column-->\n    <div fxFlex class=\"childColumnContainers\">\n        <div fxLayout=\"row\">\n            <div fxFlex class=\"childRowContainers\">\n<!--Catalog Goes here-->\n               <p>Catalog</p>\n            </div>\n\n            <div fxFlex class=\"childRowContainers\">\n<!--Purchases Graph goes here-->\n                <p>Purchases</p>\n            </div>\n        </div>\n    </div>\n\n\n\n</div>\n    </mat-card-content>\n</mat-card>\n</div>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * \n * ================================\n * ; Title: auth.guard.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file used for checking if a cookie was set/\n *                user has authorization to access a given page. \n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  //import our cookie service and router so we can use them with this guard\n  constructor(private router: Router, private cookieService: CookieService){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isAuthenticated = this.cookieService.get('sessionuser');\n    if(isAuthenticated){\n      return true;\n    } else {\n    //if no sessionUser is present, then redirect them to the signin page.\n    this.router.navigate(['/session/signin']);\n    return false;\n   }\n  }\n}\n","/**\n * \n * ================================\n * ; Title: role.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for interfacing with our apis for the role-management\n *  component\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Role } from '../interfaces/role.interface'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  //import http client\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find All Roles\n   * \n   */\n\n   /**\n   * \n   * Find Role By ID\n   * \n   */\n\n   /**\n    * \n    * Create Role\n    * \n    */\n\n  /**\n   * \n   * Update Role\n   * \n   */\n\n  /**\n   * \n   * Delete Role\n   * \n   */\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/**\n * \n * ================================\n * ; Title: pricing.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for pricing page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pricing',\n  templateUrl: './pricing.component.html',\n  styleUrls: ['./pricing.component.css']\n})\nexport class PricingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pricing works!</p>\n","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n\n  constructor(private router: Router, private cookieService: CookieService, private fb: FormBuilder, private http: HttpClient) { \n\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  signin(){\n    const username = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    console.log(username);\n    console.log(password);\n    \n\n    this.http.post('/api/session/signin', {\n      username,\n      password\n    }).subscribe(res => {\n      console.log(res['data'].username);\n      if (res['data'].username){\n        //user authenticated\n        this.cookieService.set('sessionuser', res['data'].username, 1);\n        this.router.navigate(['/']);\n      }\n    }, err => {\n      console.log(err);\n      this.errorMessage = err.error.message;\n    });\n  }\n}\n","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n            <!--LOGO-->\n            <div fxFlex>\n                <img src=\"./assets/logo.png\" class=\"logo\">\n            </div>\n\n            <!--SigninForm-->\n            <div fxFlex class=\"signInFormStuff\">\n                <form [formGroup]=\"form\" \n                      (ngSubmit)=\"signin(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                    <mat-form-field>\n                        <mat-label>Username</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['userName']\" \n                               placeholder=\"username\" >\n                      </mat-form-field><br />\n                      <mat-form-field>\n                        <mat-label>Password</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['password']\"\n                               placeholder=\"password\">\n                      </mat-form-field>\n                      <p>\n                        <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Sign-in</button>\n                      </p>\n                </form>\n            </div>\n\n            <!--Forgot Password-->\n            <div fxFlex>\n               <a routerLink=\"/\">Forgot Password?</a>\n            </div>\n            \n            <!--Divider-->\n            <div fxFlex>\n                <hr class=\"divider\">\n            </div>\n\n             <!--Signup Password-->\n            <div fxFlex class=\"signUpSection\">\n                    <button type=\"submit\" \n                            fxFlex \n                            mat-raised-button \n                            color=\"primary\"\n                            >Sign-Up</button>\n            </div>\n        </div>\n    </mat-card-content>\n    </mat-card>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: contact.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for contact page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PostDialogComponent } from './pages/post-dialog/post-dialog.component';\nimport { PutDialogComponent } from './pages/put-dialog/put-dialog.component';\nimport { PatchDialogComponent } from './pages/patch-dialog/patch-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SigninComponent,\n    AdministrationComponent,\n    NotFoundComponent,\n    ProfileComponent,\n    ContactComponent,\n    PricingComponent,\n    AboutComponent,\n    PostDialogComponent,\n    PutDialogComponent,\n    PatchDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatTableModule,\n    MatIconModule\n  ],\n  providers: [ CookieService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  createUserForm: any\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.createUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])]\n    })\n  }\n  createUser() {\n    let newUser = {\n      username: this.createUserForm.get('username').value,\n      firstName: this.createUserForm.get('firstName').value,\n      lastName: this.createUserForm.get('lastName').value,\n      address: this.createUserForm.get('address').value,\n      email: this.createUserForm.get('email').value,\n      phoneNumber: this.createUserForm.get('phoneNumber').value\n    }\n    this.http.post('http://localhost:3000/api/users', newUser, httpOptions).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"POST SUCCESS\")\n    }) \n    this.createUserForm.reset();\n  }\n  cancel() {\n\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"createUser()\" [formGroup]=\"createUserForm\">\n        <mat-card-title>\n            <h1>Create User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username</mat-label>\n                <br>\n                <input class=\"text-center\" placeholder=\"Ex. rjackson25\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name</mat-label>\n                <br>\n                <input class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name</mat-label>\n                <br>\n                <input class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address</mat-label>\n                <br>\n                <input class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email</mat-label>\n                <br>\n                <input class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number</mat-label>\n                <br>\n                <input class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <br>\n            <mat-dialog-actions>\n                <button class=\"btn btn-danger\" (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n                <button type=\"submit\" class=\"btn btn-success\" mat-dialog-close>Create User</button>\n            </mat-dialog-actions>\n            <br>\n        </form>\n    </mat-card-content>\n    </mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patch-dialog',\n  templateUrl: './patch-dialog.component.html',\n  styleUrls: ['./patch-dialog.component.css']\n})\nexport class PatchDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>patch-dialog works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-put-dialog',\n  templateUrl: './put-dialog.component.html',\n  styleUrls: ['./put-dialog.component.css']\n})\nexport class PutDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>does this work?</h1>","/**\n * \n * ================================\n * ; Title: about.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for about page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();\n  \n  constructor(private cookieService: CookieService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  singOut(){\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/signin']);\n  }\n\n}\n","<div fxLayout=\"column\">\n\n  <!-- navigation -->\n  <nav fxFlex> \n    <mat-toolbar fxFlex>\n      <img src=\"./assets/logo2.png\" class=\"brandLogo\" routerLink=\"/\">\n      <a class=\"navbar-link\" routerLink=\"/about\">About</a>\n      <a class=\"navbar-link\" routerLink=\"/pricing\">Pricing</a>\n      <a class=\"navbar-link\" routerLink=\"/contact\">Contact Us</a>\n      <a class=\"navbar-link\" routerLink=\"/profile\">Profile</a>\n      <a class=\"navbar-link\" routerLink=\"/admin\">Administration</a>\n      <span></span>\n      <span class=\"example-spacer\"></span>\n      <a class=\"navbar-link\" (click)=\"singOut()\">Sign Out</a>\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <br /><br /><br />\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n\n  <!-- footer -->\n  <div fxFlex >\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content footerStyle\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { PricingComponent } from './pages/pricing/pricing.component';\nimport { AboutComponent } from './pages/about/about.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'pricing',\n        component: PricingComponent\n      },\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'admin',\n        component: AdministrationComponent\n      },\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      }\n    ],\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: '/not-found'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}